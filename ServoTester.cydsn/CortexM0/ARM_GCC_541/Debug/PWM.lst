ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PWM.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	PWM_initVar
  20              		.bss
  21              		.type	PWM_initVar, %object
  22              		.size	PWM_initVar, 1
  23              	PWM_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.PWM_Init,"ax",%progbits
  26              		.align	2
  27              		.global	PWM_Init
  28              		.code	16
  29              		.thumb_func
  30              		.type	PWM_Init, %function
  31              	PWM_Init:
  32              	.LFB0:
  33              		.file 1 "Generated_Source\\PSoC4\\PWM.c"
   1:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/PWM.c **** * File Name: PWM.c
   3:Generated_Source\PSoC4/PWM.c **** * Version 2.10
   4:Generated_Source\PSoC4/PWM.c **** *
   5:Generated_Source\PSoC4/PWM.c **** * Description:
   6:Generated_Source\PSoC4/PWM.c **** *  This file provides the source code to the API for the PWM
   7:Generated_Source\PSoC4/PWM.c **** *  component
   8:Generated_Source\PSoC4/PWM.c **** *
   9:Generated_Source\PSoC4/PWM.c **** * Note:
  10:Generated_Source\PSoC4/PWM.c **** *  None
  11:Generated_Source\PSoC4/PWM.c **** *
  12:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  13:Generated_Source\PSoC4/PWM.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/PWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/PWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/PWM.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/PWM.c **** 
  19:Generated_Source\PSoC4/PWM.c **** #include "PWM.h"
  20:Generated_Source\PSoC4/PWM.c **** 
  21:Generated_Source\PSoC4/PWM.c **** uint8 PWM_initVar = 0u;
  22:Generated_Source\PSoC4/PWM.c **** 
  23:Generated_Source\PSoC4/PWM.c **** 
  24:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 2


  25:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Init
  26:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  27:Generated_Source\PSoC4/PWM.c **** *
  28:Generated_Source\PSoC4/PWM.c **** * Summary:
  29:Generated_Source\PSoC4/PWM.c **** *  Initialize/Restore default PWM configuration.
  30:Generated_Source\PSoC4/PWM.c **** *
  31:Generated_Source\PSoC4/PWM.c **** * Parameters:
  32:Generated_Source\PSoC4/PWM.c **** *  None
  33:Generated_Source\PSoC4/PWM.c **** *
  34:Generated_Source\PSoC4/PWM.c **** * Return:
  35:Generated_Source\PSoC4/PWM.c **** *  None
  36:Generated_Source\PSoC4/PWM.c **** *
  37:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  38:Generated_Source\PSoC4/PWM.c **** void PWM_Init(void)
  39:Generated_Source\PSoC4/PWM.c **** {
  34              		.loc 1 39 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
  43              		.cfi_def_cfa_register 7
  40:Generated_Source\PSoC4/PWM.c **** 
  41:Generated_Source\PSoC4/PWM.c ****     /* Set values from customizer to CTRL */
  42:Generated_Source\PSoC4/PWM.c ****     #if (PWM__QUAD == PWM_CONFIG)
  43:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG = PWM_CTRL_QUAD_BASE_CONFIG;
  44:Generated_Source\PSoC4/PWM.c ****         
  45:Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL1 */
  46:Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  = PWM_QUAD_SIGNALS_MODES;
  47:Generated_Source\PSoC4/PWM.c **** 
  48:Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to INTR */
  49:Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_QUAD_INTERRUPT_MASK);
  50:Generated_Source\PSoC4/PWM.c ****         
  51:Generated_Source\PSoC4/PWM.c ****          /* Set other values */
  52:Generated_Source\PSoC4/PWM.c ****         PWM_SetCounterMode(PWM_COUNT_DOWN);
  53:Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_QUAD_PERIOD_INIT_VALUE);
  54:Generated_Source\PSoC4/PWM.c ****         PWM_WriteCounter(PWM_QUAD_PERIOD_INIT_VALUE);
  55:Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__QUAD == PWM_CONFIG) */
  56:Generated_Source\PSoC4/PWM.c **** 
  57:Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
  58:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG = PWM_CTRL_TIMER_BASE_CONFIG;
  59:Generated_Source\PSoC4/PWM.c ****         
  60:Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL1 */
  61:Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  = PWM_TIMER_SIGNALS_MODES;
  62:Generated_Source\PSoC4/PWM.c ****     
  63:Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to INTR */
  64:Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_TC_INTERRUPT_MASK);
  65:Generated_Source\PSoC4/PWM.c ****         
  66:Generated_Source\PSoC4/PWM.c ****         /* Set other values from customizer */
  67:Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_TC_PERIOD_VALUE );
  68:Generated_Source\PSoC4/PWM.c **** 
  69:Generated_Source\PSoC4/PWM.c ****         #if (PWM__COMPARE == PWM_TC_COMP_CAP_MODE)
  70:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompare(PWM_TC_COMPARE_VALUE);
  71:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 3


  72:Generated_Source\PSoC4/PWM.c ****             #if (1u == PWM_TC_COMPARE_SWAP)
  73:Generated_Source\PSoC4/PWM.c ****                 PWM_SetCompareSwap(1u);
  74:Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCompareBuf(PWM_TC_COMPARE_BUF_VALUE);
  75:Generated_Source\PSoC4/PWM.c ****             #endif  /* (1u == PWM_TC_COMPARE_SWAP) */
  76:Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__COMPARE == PWM_TC_COMP_CAP_MODE) */
  77:Generated_Source\PSoC4/PWM.c **** 
  78:Generated_Source\PSoC4/PWM.c ****         /* Initialize counter value */
  79:Generated_Source\PSoC4/PWM.c ****         #if (PWM_CY_TCPWM_V2 && PWM_TIMER_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000)
  80:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(1u);
  81:Generated_Source\PSoC4/PWM.c ****         #elif(PWM__COUNT_DOWN == PWM_TC_COUNTER_MODE)
  82:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(PWM_TC_PERIOD_VALUE);
  83:Generated_Source\PSoC4/PWM.c ****         #else
  84:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(0u);
  85:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_CY_TCPWM_V2 && PWM_TIMER_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000) */
  86:Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__TIMER == PWM_CONFIG) */
  87:Generated_Source\PSoC4/PWM.c **** 
  88:Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
  89:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG = PWM_CTRL_PWM_BASE_CONFIG;
  44              		.loc 1 89 0
  45 0004 114B     		ldr	r3, .L2
  46 0006 8022     		movs	r2, #128
  47 0008 D204     		lsls	r2, r2, #19
  48 000a 1A60     		str	r2, [r3]
  90:Generated_Source\PSoC4/PWM.c **** 
  91:Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_PR == PWM_PWM_MODE)
  92:Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_RUN_MODE;
  93:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(PWM_PWM_PR_INIT_VALUE);
  94:Generated_Source\PSoC4/PWM.c ****         #else
  95:Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_ALIGN | PWM_CTRL_PWM_KILL_EVENT;
  49              		.loc 1 95 0
  50 000c 0F4B     		ldr	r3, .L2
  51 000e 0F4A     		ldr	r2, .L2
  52 0010 1268     		ldr	r2, [r2]
  53 0012 1A60     		str	r2, [r3]
  96:Generated_Source\PSoC4/PWM.c ****             
  97:Generated_Source\PSoC4/PWM.c ****             /* Initialize counter value */
  98:Generated_Source\PSoC4/PWM.c ****             #if (PWM_CY_TCPWM_V2 && PWM_PWM_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000)
  99:Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCounter(1u);
 100:Generated_Source\PSoC4/PWM.c ****             #elif (PWM__RIGHT == PWM_PWM_ALIGN)
 101:Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCounter(PWM_PWM_PERIOD_VALUE);
 102:Generated_Source\PSoC4/PWM.c ****             #else 
 103:Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCounter(0u);
  54              		.loc 1 103 0
  55 0014 0020     		movs	r0, #0
  56 0016 FFF7FEFF 		bl	PWM_WriteCounter
 104:Generated_Source\PSoC4/PWM.c ****             #endif  /* (PWM_CY_TCPWM_V2 && PWM_PWM_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000) */
 105:Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_PR == PWM_PWM_MODE) */
 106:Generated_Source\PSoC4/PWM.c **** 
 107:Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_DT == PWM_PWM_MODE)
 108:Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_DEAD_TIME_CYCLE;
 109:Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_DT == PWM_PWM_MODE) */
 110:Generated_Source\PSoC4/PWM.c **** 
 111:Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM == PWM_PWM_MODE)
 112:Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_PRESCALER;
  57              		.loc 1 112 0
  58 001a 0C4B     		ldr	r3, .L2
  59 001c 0B4A     		ldr	r2, .L2
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 4


  60 001e 1268     		ldr	r2, [r2]
  61 0020 1A60     		str	r2, [r3]
 113:Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM == PWM_PWM_MODE) */
 114:Generated_Source\PSoC4/PWM.c **** 
 115:Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL1 */
 116:Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  = PWM_PWM_SIGNALS_MODES;
  62              		.loc 1 116 0
  63 0022 0B4B     		ldr	r3, .L2+4
  64 0024 C322     		movs	r2, #195
  65 0026 9200     		lsls	r2, r2, #2
  66 0028 1A60     		str	r2, [r3]
 117:Generated_Source\PSoC4/PWM.c ****     
 118:Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to INTR */
 119:Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_PWM_INTERRUPT_MASK);
  67              		.loc 1 119 0
  68 002a 0020     		movs	r0, #0
  69 002c FFF7FEFF 		bl	PWM_SetInterruptMode
 120:Generated_Source\PSoC4/PWM.c **** 
 121:Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL2 */
 122:Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_PR == PWM_PWM_MODE)
 123:Generated_Source\PSoC4/PWM.c ****             PWM_TRIG_CONTROL2_REG =
 124:Generated_Source\PSoC4/PWM.c ****                     (PWM_CC_MATCH_NO_CHANGE    |
 125:Generated_Source\PSoC4/PWM.c ****                     PWM_OVERLOW_NO_CHANGE      |
 126:Generated_Source\PSoC4/PWM.c ****                     PWM_UNDERFLOW_NO_CHANGE);
 127:Generated_Source\PSoC4/PWM.c ****         #else
 128:Generated_Source\PSoC4/PWM.c ****             #if (PWM__LEFT == PWM_PWM_ALIGN)
 129:Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_LEFT;
  70              		.loc 1 129 0
  71 0030 084B     		ldr	r3, .L2+8
  72 0032 3122     		movs	r2, #49
  73 0034 1A60     		str	r2, [r3]
 130:Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_LEFT == PWM_PWM_ALIGN) */
 131:Generated_Source\PSoC4/PWM.c **** 
 132:Generated_Source\PSoC4/PWM.c ****             #if (PWM__RIGHT == PWM_PWM_ALIGN)
 133:Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_RIGHT;
 134:Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_RIGHT == PWM_PWM_ALIGN) */
 135:Generated_Source\PSoC4/PWM.c **** 
 136:Generated_Source\PSoC4/PWM.c ****             #if (PWM__CENTER == PWM_PWM_ALIGN)
 137:Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_CENTER;
 138:Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_CENTER == PWM_PWM_ALIGN) */
 139:Generated_Source\PSoC4/PWM.c **** 
 140:Generated_Source\PSoC4/PWM.c ****             #if (PWM__ASYMMETRIC == PWM_PWM_ALIGN)
 141:Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_ASYM;
 142:Generated_Source\PSoC4/PWM.c ****             #endif  /* (PWM__ASYMMETRIC == PWM_PWM_ALIGN) */
 143:Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_PR == PWM_PWM_MODE) */
 144:Generated_Source\PSoC4/PWM.c **** 
 145:Generated_Source\PSoC4/PWM.c ****         /* Set other values from customizer */
 146:Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_PWM_PERIOD_VALUE );
  74              		.loc 1 146 0
  75 0036 8023     		movs	r3, #128
  76 0038 5B00     		lsls	r3, r3, #1
  77 003a 1800     		movs	r0, r3
  78 003c FFF7FEFF 		bl	PWM_WritePeriod
 147:Generated_Source\PSoC4/PWM.c ****         PWM_WriteCompare(PWM_PWM_COMPARE_VALUE);
  79              		.loc 1 147 0
  80 0040 0020     		movs	r0, #0
  81 0042 FFF7FEFF 		bl	PWM_WriteCompare
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 5


 148:Generated_Source\PSoC4/PWM.c **** 
 149:Generated_Source\PSoC4/PWM.c ****         #if (1u == PWM_PWM_COMPARE_SWAP)
 150:Generated_Source\PSoC4/PWM.c ****             PWM_SetCompareSwap(1u);
 151:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompareBuf(PWM_PWM_COMPARE_BUF_VALUE);
 152:Generated_Source\PSoC4/PWM.c ****         #endif  /* (1u == PWM_PWM_COMPARE_SWAP) */
 153:Generated_Source\PSoC4/PWM.c **** 
 154:Generated_Source\PSoC4/PWM.c ****         #if (1u == PWM_PWM_PERIOD_SWAP)
 155:Generated_Source\PSoC4/PWM.c ****             PWM_SetPeriodSwap(1u);
 156:Generated_Source\PSoC4/PWM.c ****             PWM_WritePeriodBuf(PWM_PWM_PERIOD_BUF_VALUE);
 157:Generated_Source\PSoC4/PWM.c ****         #endif  /* (1u == PWM_PWM_PERIOD_SWAP) */
 158:Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__PWM_SEL == PWM_CONFIG) */
 159:Generated_Source\PSoC4/PWM.c ****     
 160:Generated_Source\PSoC4/PWM.c **** }
  82              		.loc 1 160 0
  83 0046 C046     		nop
  84 0048 BD46     		mov	sp, r7
  85              		@ sp needed
  86 004a 80BD     		pop	{r7, pc}
  87              	.L3:
  88              		.align	2
  89              	.L2:
  90 004c 40010540 		.word	1074069824
  91 0050 64010540 		.word	1074069860
  92 0054 68010540 		.word	1074069864
  93              		.cfi_endproc
  94              	.LFE0:
  95              		.size	PWM_Init, .-PWM_Init
  96              		.section	.text.PWM_Enable,"ax",%progbits
  97              		.align	2
  98              		.global	PWM_Enable
  99              		.code	16
 100              		.thumb_func
 101              		.type	PWM_Enable, %function
 102              	PWM_Enable:
 103              	.LFB1:
 161:Generated_Source\PSoC4/PWM.c **** 
 162:Generated_Source\PSoC4/PWM.c **** 
 163:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 164:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Enable
 165:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 166:Generated_Source\PSoC4/PWM.c **** *
 167:Generated_Source\PSoC4/PWM.c **** * Summary:
 168:Generated_Source\PSoC4/PWM.c **** *  Enables the PWM.
 169:Generated_Source\PSoC4/PWM.c **** *
 170:Generated_Source\PSoC4/PWM.c **** * Parameters:
 171:Generated_Source\PSoC4/PWM.c **** *  None
 172:Generated_Source\PSoC4/PWM.c **** *
 173:Generated_Source\PSoC4/PWM.c **** * Return:
 174:Generated_Source\PSoC4/PWM.c **** *  None
 175:Generated_Source\PSoC4/PWM.c **** *
 176:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 177:Generated_Source\PSoC4/PWM.c **** void PWM_Enable(void)
 178:Generated_Source\PSoC4/PWM.c **** {
 104              		.loc 1 178 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 8
 107              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 6


 108 0000 90B5     		push	{r4, r7, lr}
 109              		.cfi_def_cfa_offset 12
 110              		.cfi_offset 4, -12
 111              		.cfi_offset 7, -8
 112              		.cfi_offset 14, -4
 113 0002 83B0     		sub	sp, sp, #12
 114              		.cfi_def_cfa_offset 24
 115 0004 00AF     		add	r7, sp, #0
 116              		.cfi_def_cfa_register 7
 179:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 180:Generated_Source\PSoC4/PWM.c **** 
 181:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 117              		.loc 1 181 0
 118 0006 FC1D     		adds	r4, r7, #7
 119 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 120 000c 0300     		movs	r3, r0
 121 000e 2370     		strb	r3, [r4]
 182:Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG |= PWM_MASK;
 122              		.loc 1 182 0
 123 0010 074B     		ldr	r3, .L5
 124 0012 074A     		ldr	r2, .L5
 125 0014 1268     		ldr	r2, [r2]
 126 0016 0221     		movs	r1, #2
 127 0018 0A43     		orrs	r2, r1
 128 001a 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 129              		.loc 1 183 0
 130 001c FB1D     		adds	r3, r7, #7
 131 001e 1B78     		ldrb	r3, [r3]
 132 0020 1800     		movs	r0, r3
 133 0022 FFF7FEFF 		bl	CyExitCriticalSection
 184:Generated_Source\PSoC4/PWM.c **** 
 185:Generated_Source\PSoC4/PWM.c ****     /* Start Timer or PWM if start input is absent */
 186:Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
 187:Generated_Source\PSoC4/PWM.c ****         #if (0u == PWM_PWM_START_SIGNAL_PRESENT)
 188:Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_START);
 189:Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_PWM_START_SIGNAL_PRESENT) */
 190:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM__PWM_SEL == PWM_CONFIG) */
 191:Generated_Source\PSoC4/PWM.c **** 
 192:Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
 193:Generated_Source\PSoC4/PWM.c ****         #if (0u == PWM_TC_START_SIGNAL_PRESENT)
 194:Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_START);
 195:Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_TC_START_SIGNAL_PRESENT) */
 196:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM__TIMER == PWM_CONFIG) */
 197:Generated_Source\PSoC4/PWM.c ****     
 198:Generated_Source\PSoC4/PWM.c ****     #if (PWM__QUAD == PWM_CONFIG)
 199:Generated_Source\PSoC4/PWM.c ****         #if (0u != PWM_QUAD_AUTO_START)
 200:Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_RELOAD);
 201:Generated_Source\PSoC4/PWM.c ****         #endif /* (0u != PWM_QUAD_AUTO_START) */
 202:Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__QUAD == PWM_CONFIG) */
 203:Generated_Source\PSoC4/PWM.c **** }
 134              		.loc 1 203 0
 135 0026 C046     		nop
 136 0028 BD46     		mov	sp, r7
 137 002a 03B0     		add	sp, sp, #12
 138              		@ sp needed
 139 002c 90BD     		pop	{r4, r7, pc}
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 7


 140              	.L6:
 141 002e C046     		.align	2
 142              	.L5:
 143 0030 00000540 		.word	1074069504
 144              		.cfi_endproc
 145              	.LFE1:
 146              		.size	PWM_Enable, .-PWM_Enable
 147              		.section	.text.PWM_Start,"ax",%progbits
 148              		.align	2
 149              		.global	PWM_Start
 150              		.code	16
 151              		.thumb_func
 152              		.type	PWM_Start, %function
 153              	PWM_Start:
 154              	.LFB2:
 204:Generated_Source\PSoC4/PWM.c **** 
 205:Generated_Source\PSoC4/PWM.c **** 
 206:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 207:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Start
 208:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 209:Generated_Source\PSoC4/PWM.c **** *
 210:Generated_Source\PSoC4/PWM.c **** * Summary:
 211:Generated_Source\PSoC4/PWM.c **** *  Initializes the PWM with default customizer
 212:Generated_Source\PSoC4/PWM.c **** *  values when called the first time and enables the PWM.
 213:Generated_Source\PSoC4/PWM.c **** *  For subsequent calls the configuration is left unchanged and the component is
 214:Generated_Source\PSoC4/PWM.c **** *  just enabled.
 215:Generated_Source\PSoC4/PWM.c **** *
 216:Generated_Source\PSoC4/PWM.c **** * Parameters:
 217:Generated_Source\PSoC4/PWM.c **** *  None
 218:Generated_Source\PSoC4/PWM.c **** *
 219:Generated_Source\PSoC4/PWM.c **** * Return:
 220:Generated_Source\PSoC4/PWM.c **** *  None
 221:Generated_Source\PSoC4/PWM.c **** *
 222:Generated_Source\PSoC4/PWM.c **** * Global variables:
 223:Generated_Source\PSoC4/PWM.c **** *  PWM_initVar: global variable is used to indicate initial
 224:Generated_Source\PSoC4/PWM.c **** *  configuration of this component.  The variable is initialized to zero and set
 225:Generated_Source\PSoC4/PWM.c **** *  to 1 the first time PWM_Start() is called. This allows
 226:Generated_Source\PSoC4/PWM.c **** *  enabling/disabling a component without re-initialization in all subsequent
 227:Generated_Source\PSoC4/PWM.c **** *  calls to the PWM_Start() routine.
 228:Generated_Source\PSoC4/PWM.c **** *
 229:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 230:Generated_Source\PSoC4/PWM.c **** void PWM_Start(void)
 231:Generated_Source\PSoC4/PWM.c **** {
 155              		.loc 1 231 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 1, uses_anonymous_args = 0
 159 0000 80B5     		push	{r7, lr}
 160              		.cfi_def_cfa_offset 8
 161              		.cfi_offset 7, -8
 162              		.cfi_offset 14, -4
 163 0002 00AF     		add	r7, sp, #0
 164              		.cfi_def_cfa_register 7
 232:Generated_Source\PSoC4/PWM.c ****     if (0u == PWM_initVar)
 165              		.loc 1 232 0
 166 0004 064B     		ldr	r3, .L9
 167 0006 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 8


 168 0008 002B     		cmp	r3, #0
 169 000a 04D1     		bne	.L8
 233:Generated_Source\PSoC4/PWM.c ****     {
 234:Generated_Source\PSoC4/PWM.c ****         PWM_Init();
 170              		.loc 1 234 0
 171 000c FFF7FEFF 		bl	PWM_Init
 235:Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
 172              		.loc 1 235 0
 173 0010 034B     		ldr	r3, .L9
 174 0012 0122     		movs	r2, #1
 175 0014 1A70     		strb	r2, [r3]
 176              	.L8:
 236:Generated_Source\PSoC4/PWM.c ****     }
 237:Generated_Source\PSoC4/PWM.c **** 
 238:Generated_Source\PSoC4/PWM.c ****     PWM_Enable();
 177              		.loc 1 238 0
 178 0016 FFF7FEFF 		bl	PWM_Enable
 239:Generated_Source\PSoC4/PWM.c **** }
 179              		.loc 1 239 0
 180 001a C046     		nop
 181 001c BD46     		mov	sp, r7
 182              		@ sp needed
 183 001e 80BD     		pop	{r7, pc}
 184              	.L10:
 185              		.align	2
 186              	.L9:
 187 0020 00000000 		.word	PWM_initVar
 188              		.cfi_endproc
 189              	.LFE2:
 190              		.size	PWM_Start, .-PWM_Start
 191              		.section	.text.PWM_Stop,"ax",%progbits
 192              		.align	2
 193              		.global	PWM_Stop
 194              		.code	16
 195              		.thumb_func
 196              		.type	PWM_Stop, %function
 197              	PWM_Stop:
 198              	.LFB3:
 240:Generated_Source\PSoC4/PWM.c **** 
 241:Generated_Source\PSoC4/PWM.c **** 
 242:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 243:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Stop
 244:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 245:Generated_Source\PSoC4/PWM.c **** *
 246:Generated_Source\PSoC4/PWM.c **** * Summary:
 247:Generated_Source\PSoC4/PWM.c **** *  Disables the PWM.
 248:Generated_Source\PSoC4/PWM.c **** *
 249:Generated_Source\PSoC4/PWM.c **** * Parameters:
 250:Generated_Source\PSoC4/PWM.c **** *  None
 251:Generated_Source\PSoC4/PWM.c **** *
 252:Generated_Source\PSoC4/PWM.c **** * Return:
 253:Generated_Source\PSoC4/PWM.c **** *  None
 254:Generated_Source\PSoC4/PWM.c **** *
 255:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 256:Generated_Source\PSoC4/PWM.c **** void PWM_Stop(void)
 257:Generated_Source\PSoC4/PWM.c **** {
 199              		.loc 1 257 0
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 9


 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 8
 202              		@ frame_needed = 1, uses_anonymous_args = 0
 203 0000 90B5     		push	{r4, r7, lr}
 204              		.cfi_def_cfa_offset 12
 205              		.cfi_offset 4, -12
 206              		.cfi_offset 7, -8
 207              		.cfi_offset 14, -4
 208 0002 83B0     		sub	sp, sp, #12
 209              		.cfi_def_cfa_offset 24
 210 0004 00AF     		add	r7, sp, #0
 211              		.cfi_def_cfa_register 7
 258:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 259:Generated_Source\PSoC4/PWM.c **** 
 260:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 212              		.loc 1 260 0
 213 0006 FC1D     		adds	r4, r7, #7
 214 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 215 000c 0300     		movs	r3, r0
 216 000e 2370     		strb	r3, [r4]
 261:Generated_Source\PSoC4/PWM.c **** 
 262:Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG &= (uint32)~PWM_MASK;
 217              		.loc 1 262 0
 218 0010 074B     		ldr	r3, .L12
 219 0012 074A     		ldr	r2, .L12
 220 0014 1268     		ldr	r2, [r2]
 221 0016 0221     		movs	r1, #2
 222 0018 8A43     		bics	r2, r1
 223 001a 1A60     		str	r2, [r3]
 263:Generated_Source\PSoC4/PWM.c **** 
 264:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 224              		.loc 1 264 0
 225 001c FB1D     		adds	r3, r7, #7
 226 001e 1B78     		ldrb	r3, [r3]
 227 0020 1800     		movs	r0, r3
 228 0022 FFF7FEFF 		bl	CyExitCriticalSection
 265:Generated_Source\PSoC4/PWM.c **** }
 229              		.loc 1 265 0
 230 0026 C046     		nop
 231 0028 BD46     		mov	sp, r7
 232 002a 03B0     		add	sp, sp, #12
 233              		@ sp needed
 234 002c 90BD     		pop	{r4, r7, pc}
 235              	.L13:
 236 002e C046     		.align	2
 237              	.L12:
 238 0030 00000540 		.word	1074069504
 239              		.cfi_endproc
 240              	.LFE3:
 241              		.size	PWM_Stop, .-PWM_Stop
 242              		.section	.text.PWM_SetMode,"ax",%progbits
 243              		.align	2
 244              		.global	PWM_SetMode
 245              		.code	16
 246              		.thumb_func
 247              		.type	PWM_SetMode, %function
 248              	PWM_SetMode:
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 10


 249              	.LFB4:
 266:Generated_Source\PSoC4/PWM.c **** 
 267:Generated_Source\PSoC4/PWM.c **** 
 268:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 269:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetMode
 270:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 271:Generated_Source\PSoC4/PWM.c **** *
 272:Generated_Source\PSoC4/PWM.c **** * Summary:
 273:Generated_Source\PSoC4/PWM.c **** *  Sets the operation mode of the PWM. This function is used when
 274:Generated_Source\PSoC4/PWM.c **** *  configured as a generic PWM and the actual mode of operation is
 275:Generated_Source\PSoC4/PWM.c **** *  set at runtime. The mode must be set while the component is disabled.
 276:Generated_Source\PSoC4/PWM.c **** *
 277:Generated_Source\PSoC4/PWM.c **** * Parameters:
 278:Generated_Source\PSoC4/PWM.c **** *  mode: Mode for the PWM to operate in
 279:Generated_Source\PSoC4/PWM.c **** *   Values:
 280:Generated_Source\PSoC4/PWM.c **** *   - PWM_MODE_TIMER_COMPARE - Timer / Counter with
 281:Generated_Source\PSoC4/PWM.c **** *                                                 compare capability
 282:Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_TIMER_CAPTURE - Timer / Counter with
 283:Generated_Source\PSoC4/PWM.c **** *                                                 capture capability
 284:Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_QUAD - Quadrature decoder
 285:Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM - PWM
 286:Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM_DT - PWM with dead time
 287:Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM_PR - PWM with pseudo random capability
 288:Generated_Source\PSoC4/PWM.c **** *
 289:Generated_Source\PSoC4/PWM.c **** * Return:
 290:Generated_Source\PSoC4/PWM.c **** *  None
 291:Generated_Source\PSoC4/PWM.c **** *
 292:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 293:Generated_Source\PSoC4/PWM.c **** void PWM_SetMode(uint32 mode)
 294:Generated_Source\PSoC4/PWM.c **** {
 250              		.loc 1 294 0
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 16
 253              		@ frame_needed = 1, uses_anonymous_args = 0
 254 0000 90B5     		push	{r4, r7, lr}
 255              		.cfi_def_cfa_offset 12
 256              		.cfi_offset 4, -12
 257              		.cfi_offset 7, -8
 258              		.cfi_offset 14, -4
 259 0002 85B0     		sub	sp, sp, #20
 260              		.cfi_def_cfa_offset 32
 261 0004 00AF     		add	r7, sp, #0
 262              		.cfi_def_cfa_register 7
 263 0006 7860     		str	r0, [r7, #4]
 295:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 296:Generated_Source\PSoC4/PWM.c **** 
 297:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 264              		.loc 1 297 0
 265 0008 0F23     		movs	r3, #15
 266 000a FC18     		adds	r4, r7, r3
 267 000c FFF7FEFF 		bl	CyEnterCriticalSection
 268 0010 0300     		movs	r3, r0
 269 0012 2370     		strb	r3, [r4]
 298:Generated_Source\PSoC4/PWM.c **** 
 299:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_MODE_MASK;
 270              		.loc 1 299 0
 271 0014 0A4B     		ldr	r3, .L15
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 11


 272 0016 0A4A     		ldr	r2, .L15
 273 0018 1268     		ldr	r2, [r2]
 274 001a 0A49     		ldr	r1, .L15+4
 275 001c 0A40     		ands	r2, r1
 276 001e 1A60     		str	r2, [r3]
 300:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mode;
 277              		.loc 1 300 0
 278 0020 074B     		ldr	r3, .L15
 279 0022 074A     		ldr	r2, .L15
 280 0024 1168     		ldr	r1, [r2]
 281 0026 7A68     		ldr	r2, [r7, #4]
 282 0028 0A43     		orrs	r2, r1
 283 002a 1A60     		str	r2, [r3]
 301:Generated_Source\PSoC4/PWM.c **** 
 302:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 284              		.loc 1 302 0
 285 002c 0F23     		movs	r3, #15
 286 002e FB18     		adds	r3, r7, r3
 287 0030 1B78     		ldrb	r3, [r3]
 288 0032 1800     		movs	r0, r3
 289 0034 FFF7FEFF 		bl	CyExitCriticalSection
 303:Generated_Source\PSoC4/PWM.c **** }
 290              		.loc 1 303 0
 291 0038 C046     		nop
 292 003a BD46     		mov	sp, r7
 293 003c 05B0     		add	sp, sp, #20
 294              		@ sp needed
 295 003e 90BD     		pop	{r4, r7, pc}
 296              	.L16:
 297              		.align	2
 298              	.L15:
 299 0040 40010540 		.word	1074069824
 300 0044 FFFFFFF8 		.word	-117440513
 301              		.cfi_endproc
 302              	.LFE4:
 303              		.size	PWM_SetMode, .-PWM_SetMode
 304              		.section	.text.PWM_SetQDMode,"ax",%progbits
 305              		.align	2
 306              		.global	PWM_SetQDMode
 307              		.code	16
 308              		.thumb_func
 309              		.type	PWM_SetQDMode, %function
 310              	PWM_SetQDMode:
 311              	.LFB5:
 304:Generated_Source\PSoC4/PWM.c **** 
 305:Generated_Source\PSoC4/PWM.c **** 
 306:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 307:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetQDMode
 308:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 309:Generated_Source\PSoC4/PWM.c **** *
 310:Generated_Source\PSoC4/PWM.c **** * Summary:
 311:Generated_Source\PSoC4/PWM.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 312:Generated_Source\PSoC4/PWM.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 313:Generated_Source\PSoC4/PWM.c **** *
 314:Generated_Source\PSoC4/PWM.c **** * Parameters:
 315:Generated_Source\PSoC4/PWM.c **** *  qdMode: Quadrature Decoder mode
 316:Generated_Source\PSoC4/PWM.c **** *   Values:
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 12


 317:Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X1 - Counts on phi 1 rising
 318:Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X2 - Counts on both edges of phi1 (2x faster)
 319:Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X4 - Counts on both edges of phi1 and phi2
 320:Generated_Source\PSoC4/PWM.c **** *                                        (4x faster)
 321:Generated_Source\PSoC4/PWM.c **** *
 322:Generated_Source\PSoC4/PWM.c **** * Return:
 323:Generated_Source\PSoC4/PWM.c **** *  None
 324:Generated_Source\PSoC4/PWM.c **** *
 325:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 326:Generated_Source\PSoC4/PWM.c **** void PWM_SetQDMode(uint32 qdMode)
 327:Generated_Source\PSoC4/PWM.c **** {
 312              		.loc 1 327 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 16
 315              		@ frame_needed = 1, uses_anonymous_args = 0
 316 0000 90B5     		push	{r4, r7, lr}
 317              		.cfi_def_cfa_offset 12
 318              		.cfi_offset 4, -12
 319              		.cfi_offset 7, -8
 320              		.cfi_offset 14, -4
 321 0002 85B0     		sub	sp, sp, #20
 322              		.cfi_def_cfa_offset 32
 323 0004 00AF     		add	r7, sp, #0
 324              		.cfi_def_cfa_register 7
 325 0006 7860     		str	r0, [r7, #4]
 328:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 329:Generated_Source\PSoC4/PWM.c **** 
 330:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 326              		.loc 1 330 0
 327 0008 0F23     		movs	r3, #15
 328 000a FC18     		adds	r4, r7, r3
 329 000c FFF7FEFF 		bl	CyEnterCriticalSection
 330 0010 0300     		movs	r3, r0
 331 0012 2370     		strb	r3, [r4]
 331:Generated_Source\PSoC4/PWM.c **** 
 332:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_QUAD_MODE_MASK;
 332              		.loc 1 332 0
 333 0014 0A4B     		ldr	r3, .L18
 334 0016 0A4A     		ldr	r2, .L18
 335 0018 1268     		ldr	r2, [r2]
 336 001a 0A49     		ldr	r1, .L18+4
 337 001c 0A40     		ands	r2, r1
 338 001e 1A60     		str	r2, [r3]
 333:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= qdMode;
 339              		.loc 1 333 0
 340 0020 074B     		ldr	r3, .L18
 341 0022 074A     		ldr	r2, .L18
 342 0024 1168     		ldr	r1, [r2]
 343 0026 7A68     		ldr	r2, [r7, #4]
 344 0028 0A43     		orrs	r2, r1
 345 002a 1A60     		str	r2, [r3]
 334:Generated_Source\PSoC4/PWM.c **** 
 335:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 346              		.loc 1 335 0
 347 002c 0F23     		movs	r3, #15
 348 002e FB18     		adds	r3, r7, r3
 349 0030 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 13


 350 0032 1800     		movs	r0, r3
 351 0034 FFF7FEFF 		bl	CyExitCriticalSection
 336:Generated_Source\PSoC4/PWM.c **** }
 352              		.loc 1 336 0
 353 0038 C046     		nop
 354 003a BD46     		mov	sp, r7
 355 003c 05B0     		add	sp, sp, #20
 356              		@ sp needed
 357 003e 90BD     		pop	{r4, r7, pc}
 358              	.L19:
 359              		.align	2
 360              	.L18:
 361 0040 40010540 		.word	1074069824
 362 0044 FFFF8FFF 		.word	-7340033
 363              		.cfi_endproc
 364              	.LFE5:
 365              		.size	PWM_SetQDMode, .-PWM_SetQDMode
 366              		.section	.text.PWM_SetPrescaler,"ax",%progbits
 367              		.align	2
 368              		.global	PWM_SetPrescaler
 369              		.code	16
 370              		.thumb_func
 371              		.type	PWM_SetPrescaler, %function
 372              	PWM_SetPrescaler:
 373              	.LFB6:
 337:Generated_Source\PSoC4/PWM.c **** 
 338:Generated_Source\PSoC4/PWM.c **** 
 339:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 340:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPrescaler
 341:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 342:Generated_Source\PSoC4/PWM.c **** *
 343:Generated_Source\PSoC4/PWM.c **** * Summary:
 344:Generated_Source\PSoC4/PWM.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 345:Generated_Source\PSoC4/PWM.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 346:Generated_Source\PSoC4/PWM.c **** *
 347:Generated_Source\PSoC4/PWM.c **** * Parameters:
 348:Generated_Source\PSoC4/PWM.c **** *  prescaler: Prescaler divider value
 349:Generated_Source\PSoC4/PWM.c **** *   Values:
 350:Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 351:Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY2    - Divide by 2
 352:Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY4    - Divide by 4
 353:Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY8    - Divide by 8
 354:Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY16   - Divide by 16
 355:Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY32   - Divide by 32
 356:Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY64   - Divide by 64
 357:Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY128  - Divide by 128
 358:Generated_Source\PSoC4/PWM.c **** *
 359:Generated_Source\PSoC4/PWM.c **** * Return:
 360:Generated_Source\PSoC4/PWM.c **** *  None
 361:Generated_Source\PSoC4/PWM.c **** *
 362:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 363:Generated_Source\PSoC4/PWM.c **** void PWM_SetPrescaler(uint32 prescaler)
 364:Generated_Source\PSoC4/PWM.c **** {
 374              		.loc 1 364 0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 16
 377              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 14


 378 0000 90B5     		push	{r4, r7, lr}
 379              		.cfi_def_cfa_offset 12
 380              		.cfi_offset 4, -12
 381              		.cfi_offset 7, -8
 382              		.cfi_offset 14, -4
 383 0002 85B0     		sub	sp, sp, #20
 384              		.cfi_def_cfa_offset 32
 385 0004 00AF     		add	r7, sp, #0
 386              		.cfi_def_cfa_register 7
 387 0006 7860     		str	r0, [r7, #4]
 365:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 366:Generated_Source\PSoC4/PWM.c **** 
 367:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 388              		.loc 1 367 0
 389 0008 0F23     		movs	r3, #15
 390 000a FC18     		adds	r4, r7, r3
 391 000c FFF7FEFF 		bl	CyEnterCriticalSection
 392 0010 0300     		movs	r3, r0
 393 0012 2370     		strb	r3, [r4]
 368:Generated_Source\PSoC4/PWM.c **** 
 369:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 394              		.loc 1 369 0
 395 0014 0A4B     		ldr	r3, .L21
 396 0016 0A4A     		ldr	r2, .L21
 397 0018 1268     		ldr	r2, [r2]
 398 001a 0A49     		ldr	r1, .L21+4
 399 001c 0A40     		ands	r2, r1
 400 001e 1A60     		str	r2, [r3]
 370:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= prescaler;
 401              		.loc 1 370 0
 402 0020 074B     		ldr	r3, .L21
 403 0022 074A     		ldr	r2, .L21
 404 0024 1168     		ldr	r1, [r2]
 405 0026 7A68     		ldr	r2, [r7, #4]
 406 0028 0A43     		orrs	r2, r1
 407 002a 1A60     		str	r2, [r3]
 371:Generated_Source\PSoC4/PWM.c **** 
 372:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 408              		.loc 1 372 0
 409 002c 0F23     		movs	r3, #15
 410 002e FB18     		adds	r3, r7, r3
 411 0030 1B78     		ldrb	r3, [r3]
 412 0032 1800     		movs	r0, r3
 413 0034 FFF7FEFF 		bl	CyExitCriticalSection
 373:Generated_Source\PSoC4/PWM.c **** }
 414              		.loc 1 373 0
 415 0038 C046     		nop
 416 003a BD46     		mov	sp, r7
 417 003c 05B0     		add	sp, sp, #20
 418              		@ sp needed
 419 003e 90BD     		pop	{r4, r7, pc}
 420              	.L22:
 421              		.align	2
 422              	.L21:
 423 0040 40010540 		.word	1074069824
 424 0044 FF00FFFF 		.word	-65281
 425              		.cfi_endproc
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 15


 426              	.LFE6:
 427              		.size	PWM_SetPrescaler, .-PWM_SetPrescaler
 428              		.section	.text.PWM_SetOneShot,"ax",%progbits
 429              		.align	2
 430              		.global	PWM_SetOneShot
 431              		.code	16
 432              		.thumb_func
 433              		.type	PWM_SetOneShot, %function
 434              	PWM_SetOneShot:
 435              	.LFB7:
 374:Generated_Source\PSoC4/PWM.c **** 
 375:Generated_Source\PSoC4/PWM.c **** 
 376:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 377:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetOneShot
 378:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 379:Generated_Source\PSoC4/PWM.c **** *
 380:Generated_Source\PSoC4/PWM.c **** * Summary:
 381:Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM runs
 382:Generated_Source\PSoC4/PWM.c **** *  continuously or stops when terminal count is reached.  By default the
 383:Generated_Source\PSoC4/PWM.c **** *  PWM operates in the continuous mode.
 384:Generated_Source\PSoC4/PWM.c **** *
 385:Generated_Source\PSoC4/PWM.c **** * Parameters:
 386:Generated_Source\PSoC4/PWM.c **** *  oneShotEnable
 387:Generated_Source\PSoC4/PWM.c **** *   Values:
 388:Generated_Source\PSoC4/PWM.c **** *     - 0 - Continuous
 389:Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable One Shot
 390:Generated_Source\PSoC4/PWM.c **** *
 391:Generated_Source\PSoC4/PWM.c **** * Return:
 392:Generated_Source\PSoC4/PWM.c **** *  None
 393:Generated_Source\PSoC4/PWM.c **** *
 394:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 395:Generated_Source\PSoC4/PWM.c **** void PWM_SetOneShot(uint32 oneShotEnable)
 396:Generated_Source\PSoC4/PWM.c **** {
 436              		.loc 1 396 0
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 16
 439              		@ frame_needed = 1, uses_anonymous_args = 0
 440 0000 90B5     		push	{r4, r7, lr}
 441              		.cfi_def_cfa_offset 12
 442              		.cfi_offset 4, -12
 443              		.cfi_offset 7, -8
 444              		.cfi_offset 14, -4
 445 0002 85B0     		sub	sp, sp, #20
 446              		.cfi_def_cfa_offset 32
 447 0004 00AF     		add	r7, sp, #0
 448              		.cfi_def_cfa_register 7
 449 0006 7860     		str	r0, [r7, #4]
 397:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 398:Generated_Source\PSoC4/PWM.c **** 
 399:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 450              		.loc 1 399 0
 451 0008 0F23     		movs	r3, #15
 452 000a FC18     		adds	r4, r7, r3
 453 000c FFF7FEFF 		bl	CyEnterCriticalSection
 454 0010 0300     		movs	r3, r0
 455 0012 2370     		strb	r3, [r4]
 400:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 16


 401:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_ONESHOT_MASK;
 456              		.loc 1 401 0
 457 0014 0C4B     		ldr	r3, .L24
 458 0016 0C4A     		ldr	r2, .L24
 459 0018 1268     		ldr	r2, [r2]
 460 001a 0C49     		ldr	r1, .L24+4
 461 001c 0A40     		ands	r2, r1
 462 001e 1A60     		str	r2, [r3]
 402:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_1BIT_MASK) <<
 463              		.loc 1 402 0
 464 0020 094B     		ldr	r3, .L24
 465 0022 094A     		ldr	r2, .L24
 466 0024 1168     		ldr	r1, [r2]
 467 0026 7A68     		ldr	r2, [r7, #4]
 468 0028 9004     		lsls	r0, r2, #18
 469 002a 8022     		movs	r2, #128
 470 002c D202     		lsls	r2, r2, #11
 471 002e 0240     		ands	r2, r0
 472 0030 0A43     		orrs	r2, r1
 473 0032 1A60     		str	r2, [r3]
 403:Generated_Source\PSoC4/PWM.c ****                                                                PWM_ONESHOT_SHIFT));
 404:Generated_Source\PSoC4/PWM.c **** 
 405:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 474              		.loc 1 405 0
 475 0034 0F23     		movs	r3, #15
 476 0036 FB18     		adds	r3, r7, r3
 477 0038 1B78     		ldrb	r3, [r3]
 478 003a 1800     		movs	r0, r3
 479 003c FFF7FEFF 		bl	CyExitCriticalSection
 406:Generated_Source\PSoC4/PWM.c **** }
 480              		.loc 1 406 0
 481 0040 C046     		nop
 482 0042 BD46     		mov	sp, r7
 483 0044 05B0     		add	sp, sp, #20
 484              		@ sp needed
 485 0046 90BD     		pop	{r4, r7, pc}
 486              	.L25:
 487              		.align	2
 488              	.L24:
 489 0048 40010540 		.word	1074069824
 490 004c FFFFFBFF 		.word	-262145
 491              		.cfi_endproc
 492              	.LFE7:
 493              		.size	PWM_SetOneShot, .-PWM_SetOneShot
 494              		.section	.text.PWM_SetPWMMode,"ax",%progbits
 495              		.align	2
 496              		.global	PWM_SetPWMMode
 497              		.code	16
 498              		.thumb_func
 499              		.type	PWM_SetPWMMode, %function
 500              	PWM_SetPWMMode:
 501              	.LFB8:
 407:Generated_Source\PSoC4/PWM.c **** 
 408:Generated_Source\PSoC4/PWM.c **** 
 409:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 410:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMMode
 411:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 17


 412:Generated_Source\PSoC4/PWM.c **** *
 413:Generated_Source\PSoC4/PWM.c **** * Summary:
 414:Generated_Source\PSoC4/PWM.c **** *  Writes the control register that determines what mode of operation the PWM
 415:Generated_Source\PSoC4/PWM.c **** *  output lines are driven in.  There is a setting for what to do on a
 416:Generated_Source\PSoC4/PWM.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 417:Generated_Source\PSoC4/PWM.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 418:Generated_Source\PSoC4/PWM.c **** *  the mode.
 419:Generated_Source\PSoC4/PWM.c **** *
 420:Generated_Source\PSoC4/PWM.c **** * Parameters:
 421:Generated_Source\PSoC4/PWM.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 422:Generated_Source\PSoC4/PWM.c **** *  for each of the three or use one of the preconfigured PWM settings.
 423:Generated_Source\PSoC4/PWM.c **** *   Values:
 424:Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_SET        - Set on comparison match
 425:Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 426:Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 427:Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 428:Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_SET         - Set on overflow
 429:Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 430:Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_INVERT      - Invert on overflow
 431:Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 432:Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_SET       - Set on underflow
 433:Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 434:Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 435:Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 436:Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 437:Generated_Source\PSoC4/PWM.c **** *                             with up counting mode
 438:Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 439:Generated_Source\PSoC4/PWM.c **** *                             with down counting mode
 440:Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 441:Generated_Source\PSoC4/PWM.c **** *                             combined with up/down 0 mode
 442:Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 443:Generated_Source\PSoC4/PWM.c **** *                             with up/down 1 mode
 444:Generated_Source\PSoC4/PWM.c **** *
 445:Generated_Source\PSoC4/PWM.c **** * Return:
 446:Generated_Source\PSoC4/PWM.c **** *  None
 447:Generated_Source\PSoC4/PWM.c **** *
 448:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 449:Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMMode(uint32 modeMask)
 450:Generated_Source\PSoC4/PWM.c **** {
 502              		.loc 1 450 0
 503              		.cfi_startproc
 504              		@ args = 0, pretend = 0, frame = 8
 505              		@ frame_needed = 1, uses_anonymous_args = 0
 506 0000 80B5     		push	{r7, lr}
 507              		.cfi_def_cfa_offset 8
 508              		.cfi_offset 7, -8
 509              		.cfi_offset 14, -4
 510 0002 82B0     		sub	sp, sp, #8
 511              		.cfi_def_cfa_offset 16
 512 0004 00AF     		add	r7, sp, #0
 513              		.cfi_def_cfa_register 7
 514 0006 7860     		str	r0, [r7, #4]
 451:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL2_REG = (modeMask & PWM_6BIT_MASK);
 515              		.loc 1 451 0
 516 0008 044B     		ldr	r3, .L27
 517 000a 7A68     		ldr	r2, [r7, #4]
 518 000c 3F21     		movs	r1, #63
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 18


 519 000e 0A40     		ands	r2, r1
 520 0010 1A60     		str	r2, [r3]
 452:Generated_Source\PSoC4/PWM.c **** }
 521              		.loc 1 452 0
 522 0012 C046     		nop
 523 0014 BD46     		mov	sp, r7
 524 0016 02B0     		add	sp, sp, #8
 525              		@ sp needed
 526 0018 80BD     		pop	{r7, pc}
 527              	.L28:
 528 001a C046     		.align	2
 529              	.L27:
 530 001c 68010540 		.word	1074069864
 531              		.cfi_endproc
 532              	.LFE8:
 533              		.size	PWM_SetPWMMode, .-PWM_SetPWMMode
 534              		.section	.text.PWM_SetPWMSyncKill,"ax",%progbits
 535              		.align	2
 536              		.global	PWM_SetPWMSyncKill
 537              		.code	16
 538              		.thumb_func
 539              		.type	PWM_SetPWMSyncKill, %function
 540              	PWM_SetPWMSyncKill:
 541              	.LFB9:
 453:Generated_Source\PSoC4/PWM.c **** 
 454:Generated_Source\PSoC4/PWM.c **** 
 455:Generated_Source\PSoC4/PWM.c **** 
 456:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 457:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMSyncKill
 458:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 459:Generated_Source\PSoC4/PWM.c **** *
 460:Generated_Source\PSoC4/PWM.c **** * Summary:
 461:Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 462:Generated_Source\PSoC4/PWM.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 463:Generated_Source\PSoC4/PWM.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 464:Generated_Source\PSoC4/PWM.c **** *  and PWM with dead time modes.
 465:Generated_Source\PSoC4/PWM.c **** *
 466:Generated_Source\PSoC4/PWM.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 467:Generated_Source\PSoC4/PWM.c **** *  signals until the next terminal count.
 468:Generated_Source\PSoC4/PWM.c **** *
 469:Generated_Source\PSoC4/PWM.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 470:Generated_Source\PSoC4/PWM.c **** *  signals when the kill signal is present.  This mode should only be used
 471:Generated_Source\PSoC4/PWM.c **** *  when the kill signal (stop input) is configured in the pass through mode
 472:Generated_Source\PSoC4/PWM.c **** *  (Level sensitive signal).
 473:Generated_Source\PSoC4/PWM.c **** 
 474:Generated_Source\PSoC4/PWM.c **** *
 475:Generated_Source\PSoC4/PWM.c **** * Parameters:
 476:Generated_Source\PSoC4/PWM.c **** *  syncKillEnable
 477:Generated_Source\PSoC4/PWM.c **** *   Values:
 478:Generated_Source\PSoC4/PWM.c **** *     - 0 - Asynchronous
 479:Generated_Source\PSoC4/PWM.c **** *     - 1 - Synchronous
 480:Generated_Source\PSoC4/PWM.c **** *
 481:Generated_Source\PSoC4/PWM.c **** * Return:
 482:Generated_Source\PSoC4/PWM.c **** *  None
 483:Generated_Source\PSoC4/PWM.c **** *
 484:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 485:Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMSyncKill(uint32 syncKillEnable)
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 19


 486:Generated_Source\PSoC4/PWM.c **** {
 542              		.loc 1 486 0
 543              		.cfi_startproc
 544              		@ args = 0, pretend = 0, frame = 16
 545              		@ frame_needed = 1, uses_anonymous_args = 0
 546 0000 90B5     		push	{r4, r7, lr}
 547              		.cfi_def_cfa_offset 12
 548              		.cfi_offset 4, -12
 549              		.cfi_offset 7, -8
 550              		.cfi_offset 14, -4
 551 0002 85B0     		sub	sp, sp, #20
 552              		.cfi_def_cfa_offset 32
 553 0004 00AF     		add	r7, sp, #0
 554              		.cfi_def_cfa_register 7
 555 0006 7860     		str	r0, [r7, #4]
 487:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 488:Generated_Source\PSoC4/PWM.c **** 
 489:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 556              		.loc 1 489 0
 557 0008 0F23     		movs	r3, #15
 558 000a FC18     		adds	r4, r7, r3
 559 000c FFF7FEFF 		bl	CyEnterCriticalSection
 560 0010 0300     		movs	r3, r0
 561 0012 2370     		strb	r3, [r4]
 490:Generated_Source\PSoC4/PWM.c **** 
 491:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_SYNC_KILL_MASK;
 562              		.loc 1 491 0
 563 0014 0C4B     		ldr	r3, .L30
 564 0016 0C4A     		ldr	r2, .L30
 565 0018 1268     		ldr	r2, [r2]
 566 001a 0421     		movs	r1, #4
 567 001c 8A43     		bics	r2, r1
 568 001e 1A60     		str	r2, [r3]
 492:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_1BIT_MASK)  <<
 569              		.loc 1 492 0
 570 0020 094B     		ldr	r3, .L30
 571 0022 094A     		ldr	r2, .L30
 572 0024 1168     		ldr	r1, [r2]
 573 0026 7A68     		ldr	r2, [r7, #4]
 574 0028 9200     		lsls	r2, r2, #2
 575 002a 0420     		movs	r0, #4
 576 002c 0240     		ands	r2, r0
 577 002e 0A43     		orrs	r2, r1
 578 0030 1A60     		str	r2, [r3]
 493:Generated_Source\PSoC4/PWM.c ****                                                PWM_PWM_SYNC_KILL_SHIFT));
 494:Generated_Source\PSoC4/PWM.c **** 
 495:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 579              		.loc 1 495 0
 580 0032 0F23     		movs	r3, #15
 581 0034 FB18     		adds	r3, r7, r3
 582 0036 1B78     		ldrb	r3, [r3]
 583 0038 1800     		movs	r0, r3
 584 003a FFF7FEFF 		bl	CyExitCriticalSection
 496:Generated_Source\PSoC4/PWM.c **** }
 585              		.loc 1 496 0
 586 003e C046     		nop
 587 0040 BD46     		mov	sp, r7
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 20


 588 0042 05B0     		add	sp, sp, #20
 589              		@ sp needed
 590 0044 90BD     		pop	{r4, r7, pc}
 591              	.L31:
 592 0046 C046     		.align	2
 593              	.L30:
 594 0048 40010540 		.word	1074069824
 595              		.cfi_endproc
 596              	.LFE9:
 597              		.size	PWM_SetPWMSyncKill, .-PWM_SetPWMSyncKill
 598              		.section	.text.PWM_SetPWMStopOnKill,"ax",%progbits
 599              		.align	2
 600              		.global	PWM_SetPWMStopOnKill
 601              		.code	16
 602              		.thumb_func
 603              		.type	PWM_SetPWMStopOnKill, %function
 604              	PWM_SetPWMStopOnKill:
 605              	.LFB10:
 497:Generated_Source\PSoC4/PWM.c **** 
 498:Generated_Source\PSoC4/PWM.c **** 
 499:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 500:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMStopOnKill
 501:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 502:Generated_Source\PSoC4/PWM.c **** *
 503:Generated_Source\PSoC4/PWM.c **** * Summary:
 504:Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 505:Generated_Source\PSoC4/PWM.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 506:Generated_Source\PSoC4/PWM.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 507:Generated_Source\PSoC4/PWM.c **** *
 508:Generated_Source\PSoC4/PWM.c **** *
 509:Generated_Source\PSoC4/PWM.c **** * Parameters:
 510:Generated_Source\PSoC4/PWM.c **** *  stopOnKillEnable
 511:Generated_Source\PSoC4/PWM.c **** *   Values:
 512:Generated_Source\PSoC4/PWM.c **** *     - 0 - Don't stop
 513:Generated_Source\PSoC4/PWM.c **** *     - 1 - Stop
 514:Generated_Source\PSoC4/PWM.c **** *
 515:Generated_Source\PSoC4/PWM.c **** * Return:
 516:Generated_Source\PSoC4/PWM.c **** *  None
 517:Generated_Source\PSoC4/PWM.c **** *
 518:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 519:Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMStopOnKill(uint32 stopOnKillEnable)
 520:Generated_Source\PSoC4/PWM.c **** {
 606              		.loc 1 520 0
 607              		.cfi_startproc
 608              		@ args = 0, pretend = 0, frame = 16
 609              		@ frame_needed = 1, uses_anonymous_args = 0
 610 0000 90B5     		push	{r4, r7, lr}
 611              		.cfi_def_cfa_offset 12
 612              		.cfi_offset 4, -12
 613              		.cfi_offset 7, -8
 614              		.cfi_offset 14, -4
 615 0002 85B0     		sub	sp, sp, #20
 616              		.cfi_def_cfa_offset 32
 617 0004 00AF     		add	r7, sp, #0
 618              		.cfi_def_cfa_register 7
 619 0006 7860     		str	r0, [r7, #4]
 521:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 21


 522:Generated_Source\PSoC4/PWM.c **** 
 523:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 620              		.loc 1 523 0
 621 0008 0F23     		movs	r3, #15
 622 000a FC18     		adds	r4, r7, r3
 623 000c FFF7FEFF 		bl	CyEnterCriticalSection
 624 0010 0300     		movs	r3, r0
 625 0012 2370     		strb	r3, [r4]
 524:Generated_Source\PSoC4/PWM.c **** 
 525:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_STOP_KILL_MASK;
 626              		.loc 1 525 0
 627 0014 0C4B     		ldr	r3, .L33
 628 0016 0C4A     		ldr	r2, .L33
 629 0018 1268     		ldr	r2, [r2]
 630 001a 0821     		movs	r1, #8
 631 001c 8A43     		bics	r2, r1
 632 001e 1A60     		str	r2, [r3]
 526:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_1BIT_MASK)  <<
 633              		.loc 1 526 0
 634 0020 094B     		ldr	r3, .L33
 635 0022 094A     		ldr	r2, .L33
 636 0024 1168     		ldr	r1, [r2]
 637 0026 7A68     		ldr	r2, [r7, #4]
 638 0028 D200     		lsls	r2, r2, #3
 639 002a 0820     		movs	r0, #8
 640 002c 0240     		ands	r2, r0
 641 002e 0A43     		orrs	r2, r1
 642 0030 1A60     		str	r2, [r3]
 527:Generated_Source\PSoC4/PWM.c ****                                                          PWM_PWM_STOP_KILL_SHIFT));
 528:Generated_Source\PSoC4/PWM.c **** 
 529:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 643              		.loc 1 529 0
 644 0032 0F23     		movs	r3, #15
 645 0034 FB18     		adds	r3, r7, r3
 646 0036 1B78     		ldrb	r3, [r3]
 647 0038 1800     		movs	r0, r3
 648 003a FFF7FEFF 		bl	CyExitCriticalSection
 530:Generated_Source\PSoC4/PWM.c **** }
 649              		.loc 1 530 0
 650 003e C046     		nop
 651 0040 BD46     		mov	sp, r7
 652 0042 05B0     		add	sp, sp, #20
 653              		@ sp needed
 654 0044 90BD     		pop	{r4, r7, pc}
 655              	.L34:
 656 0046 C046     		.align	2
 657              	.L33:
 658 0048 40010540 		.word	1074069824
 659              		.cfi_endproc
 660              	.LFE10:
 661              		.size	PWM_SetPWMStopOnKill, .-PWM_SetPWMStopOnKill
 662              		.section	.text.PWM_SetPWMDeadTime,"ax",%progbits
 663              		.align	2
 664              		.global	PWM_SetPWMDeadTime
 665              		.code	16
 666              		.thumb_func
 667              		.type	PWM_SetPWMDeadTime, %function
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 22


 668              	PWM_SetPWMDeadTime:
 669              	.LFB11:
 531:Generated_Source\PSoC4/PWM.c **** 
 532:Generated_Source\PSoC4/PWM.c **** 
 533:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 534:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMDeadTime
 535:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 536:Generated_Source\PSoC4/PWM.c **** *
 537:Generated_Source\PSoC4/PWM.c **** * Summary:
 538:Generated_Source\PSoC4/PWM.c **** *  Writes the dead time control value.  This value delays the rising edge of
 539:Generated_Source\PSoC4/PWM.c **** *  both the line and line_n signals the designated number of cycles resulting
 540:Generated_Source\PSoC4/PWM.c **** *  in both signals being inactive for that many cycles.  This functionality is
 541:Generated_Source\PSoC4/PWM.c **** *  only applicable to the PWM in the dead time mode.
 542:Generated_Source\PSoC4/PWM.c **** 
 543:Generated_Source\PSoC4/PWM.c **** *
 544:Generated_Source\PSoC4/PWM.c **** * Parameters:
 545:Generated_Source\PSoC4/PWM.c **** *  Dead time to insert
 546:Generated_Source\PSoC4/PWM.c **** *   Values: 0 to 255
 547:Generated_Source\PSoC4/PWM.c **** *
 548:Generated_Source\PSoC4/PWM.c **** * Return:
 549:Generated_Source\PSoC4/PWM.c **** *  None
 550:Generated_Source\PSoC4/PWM.c **** *
 551:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 552:Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMDeadTime(uint32 deadTime)
 553:Generated_Source\PSoC4/PWM.c **** {
 670              		.loc 1 553 0
 671              		.cfi_startproc
 672              		@ args = 0, pretend = 0, frame = 16
 673              		@ frame_needed = 1, uses_anonymous_args = 0
 674 0000 90B5     		push	{r4, r7, lr}
 675              		.cfi_def_cfa_offset 12
 676              		.cfi_offset 4, -12
 677              		.cfi_offset 7, -8
 678              		.cfi_offset 14, -4
 679 0002 85B0     		sub	sp, sp, #20
 680              		.cfi_def_cfa_offset 32
 681 0004 00AF     		add	r7, sp, #0
 682              		.cfi_def_cfa_register 7
 683 0006 7860     		str	r0, [r7, #4]
 554:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 555:Generated_Source\PSoC4/PWM.c **** 
 556:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 684              		.loc 1 556 0
 685 0008 0F23     		movs	r3, #15
 686 000a FC18     		adds	r4, r7, r3
 687 000c FFF7FEFF 		bl	CyEnterCriticalSection
 688 0010 0300     		movs	r3, r0
 689 0012 2370     		strb	r3, [r4]
 557:Generated_Source\PSoC4/PWM.c **** 
 558:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 690              		.loc 1 558 0
 691 0014 0C4B     		ldr	r3, .L36
 692 0016 0C4A     		ldr	r2, .L36
 693 0018 1268     		ldr	r2, [r2]
 694 001a 0C49     		ldr	r1, .L36+4
 695 001c 0A40     		ands	r2, r1
 696 001e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 23


 559:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((deadTime & PWM_8BIT_MASK) <<
 697              		.loc 1 559 0
 698 0020 094B     		ldr	r3, .L36
 699 0022 094A     		ldr	r2, .L36
 700 0024 1168     		ldr	r1, [r2]
 701 0026 7A68     		ldr	r2, [r7, #4]
 702 0028 1202     		lsls	r2, r2, #8
 703 002a 1204     		lsls	r2, r2, #16
 704 002c 120C     		lsrs	r2, r2, #16
 705 002e 0A43     		orrs	r2, r1
 706 0030 1A60     		str	r2, [r3]
 560:Generated_Source\PSoC4/PWM.c ****                                                           PWM_PRESCALER_SHIFT));
 561:Generated_Source\PSoC4/PWM.c **** 
 562:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 707              		.loc 1 562 0
 708 0032 0F23     		movs	r3, #15
 709 0034 FB18     		adds	r3, r7, r3
 710 0036 1B78     		ldrb	r3, [r3]
 711 0038 1800     		movs	r0, r3
 712 003a FFF7FEFF 		bl	CyExitCriticalSection
 563:Generated_Source\PSoC4/PWM.c **** }
 713              		.loc 1 563 0
 714 003e C046     		nop
 715 0040 BD46     		mov	sp, r7
 716 0042 05B0     		add	sp, sp, #20
 717              		@ sp needed
 718 0044 90BD     		pop	{r4, r7, pc}
 719              	.L37:
 720 0046 C046     		.align	2
 721              	.L36:
 722 0048 40010540 		.word	1074069824
 723 004c FF00FFFF 		.word	-65281
 724              		.cfi_endproc
 725              	.LFE11:
 726              		.size	PWM_SetPWMDeadTime, .-PWM_SetPWMDeadTime
 727              		.section	.text.PWM_SetPWMInvert,"ax",%progbits
 728              		.align	2
 729              		.global	PWM_SetPWMInvert
 730              		.code	16
 731              		.thumb_func
 732              		.type	PWM_SetPWMInvert, %function
 733              	PWM_SetPWMInvert:
 734              	.LFB12:
 564:Generated_Source\PSoC4/PWM.c **** 
 565:Generated_Source\PSoC4/PWM.c **** 
 566:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 567:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMInvert
 568:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 569:Generated_Source\PSoC4/PWM.c **** *
 570:Generated_Source\PSoC4/PWM.c **** * Summary:
 571:Generated_Source\PSoC4/PWM.c **** *  Writes the bits that control whether the line and line_n outputs are
 572:Generated_Source\PSoC4/PWM.c **** *  inverted from their normal output values.  This functionality is only
 573:Generated_Source\PSoC4/PWM.c **** *  applicable to the three PWM modes.
 574:Generated_Source\PSoC4/PWM.c **** *
 575:Generated_Source\PSoC4/PWM.c **** * Parameters:
 576:Generated_Source\PSoC4/PWM.c **** *  mask: Mask of outputs to invert.
 577:Generated_Source\PSoC4/PWM.c **** *   Values:
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 24


 578:Generated_Source\PSoC4/PWM.c **** *         - PWM_INVERT_LINE   - Inverts the line output
 579:Generated_Source\PSoC4/PWM.c **** *         - PWM_INVERT_LINE_N - Inverts the line_n output
 580:Generated_Source\PSoC4/PWM.c **** *
 581:Generated_Source\PSoC4/PWM.c **** * Return:
 582:Generated_Source\PSoC4/PWM.c **** *  None
 583:Generated_Source\PSoC4/PWM.c **** *
 584:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 585:Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMInvert(uint32 mask)
 586:Generated_Source\PSoC4/PWM.c **** {
 735              		.loc 1 586 0
 736              		.cfi_startproc
 737              		@ args = 0, pretend = 0, frame = 16
 738              		@ frame_needed = 1, uses_anonymous_args = 0
 739 0000 90B5     		push	{r4, r7, lr}
 740              		.cfi_def_cfa_offset 12
 741              		.cfi_offset 4, -12
 742              		.cfi_offset 7, -8
 743              		.cfi_offset 14, -4
 744 0002 85B0     		sub	sp, sp, #20
 745              		.cfi_def_cfa_offset 32
 746 0004 00AF     		add	r7, sp, #0
 747              		.cfi_def_cfa_register 7
 748 0006 7860     		str	r0, [r7, #4]
 587:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 588:Generated_Source\PSoC4/PWM.c **** 
 589:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 749              		.loc 1 589 0
 750 0008 0F23     		movs	r3, #15
 751 000a FC18     		adds	r4, r7, r3
 752 000c FFF7FEFF 		bl	CyEnterCriticalSection
 753 0010 0300     		movs	r3, r0
 754 0012 2370     		strb	r3, [r4]
 590:Generated_Source\PSoC4/PWM.c **** 
 591:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_INV_OUT_MASK;
 755              		.loc 1 591 0
 756 0014 0A4B     		ldr	r3, .L39
 757 0016 0A4A     		ldr	r2, .L39
 758 0018 1268     		ldr	r2, [r2]
 759 001a 0A49     		ldr	r1, .L39+4
 760 001c 0A40     		ands	r2, r1
 761 001e 1A60     		str	r2, [r3]
 592:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mask;
 762              		.loc 1 592 0
 763 0020 074B     		ldr	r3, .L39
 764 0022 074A     		ldr	r2, .L39
 765 0024 1168     		ldr	r1, [r2]
 766 0026 7A68     		ldr	r2, [r7, #4]
 767 0028 0A43     		orrs	r2, r1
 768 002a 1A60     		str	r2, [r3]
 593:Generated_Source\PSoC4/PWM.c **** 
 594:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 769              		.loc 1 594 0
 770 002c 0F23     		movs	r3, #15
 771 002e FB18     		adds	r3, r7, r3
 772 0030 1B78     		ldrb	r3, [r3]
 773 0032 1800     		movs	r0, r3
 774 0034 FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 25


 595:Generated_Source\PSoC4/PWM.c **** }
 775              		.loc 1 595 0
 776 0038 C046     		nop
 777 003a BD46     		mov	sp, r7
 778 003c 05B0     		add	sp, sp, #20
 779              		@ sp needed
 780 003e 90BD     		pop	{r4, r7, pc}
 781              	.L40:
 782              		.align	2
 783              	.L39:
 784 0040 40010540 		.word	1074069824
 785 0044 FFFFCFFF 		.word	-3145729
 786              		.cfi_endproc
 787              	.LFE12:
 788              		.size	PWM_SetPWMInvert, .-PWM_SetPWMInvert
 789              		.section	.text.PWM_WriteCounter,"ax",%progbits
 790              		.align	2
 791              		.global	PWM_WriteCounter
 792              		.code	16
 793              		.thumb_func
 794              		.type	PWM_WriteCounter, %function
 795              	PWM_WriteCounter:
 796              	.LFB13:
 596:Generated_Source\PSoC4/PWM.c **** 
 597:Generated_Source\PSoC4/PWM.c **** 
 598:Generated_Source\PSoC4/PWM.c **** 
 599:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 600:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCounter
 601:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 602:Generated_Source\PSoC4/PWM.c **** *
 603:Generated_Source\PSoC4/PWM.c **** * Summary:
 604:Generated_Source\PSoC4/PWM.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 605:Generated_Source\PSoC4/PWM.c **** *  setting the counter (not the period) to the value written. It is not
 606:Generated_Source\PSoC4/PWM.c **** *  advised to write to this field when the counter is running.
 607:Generated_Source\PSoC4/PWM.c **** *
 608:Generated_Source\PSoC4/PWM.c **** * Parameters:
 609:Generated_Source\PSoC4/PWM.c **** *  count: value to write
 610:Generated_Source\PSoC4/PWM.c **** *
 611:Generated_Source\PSoC4/PWM.c **** * Return:
 612:Generated_Source\PSoC4/PWM.c **** *  None
 613:Generated_Source\PSoC4/PWM.c **** *
 614:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 615:Generated_Source\PSoC4/PWM.c **** void PWM_WriteCounter(uint32 count)
 616:Generated_Source\PSoC4/PWM.c **** {
 797              		.loc 1 616 0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 8
 800              		@ frame_needed = 1, uses_anonymous_args = 0
 801 0000 80B5     		push	{r7, lr}
 802              		.cfi_def_cfa_offset 8
 803              		.cfi_offset 7, -8
 804              		.cfi_offset 14, -4
 805 0002 82B0     		sub	sp, sp, #8
 806              		.cfi_def_cfa_offset 16
 807 0004 00AF     		add	r7, sp, #0
 808              		.cfi_def_cfa_register 7
 809 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 26


 617:Generated_Source\PSoC4/PWM.c ****     PWM_COUNTER_REG = (count & PWM_16BIT_MASK);
 810              		.loc 1 617 0
 811 0008 044B     		ldr	r3, .L42
 812 000a 7A68     		ldr	r2, [r7, #4]
 813 000c 1204     		lsls	r2, r2, #16
 814 000e 120C     		lsrs	r2, r2, #16
 815 0010 1A60     		str	r2, [r3]
 618:Generated_Source\PSoC4/PWM.c **** }
 816              		.loc 1 618 0
 817 0012 C046     		nop
 818 0014 BD46     		mov	sp, r7
 819 0016 02B0     		add	sp, sp, #8
 820              		@ sp needed
 821 0018 80BD     		pop	{r7, pc}
 822              	.L43:
 823 001a C046     		.align	2
 824              	.L42:
 825 001c 48010540 		.word	1074069832
 826              		.cfi_endproc
 827              	.LFE13:
 828              		.size	PWM_WriteCounter, .-PWM_WriteCounter
 829              		.section	.text.PWM_ReadCounter,"ax",%progbits
 830              		.align	2
 831              		.global	PWM_ReadCounter
 832              		.code	16
 833              		.thumb_func
 834              		.type	PWM_ReadCounter, %function
 835              	PWM_ReadCounter:
 836              	.LFB14:
 619:Generated_Source\PSoC4/PWM.c **** 
 620:Generated_Source\PSoC4/PWM.c **** 
 621:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCounter
 623:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 624:Generated_Source\PSoC4/PWM.c **** *
 625:Generated_Source\PSoC4/PWM.c **** * Summary:
 626:Generated_Source\PSoC4/PWM.c **** *  Reads the current counter value.
 627:Generated_Source\PSoC4/PWM.c **** *
 628:Generated_Source\PSoC4/PWM.c **** * Parameters:
 629:Generated_Source\PSoC4/PWM.c **** *  None
 630:Generated_Source\PSoC4/PWM.c **** *
 631:Generated_Source\PSoC4/PWM.c **** * Return:
 632:Generated_Source\PSoC4/PWM.c **** *  Current counter value
 633:Generated_Source\PSoC4/PWM.c **** *
 634:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 635:Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCounter(void)
 636:Generated_Source\PSoC4/PWM.c **** {
 837              		.loc 1 636 0
 838              		.cfi_startproc
 839              		@ args = 0, pretend = 0, frame = 0
 840              		@ frame_needed = 1, uses_anonymous_args = 0
 841 0000 80B5     		push	{r7, lr}
 842              		.cfi_def_cfa_offset 8
 843              		.cfi_offset 7, -8
 844              		.cfi_offset 14, -4
 845 0002 00AF     		add	r7, sp, #0
 846              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 27


 637:Generated_Source\PSoC4/PWM.c ****     return (PWM_COUNTER_REG & PWM_16BIT_MASK);
 847              		.loc 1 637 0
 848 0004 034B     		ldr	r3, .L46
 849 0006 1B68     		ldr	r3, [r3]
 850 0008 1B04     		lsls	r3, r3, #16
 851 000a 1B0C     		lsrs	r3, r3, #16
 638:Generated_Source\PSoC4/PWM.c **** }
 852              		.loc 1 638 0
 853 000c 1800     		movs	r0, r3
 854 000e BD46     		mov	sp, r7
 855              		@ sp needed
 856 0010 80BD     		pop	{r7, pc}
 857              	.L47:
 858 0012 C046     		.align	2
 859              	.L46:
 860 0014 48010540 		.word	1074069832
 861              		.cfi_endproc
 862              	.LFE14:
 863              		.size	PWM_ReadCounter, .-PWM_ReadCounter
 864              		.section	.text.PWM_SetCounterMode,"ax",%progbits
 865              		.align	2
 866              		.global	PWM_SetCounterMode
 867              		.code	16
 868              		.thumb_func
 869              		.type	PWM_SetCounterMode, %function
 870              	PWM_SetCounterMode:
 871              	.LFB15:
 639:Generated_Source\PSoC4/PWM.c **** 
 640:Generated_Source\PSoC4/PWM.c **** 
 641:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 642:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCounterMode
 643:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 644:Generated_Source\PSoC4/PWM.c **** *
 645:Generated_Source\PSoC4/PWM.c **** * Summary:
 646:Generated_Source\PSoC4/PWM.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 647:Generated_Source\PSoC4/PWM.c **** *  and the PWM with a pseudo random output.
 648:Generated_Source\PSoC4/PWM.c **** *
 649:Generated_Source\PSoC4/PWM.c **** * Parameters:
 650:Generated_Source\PSoC4/PWM.c **** *  counterMode: Enumerated counter type values
 651:Generated_Source\PSoC4/PWM.c **** *   Values:
 652:Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UP       - Counts up
 653:Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_DOWN     - Counts down
 654:Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UPDOWN0  - Counts up and down. Terminal count
 655:Generated_Source\PSoC4/PWM.c **** *                                         generated when counter reaches 0
 656:Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UPDOWN1  - Counts up and down. Terminal count
 657:Generated_Source\PSoC4/PWM.c **** *                                         generated both when counter reaches 0
 658:Generated_Source\PSoC4/PWM.c **** *                                         and period
 659:Generated_Source\PSoC4/PWM.c **** *
 660:Generated_Source\PSoC4/PWM.c **** * Return:
 661:Generated_Source\PSoC4/PWM.c **** *  None
 662:Generated_Source\PSoC4/PWM.c **** *
 663:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 664:Generated_Source\PSoC4/PWM.c **** void PWM_SetCounterMode(uint32 counterMode)
 665:Generated_Source\PSoC4/PWM.c **** {
 872              		.loc 1 665 0
 873              		.cfi_startproc
 874              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 28


 875              		@ frame_needed = 1, uses_anonymous_args = 0
 876 0000 90B5     		push	{r4, r7, lr}
 877              		.cfi_def_cfa_offset 12
 878              		.cfi_offset 4, -12
 879              		.cfi_offset 7, -8
 880              		.cfi_offset 14, -4
 881 0002 85B0     		sub	sp, sp, #20
 882              		.cfi_def_cfa_offset 32
 883 0004 00AF     		add	r7, sp, #0
 884              		.cfi_def_cfa_register 7
 885 0006 7860     		str	r0, [r7, #4]
 666:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 667:Generated_Source\PSoC4/PWM.c **** 
 668:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 886              		.loc 1 668 0
 887 0008 0F23     		movs	r3, #15
 888 000a FC18     		adds	r4, r7, r3
 889 000c FFF7FEFF 		bl	CyEnterCriticalSection
 890 0010 0300     		movs	r3, r0
 891 0012 2370     		strb	r3, [r4]
 669:Generated_Source\PSoC4/PWM.c **** 
 670:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_UPDOWN_MASK;
 892              		.loc 1 670 0
 893 0014 0A4B     		ldr	r3, .L49
 894 0016 0A4A     		ldr	r2, .L49
 895 0018 1268     		ldr	r2, [r2]
 896 001a 0A49     		ldr	r1, .L49+4
 897 001c 0A40     		ands	r2, r1
 898 001e 1A60     		str	r2, [r3]
 671:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= counterMode;
 899              		.loc 1 671 0
 900 0020 074B     		ldr	r3, .L49
 901 0022 074A     		ldr	r2, .L49
 902 0024 1168     		ldr	r1, [r2]
 903 0026 7A68     		ldr	r2, [r7, #4]
 904 0028 0A43     		orrs	r2, r1
 905 002a 1A60     		str	r2, [r3]
 672:Generated_Source\PSoC4/PWM.c **** 
 673:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 906              		.loc 1 673 0
 907 002c 0F23     		movs	r3, #15
 908 002e FB18     		adds	r3, r7, r3
 909 0030 1B78     		ldrb	r3, [r3]
 910 0032 1800     		movs	r0, r3
 911 0034 FFF7FEFF 		bl	CyExitCriticalSection
 674:Generated_Source\PSoC4/PWM.c **** }
 912              		.loc 1 674 0
 913 0038 C046     		nop
 914 003a BD46     		mov	sp, r7
 915 003c 05B0     		add	sp, sp, #20
 916              		@ sp needed
 917 003e 90BD     		pop	{r4, r7, pc}
 918              	.L50:
 919              		.align	2
 920              	.L49:
 921 0040 40010540 		.word	1074069824
 922 0044 FFFFFCFF 		.word	-196609
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 29


 923              		.cfi_endproc
 924              	.LFE15:
 925              		.size	PWM_SetCounterMode, .-PWM_SetCounterMode
 926              		.section	.text.PWM_WritePeriod,"ax",%progbits
 927              		.align	2
 928              		.global	PWM_WritePeriod
 929              		.code	16
 930              		.thumb_func
 931              		.type	PWM_WritePeriod, %function
 932              	PWM_WritePeriod:
 933              	.LFB16:
 675:Generated_Source\PSoC4/PWM.c **** 
 676:Generated_Source\PSoC4/PWM.c **** 
 677:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 678:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriod
 679:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 680:Generated_Source\PSoC4/PWM.c **** *
 681:Generated_Source\PSoC4/PWM.c **** * Summary:
 682:Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit period register with the new period value.
 683:Generated_Source\PSoC4/PWM.c **** *  To cause the counter to count for N cycles this register should be written
 684:Generated_Source\PSoC4/PWM.c **** *  with N-1 (counts from 0 to period inclusive).
 685:Generated_Source\PSoC4/PWM.c **** *
 686:Generated_Source\PSoC4/PWM.c **** * Parameters:
 687:Generated_Source\PSoC4/PWM.c **** *  period: Period value
 688:Generated_Source\PSoC4/PWM.c **** *
 689:Generated_Source\PSoC4/PWM.c **** * Return:
 690:Generated_Source\PSoC4/PWM.c **** *  None
 691:Generated_Source\PSoC4/PWM.c **** *
 692:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 693:Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriod(uint32 period)
 694:Generated_Source\PSoC4/PWM.c **** {
 934              		.loc 1 694 0
 935              		.cfi_startproc
 936              		@ args = 0, pretend = 0, frame = 8
 937              		@ frame_needed = 1, uses_anonymous_args = 0
 938 0000 80B5     		push	{r7, lr}
 939              		.cfi_def_cfa_offset 8
 940              		.cfi_offset 7, -8
 941              		.cfi_offset 14, -4
 942 0002 82B0     		sub	sp, sp, #8
 943              		.cfi_def_cfa_offset 16
 944 0004 00AF     		add	r7, sp, #0
 945              		.cfi_def_cfa_register 7
 946 0006 7860     		str	r0, [r7, #4]
 695:Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_REG = (period & PWM_16BIT_MASK);
 947              		.loc 1 695 0
 948 0008 044B     		ldr	r3, .L52
 949 000a 7A68     		ldr	r2, [r7, #4]
 950 000c 1204     		lsls	r2, r2, #16
 951 000e 120C     		lsrs	r2, r2, #16
 952 0010 1A60     		str	r2, [r3]
 696:Generated_Source\PSoC4/PWM.c **** }
 953              		.loc 1 696 0
 954 0012 C046     		nop
 955 0014 BD46     		mov	sp, r7
 956 0016 02B0     		add	sp, sp, #8
 957              		@ sp needed
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 30


 958 0018 80BD     		pop	{r7, pc}
 959              	.L53:
 960 001a C046     		.align	2
 961              	.L52:
 962 001c 54010540 		.word	1074069844
 963              		.cfi_endproc
 964              	.LFE16:
 965              		.size	PWM_WritePeriod, .-PWM_WritePeriod
 966              		.section	.text.PWM_ReadPeriod,"ax",%progbits
 967              		.align	2
 968              		.global	PWM_ReadPeriod
 969              		.code	16
 970              		.thumb_func
 971              		.type	PWM_ReadPeriod, %function
 972              	PWM_ReadPeriod:
 973              	.LFB17:
 697:Generated_Source\PSoC4/PWM.c **** 
 698:Generated_Source\PSoC4/PWM.c **** 
 699:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 700:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriod
 701:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 702:Generated_Source\PSoC4/PWM.c **** *
 703:Generated_Source\PSoC4/PWM.c **** * Summary:
 704:Generated_Source\PSoC4/PWM.c **** *  Reads the 16 bit period register.
 705:Generated_Source\PSoC4/PWM.c **** *
 706:Generated_Source\PSoC4/PWM.c **** * Parameters:
 707:Generated_Source\PSoC4/PWM.c **** *  None
 708:Generated_Source\PSoC4/PWM.c **** *
 709:Generated_Source\PSoC4/PWM.c **** * Return:
 710:Generated_Source\PSoC4/PWM.c **** *  Period value
 711:Generated_Source\PSoC4/PWM.c **** *
 712:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 713:Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadPeriod(void)
 714:Generated_Source\PSoC4/PWM.c **** {
 974              		.loc 1 714 0
 975              		.cfi_startproc
 976              		@ args = 0, pretend = 0, frame = 0
 977              		@ frame_needed = 1, uses_anonymous_args = 0
 978 0000 80B5     		push	{r7, lr}
 979              		.cfi_def_cfa_offset 8
 980              		.cfi_offset 7, -8
 981              		.cfi_offset 14, -4
 982 0002 00AF     		add	r7, sp, #0
 983              		.cfi_def_cfa_register 7
 715:Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_REG & PWM_16BIT_MASK);
 984              		.loc 1 715 0
 985 0004 034B     		ldr	r3, .L56
 986 0006 1B68     		ldr	r3, [r3]
 987 0008 1B04     		lsls	r3, r3, #16
 988 000a 1B0C     		lsrs	r3, r3, #16
 716:Generated_Source\PSoC4/PWM.c **** }
 989              		.loc 1 716 0
 990 000c 1800     		movs	r0, r3
 991 000e BD46     		mov	sp, r7
 992              		@ sp needed
 993 0010 80BD     		pop	{r7, pc}
 994              	.L57:
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 31


 995 0012 C046     		.align	2
 996              	.L56:
 997 0014 54010540 		.word	1074069844
 998              		.cfi_endproc
 999              	.LFE17:
 1000              		.size	PWM_ReadPeriod, .-PWM_ReadPeriod
 1001              		.section	.text.PWM_SetCompareSwap,"ax",%progbits
 1002              		.align	2
 1003              		.global	PWM_SetCompareSwap
 1004              		.code	16
 1005              		.thumb_func
 1006              		.type	PWM_SetCompareSwap, %function
 1007              	PWM_SetCompareSwap:
 1008              	.LFB18:
 717:Generated_Source\PSoC4/PWM.c **** 
 718:Generated_Source\PSoC4/PWM.c **** 
 719:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 720:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCompareSwap
 721:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 722:Generated_Source\PSoC4/PWM.c **** *
 723:Generated_Source\PSoC4/PWM.c **** * Summary:
 724:Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the compare registers are
 725:Generated_Source\PSoC4/PWM.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 726:Generated_Source\PSoC4/PWM.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 727:Generated_Source\PSoC4/PWM.c **** *  following a hardware switch event.
 728:Generated_Source\PSoC4/PWM.c **** *
 729:Generated_Source\PSoC4/PWM.c **** * Parameters:
 730:Generated_Source\PSoC4/PWM.c **** *  swapEnable
 731:Generated_Source\PSoC4/PWM.c **** *   Values:
 732:Generated_Source\PSoC4/PWM.c **** *     - 0 - Disable swap
 733:Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable swap
 734:Generated_Source\PSoC4/PWM.c **** *
 735:Generated_Source\PSoC4/PWM.c **** * Return:
 736:Generated_Source\PSoC4/PWM.c **** *  None
 737:Generated_Source\PSoC4/PWM.c **** *
 738:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 739:Generated_Source\PSoC4/PWM.c **** void PWM_SetCompareSwap(uint32 swapEnable)
 740:Generated_Source\PSoC4/PWM.c **** {
 1009              		.loc 1 740 0
 1010              		.cfi_startproc
 1011              		@ args = 0, pretend = 0, frame = 16
 1012              		@ frame_needed = 1, uses_anonymous_args = 0
 1013 0000 90B5     		push	{r4, r7, lr}
 1014              		.cfi_def_cfa_offset 12
 1015              		.cfi_offset 4, -12
 1016              		.cfi_offset 7, -8
 1017              		.cfi_offset 14, -4
 1018 0002 85B0     		sub	sp, sp, #20
 1019              		.cfi_def_cfa_offset 32
 1020 0004 00AF     		add	r7, sp, #0
 1021              		.cfi_def_cfa_register 7
 1022 0006 7860     		str	r0, [r7, #4]
 741:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 742:Generated_Source\PSoC4/PWM.c **** 
 743:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1023              		.loc 1 743 0
 1024 0008 0F23     		movs	r3, #15
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 32


 1025 000a FC18     		adds	r4, r7, r3
 1026 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1027 0010 0300     		movs	r3, r0
 1028 0012 2370     		strb	r3, [r4]
 744:Generated_Source\PSoC4/PWM.c **** 
 745:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_CC_MASK;
 1029              		.loc 1 745 0
 1030 0014 0B4B     		ldr	r3, .L59
 1031 0016 0B4A     		ldr	r2, .L59
 1032 0018 1268     		ldr	r2, [r2]
 1033 001a 0121     		movs	r1, #1
 1034 001c 8A43     		bics	r2, r1
 1035 001e 1A60     		str	r2, [r3]
 746:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= (swapEnable & PWM_1BIT_MASK);
 1036              		.loc 1 746 0
 1037 0020 084B     		ldr	r3, .L59
 1038 0022 084A     		ldr	r2, .L59
 1039 0024 1168     		ldr	r1, [r2]
 1040 0026 7A68     		ldr	r2, [r7, #4]
 1041 0028 0120     		movs	r0, #1
 1042 002a 0240     		ands	r2, r0
 1043 002c 0A43     		orrs	r2, r1
 1044 002e 1A60     		str	r2, [r3]
 747:Generated_Source\PSoC4/PWM.c **** 
 748:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1045              		.loc 1 748 0
 1046 0030 0F23     		movs	r3, #15
 1047 0032 FB18     		adds	r3, r7, r3
 1048 0034 1B78     		ldrb	r3, [r3]
 1049 0036 1800     		movs	r0, r3
 1050 0038 FFF7FEFF 		bl	CyExitCriticalSection
 749:Generated_Source\PSoC4/PWM.c **** }
 1051              		.loc 1 749 0
 1052 003c C046     		nop
 1053 003e BD46     		mov	sp, r7
 1054 0040 05B0     		add	sp, sp, #20
 1055              		@ sp needed
 1056 0042 90BD     		pop	{r4, r7, pc}
 1057              	.L60:
 1058              		.align	2
 1059              	.L59:
 1060 0044 40010540 		.word	1074069824
 1061              		.cfi_endproc
 1062              	.LFE18:
 1063              		.size	PWM_SetCompareSwap, .-PWM_SetCompareSwap
 1064              		.section	.text.PWM_WritePeriodBuf,"ax",%progbits
 1065              		.align	2
 1066              		.global	PWM_WritePeriodBuf
 1067              		.code	16
 1068              		.thumb_func
 1069              		.type	PWM_WritePeriodBuf, %function
 1070              	PWM_WritePeriodBuf:
 1071              	.LFB19:
 750:Generated_Source\PSoC4/PWM.c **** 
 751:Generated_Source\PSoC4/PWM.c **** 
 752:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 753:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriodBuf
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 33


 754:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 755:Generated_Source\PSoC4/PWM.c **** *
 756:Generated_Source\PSoC4/PWM.c **** * Summary:
 757:Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit period buf register with the new period value.
 758:Generated_Source\PSoC4/PWM.c **** *
 759:Generated_Source\PSoC4/PWM.c **** * Parameters:
 760:Generated_Source\PSoC4/PWM.c **** *  periodBuf: Period value
 761:Generated_Source\PSoC4/PWM.c **** *
 762:Generated_Source\PSoC4/PWM.c **** * Return:
 763:Generated_Source\PSoC4/PWM.c **** *  None
 764:Generated_Source\PSoC4/PWM.c **** *
 765:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 766:Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriodBuf(uint32 periodBuf)
 767:Generated_Source\PSoC4/PWM.c **** {
 1072              		.loc 1 767 0
 1073              		.cfi_startproc
 1074              		@ args = 0, pretend = 0, frame = 8
 1075              		@ frame_needed = 1, uses_anonymous_args = 0
 1076 0000 80B5     		push	{r7, lr}
 1077              		.cfi_def_cfa_offset 8
 1078              		.cfi_offset 7, -8
 1079              		.cfi_offset 14, -4
 1080 0002 82B0     		sub	sp, sp, #8
 1081              		.cfi_def_cfa_offset 16
 1082 0004 00AF     		add	r7, sp, #0
 1083              		.cfi_def_cfa_register 7
 1084 0006 7860     		str	r0, [r7, #4]
 768:Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_BUF_REG = (periodBuf & PWM_16BIT_MASK);
 1085              		.loc 1 768 0
 1086 0008 044B     		ldr	r3, .L62
 1087 000a 7A68     		ldr	r2, [r7, #4]
 1088 000c 1204     		lsls	r2, r2, #16
 1089 000e 120C     		lsrs	r2, r2, #16
 1090 0010 1A60     		str	r2, [r3]
 769:Generated_Source\PSoC4/PWM.c **** }
 1091              		.loc 1 769 0
 1092 0012 C046     		nop
 1093 0014 BD46     		mov	sp, r7
 1094 0016 02B0     		add	sp, sp, #8
 1095              		@ sp needed
 1096 0018 80BD     		pop	{r7, pc}
 1097              	.L63:
 1098 001a C046     		.align	2
 1099              	.L62:
 1100 001c 58010540 		.word	1074069848
 1101              		.cfi_endproc
 1102              	.LFE19:
 1103              		.size	PWM_WritePeriodBuf, .-PWM_WritePeriodBuf
 1104              		.section	.text.PWM_ReadPeriodBuf,"ax",%progbits
 1105              		.align	2
 1106              		.global	PWM_ReadPeriodBuf
 1107              		.code	16
 1108              		.thumb_func
 1109              		.type	PWM_ReadPeriodBuf, %function
 1110              	PWM_ReadPeriodBuf:
 1111              	.LFB20:
 770:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 34


 771:Generated_Source\PSoC4/PWM.c **** 
 772:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 773:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriodBuf
 774:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 775:Generated_Source\PSoC4/PWM.c **** *
 776:Generated_Source\PSoC4/PWM.c **** * Summary:
 777:Generated_Source\PSoC4/PWM.c **** *  Reads the 16 bit period buf register.
 778:Generated_Source\PSoC4/PWM.c **** *
 779:Generated_Source\PSoC4/PWM.c **** * Parameters:
 780:Generated_Source\PSoC4/PWM.c **** *  None
 781:Generated_Source\PSoC4/PWM.c **** *
 782:Generated_Source\PSoC4/PWM.c **** * Return:
 783:Generated_Source\PSoC4/PWM.c **** *  Period value
 784:Generated_Source\PSoC4/PWM.c **** *
 785:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 786:Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadPeriodBuf(void)
 787:Generated_Source\PSoC4/PWM.c **** {
 1112              		.loc 1 787 0
 1113              		.cfi_startproc
 1114              		@ args = 0, pretend = 0, frame = 0
 1115              		@ frame_needed = 1, uses_anonymous_args = 0
 1116 0000 80B5     		push	{r7, lr}
 1117              		.cfi_def_cfa_offset 8
 1118              		.cfi_offset 7, -8
 1119              		.cfi_offset 14, -4
 1120 0002 00AF     		add	r7, sp, #0
 1121              		.cfi_def_cfa_register 7
 788:Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_BUF_REG & PWM_16BIT_MASK);
 1122              		.loc 1 788 0
 1123 0004 034B     		ldr	r3, .L66
 1124 0006 1B68     		ldr	r3, [r3]
 1125 0008 1B04     		lsls	r3, r3, #16
 1126 000a 1B0C     		lsrs	r3, r3, #16
 789:Generated_Source\PSoC4/PWM.c **** }
 1127              		.loc 1 789 0
 1128 000c 1800     		movs	r0, r3
 1129 000e BD46     		mov	sp, r7
 1130              		@ sp needed
 1131 0010 80BD     		pop	{r7, pc}
 1132              	.L67:
 1133 0012 C046     		.align	2
 1134              	.L66:
 1135 0014 58010540 		.word	1074069848
 1136              		.cfi_endproc
 1137              	.LFE20:
 1138              		.size	PWM_ReadPeriodBuf, .-PWM_ReadPeriodBuf
 1139              		.section	.text.PWM_SetPeriodSwap,"ax",%progbits
 1140              		.align	2
 1141              		.global	PWM_SetPeriodSwap
 1142              		.code	16
 1143              		.thumb_func
 1144              		.type	PWM_SetPeriodSwap, %function
 1145              	PWM_SetPeriodSwap:
 1146              	.LFB21:
 790:Generated_Source\PSoC4/PWM.c **** 
 791:Generated_Source\PSoC4/PWM.c **** 
 792:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 35


 793:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPeriodSwap
 794:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 795:Generated_Source\PSoC4/PWM.c **** *
 796:Generated_Source\PSoC4/PWM.c **** * Summary:
 797:Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the period registers are
 798:Generated_Source\PSoC4/PWM.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 799:Generated_Source\PSoC4/PWM.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 800:Generated_Source\PSoC4/PWM.c **** *  switch event.
 801:Generated_Source\PSoC4/PWM.c **** *
 802:Generated_Source\PSoC4/PWM.c **** * Parameters:
 803:Generated_Source\PSoC4/PWM.c **** *  swapEnable
 804:Generated_Source\PSoC4/PWM.c **** *   Values:
 805:Generated_Source\PSoC4/PWM.c **** *     - 0 - Disable swap
 806:Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable swap
 807:Generated_Source\PSoC4/PWM.c **** *
 808:Generated_Source\PSoC4/PWM.c **** * Return:
 809:Generated_Source\PSoC4/PWM.c **** *  None
 810:Generated_Source\PSoC4/PWM.c **** *
 811:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 812:Generated_Source\PSoC4/PWM.c **** void PWM_SetPeriodSwap(uint32 swapEnable)
 813:Generated_Source\PSoC4/PWM.c **** {
 1147              		.loc 1 813 0
 1148              		.cfi_startproc
 1149              		@ args = 0, pretend = 0, frame = 16
 1150              		@ frame_needed = 1, uses_anonymous_args = 0
 1151 0000 90B5     		push	{r4, r7, lr}
 1152              		.cfi_def_cfa_offset 12
 1153              		.cfi_offset 4, -12
 1154              		.cfi_offset 7, -8
 1155              		.cfi_offset 14, -4
 1156 0002 85B0     		sub	sp, sp, #20
 1157              		.cfi_def_cfa_offset 32
 1158 0004 00AF     		add	r7, sp, #0
 1159              		.cfi_def_cfa_register 7
 1160 0006 7860     		str	r0, [r7, #4]
 814:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 815:Generated_Source\PSoC4/PWM.c **** 
 816:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1161              		.loc 1 816 0
 1162 0008 0F23     		movs	r3, #15
 1163 000a FC18     		adds	r4, r7, r3
 1164 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1165 0010 0300     		movs	r3, r0
 1166 0012 2370     		strb	r3, [r4]
 817:Generated_Source\PSoC4/PWM.c **** 
 818:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_PERIOD_MASK;
 1167              		.loc 1 818 0
 1168 0014 0C4B     		ldr	r3, .L69
 1169 0016 0C4A     		ldr	r2, .L69
 1170 0018 1268     		ldr	r2, [r2]
 1171 001a 0221     		movs	r1, #2
 1172 001c 8A43     		bics	r2, r1
 1173 001e 1A60     		str	r2, [r3]
 819:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((swapEnable & PWM_1BIT_MASK) <<
 1174              		.loc 1 819 0
 1175 0020 094B     		ldr	r3, .L69
 1176 0022 094A     		ldr	r2, .L69
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 36


 1177 0024 1168     		ldr	r1, [r2]
 1178 0026 7A68     		ldr	r2, [r7, #4]
 1179 0028 5200     		lsls	r2, r2, #1
 1180 002a 0220     		movs	r0, #2
 1181 002c 0240     		ands	r2, r0
 1182 002e 0A43     		orrs	r2, r1
 1183 0030 1A60     		str	r2, [r3]
 820:Generated_Source\PSoC4/PWM.c ****                                                             PWM_RELOAD_PERIOD_SHIFT));
 821:Generated_Source\PSoC4/PWM.c **** 
 822:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1184              		.loc 1 822 0
 1185 0032 0F23     		movs	r3, #15
 1186 0034 FB18     		adds	r3, r7, r3
 1187 0036 1B78     		ldrb	r3, [r3]
 1188 0038 1800     		movs	r0, r3
 1189 003a FFF7FEFF 		bl	CyExitCriticalSection
 823:Generated_Source\PSoC4/PWM.c **** }
 1190              		.loc 1 823 0
 1191 003e C046     		nop
 1192 0040 BD46     		mov	sp, r7
 1193 0042 05B0     		add	sp, sp, #20
 1194              		@ sp needed
 1195 0044 90BD     		pop	{r4, r7, pc}
 1196              	.L70:
 1197 0046 C046     		.align	2
 1198              	.L69:
 1199 0048 40010540 		.word	1074069824
 1200              		.cfi_endproc
 1201              	.LFE21:
 1202              		.size	PWM_SetPeriodSwap, .-PWM_SetPeriodSwap
 1203              		.section	.text.PWM_WriteCompare,"ax",%progbits
 1204              		.align	2
 1205              		.global	PWM_WriteCompare
 1206              		.code	16
 1207              		.thumb_func
 1208              		.type	PWM_WriteCompare, %function
 1209              	PWM_WriteCompare:
 1210              	.LFB22:
 824:Generated_Source\PSoC4/PWM.c **** 
 825:Generated_Source\PSoC4/PWM.c **** 
 826:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 827:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCompare
 828:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 829:Generated_Source\PSoC4/PWM.c **** *
 830:Generated_Source\PSoC4/PWM.c **** * Summary:
 831:Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit compare register with the new compare value. Not
 832:Generated_Source\PSoC4/PWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 833:Generated_Source\PSoC4/PWM.c **** *
 834:Generated_Source\PSoC4/PWM.c **** * Parameters:
 835:Generated_Source\PSoC4/PWM.c **** *  compare: Compare value
 836:Generated_Source\PSoC4/PWM.c **** *
 837:Generated_Source\PSoC4/PWM.c **** * Return:
 838:Generated_Source\PSoC4/PWM.c **** *  None
 839:Generated_Source\PSoC4/PWM.c **** *
 840:Generated_Source\PSoC4/PWM.c **** * Note:
 841:Generated_Source\PSoC4/PWM.c **** *  It is not recommended to use the value equal to "0" or equal to 
 842:Generated_Source\PSoC4/PWM.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 37


 843:Generated_Source\PSoC4/PWM.c **** *  PSoC 4100/PSoC 4200 devices.
 844:Generated_Source\PSoC4/PWM.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 845:Generated_Source\PSoC4/PWM.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 846:Generated_Source\PSoC4/PWM.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 847:Generated_Source\PSoC4/PWM.c **** *
 848:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 849:Generated_Source\PSoC4/PWM.c **** void PWM_WriteCompare(uint32 compare)
 850:Generated_Source\PSoC4/PWM.c **** {
 1211              		.loc 1 850 0
 1212              		.cfi_startproc
 1213              		@ args = 0, pretend = 0, frame = 8
 1214              		@ frame_needed = 1, uses_anonymous_args = 0
 1215 0000 80B5     		push	{r7, lr}
 1216              		.cfi_def_cfa_offset 8
 1217              		.cfi_offset 7, -8
 1218              		.cfi_offset 14, -4
 1219 0002 82B0     		sub	sp, sp, #8
 1220              		.cfi_def_cfa_offset 16
 1221 0004 00AF     		add	r7, sp, #0
 1222              		.cfi_def_cfa_register 7
 1223 0006 7860     		str	r0, [r7, #4]
 851:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 852:Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 853:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 854:Generated_Source\PSoC4/PWM.c **** 
 855:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 856:Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 857:Generated_Source\PSoC4/PWM.c **** 
 858:Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 859:Generated_Source\PSoC4/PWM.c ****         {
 860:Generated_Source\PSoC4/PWM.c ****             compare++;
 861:Generated_Source\PSoC4/PWM.c ****         }
 862:Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0u != compare))
 863:Generated_Source\PSoC4/PWM.c ****         {
 864:Generated_Source\PSoC4/PWM.c ****             compare--;
 865:Generated_Source\PSoC4/PWM.c ****         }
 866:Generated_Source\PSoC4/PWM.c ****         else
 867:Generated_Source\PSoC4/PWM.c ****         {
 868:Generated_Source\PSoC4/PWM.c ****         }
 869:Generated_Source\PSoC4/PWM.c ****         
 870:Generated_Source\PSoC4/PWM.c ****     
 871:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 872:Generated_Source\PSoC4/PWM.c ****     
 873:Generated_Source\PSoC4/PWM.c ****     PWM_COMP_CAP_REG = (compare & PWM_16BIT_MASK);
 1224              		.loc 1 873 0
 1225 0008 044B     		ldr	r3, .L72
 1226 000a 7A68     		ldr	r2, [r7, #4]
 1227 000c 1204     		lsls	r2, r2, #16
 1228 000e 120C     		lsrs	r2, r2, #16
 1229 0010 1A60     		str	r2, [r3]
 874:Generated_Source\PSoC4/PWM.c **** }
 1230              		.loc 1 874 0
 1231 0012 C046     		nop
 1232 0014 BD46     		mov	sp, r7
 1233 0016 02B0     		add	sp, sp, #8
 1234              		@ sp needed
 1235 0018 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 38


 1236              	.L73:
 1237 001a C046     		.align	2
 1238              	.L72:
 1239 001c 4C010540 		.word	1074069836
 1240              		.cfi_endproc
 1241              	.LFE22:
 1242              		.size	PWM_WriteCompare, .-PWM_WriteCompare
 1243              		.section	.text.PWM_ReadCompare,"ax",%progbits
 1244              		.align	2
 1245              		.global	PWM_ReadCompare
 1246              		.code	16
 1247              		.thumb_func
 1248              		.type	PWM_ReadCompare, %function
 1249              	PWM_ReadCompare:
 1250              	.LFB23:
 875:Generated_Source\PSoC4/PWM.c **** 
 876:Generated_Source\PSoC4/PWM.c **** 
 877:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 878:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCompare
 879:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 880:Generated_Source\PSoC4/PWM.c **** *
 881:Generated_Source\PSoC4/PWM.c **** * Summary:
 882:Generated_Source\PSoC4/PWM.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 883:Generated_Source\PSoC4/PWM.c **** *  or in Quadrature Decoder modes.
 884:Generated_Source\PSoC4/PWM.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 885:Generated_Source\PSoC4/PWM.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 886:Generated_Source\PSoC4/PWM.c **** *  Down counting mode (except 0x0u).
 887:Generated_Source\PSoC4/PWM.c **** *
 888:Generated_Source\PSoC4/PWM.c **** * Parameters:
 889:Generated_Source\PSoC4/PWM.c **** *  None
 890:Generated_Source\PSoC4/PWM.c **** *
 891:Generated_Source\PSoC4/PWM.c **** * Return:
 892:Generated_Source\PSoC4/PWM.c **** *  Compare value
 893:Generated_Source\PSoC4/PWM.c **** *
 894:Generated_Source\PSoC4/PWM.c **** * Note:
 895:Generated_Source\PSoC4/PWM.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 896:Generated_Source\PSoC4/PWM.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 897:Generated_Source\PSoC4/PWM.c **** *  Down counting mode (except 0x0u).
 898:Generated_Source\PSoC4/PWM.c **** *
 899:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 900:Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCompare(void)
 901:Generated_Source\PSoC4/PWM.c **** {
 1251              		.loc 1 901 0
 1252              		.cfi_startproc
 1253              		@ args = 0, pretend = 0, frame = 0
 1254              		@ frame_needed = 1, uses_anonymous_args = 0
 1255 0000 80B5     		push	{r7, lr}
 1256              		.cfi_def_cfa_offset 8
 1257              		.cfi_offset 7, -8
 1258              		.cfi_offset 14, -4
 1259 0002 00AF     		add	r7, sp, #0
 1260              		.cfi_def_cfa_register 7
 902:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 903:Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 904:Generated_Source\PSoC4/PWM.c ****         uint32 regVal;
 905:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 906:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 39


 907:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 908:Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 909:Generated_Source\PSoC4/PWM.c ****         
 910:Generated_Source\PSoC4/PWM.c ****         regVal = PWM_COMP_CAP_REG;
 911:Generated_Source\PSoC4/PWM.c ****         
 912:Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0u != regVal))
 913:Generated_Source\PSoC4/PWM.c ****         {
 914:Generated_Source\PSoC4/PWM.c ****             regVal--;
 915:Generated_Source\PSoC4/PWM.c ****         }
 916:Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 917:Generated_Source\PSoC4/PWM.c ****         {
 918:Generated_Source\PSoC4/PWM.c ****             regVal++;
 919:Generated_Source\PSoC4/PWM.c ****         }
 920:Generated_Source\PSoC4/PWM.c ****         else
 921:Generated_Source\PSoC4/PWM.c ****         {
 922:Generated_Source\PSoC4/PWM.c ****         }
 923:Generated_Source\PSoC4/PWM.c **** 
 924:Generated_Source\PSoC4/PWM.c ****         return (regVal & PWM_16BIT_MASK);
 925:Generated_Source\PSoC4/PWM.c ****     #else
 926:Generated_Source\PSoC4/PWM.c ****         return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 1261              		.loc 1 926 0
 1262 0004 034B     		ldr	r3, .L76
 1263 0006 1B68     		ldr	r3, [r3]
 1264 0008 1B04     		lsls	r3, r3, #16
 1265 000a 1B0C     		lsrs	r3, r3, #16
 927:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 928:Generated_Source\PSoC4/PWM.c **** }
 1266              		.loc 1 928 0
 1267 000c 1800     		movs	r0, r3
 1268 000e BD46     		mov	sp, r7
 1269              		@ sp needed
 1270 0010 80BD     		pop	{r7, pc}
 1271              	.L77:
 1272 0012 C046     		.align	2
 1273              	.L76:
 1274 0014 4C010540 		.word	1074069836
 1275              		.cfi_endproc
 1276              	.LFE23:
 1277              		.size	PWM_ReadCompare, .-PWM_ReadCompare
 1278              		.section	.text.PWM_WriteCompareBuf,"ax",%progbits
 1279              		.align	2
 1280              		.global	PWM_WriteCompareBuf
 1281              		.code	16
 1282              		.thumb_func
 1283              		.type	PWM_WriteCompareBuf, %function
 1284              	PWM_WriteCompareBuf:
 1285              	.LFB24:
 929:Generated_Source\PSoC4/PWM.c **** 
 930:Generated_Source\PSoC4/PWM.c **** 
 931:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 932:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCompareBuf
 933:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 934:Generated_Source\PSoC4/PWM.c **** *
 935:Generated_Source\PSoC4/PWM.c **** * Summary:
 936:Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 937:Generated_Source\PSoC4/PWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 938:Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 40


 939:Generated_Source\PSoC4/PWM.c **** * Parameters:
 940:Generated_Source\PSoC4/PWM.c **** *  compareBuf: Compare value
 941:Generated_Source\PSoC4/PWM.c **** *
 942:Generated_Source\PSoC4/PWM.c **** * Return:
 943:Generated_Source\PSoC4/PWM.c **** *  None
 944:Generated_Source\PSoC4/PWM.c **** *
 945:Generated_Source\PSoC4/PWM.c **** * Note:
 946:Generated_Source\PSoC4/PWM.c **** *  It is not recommended to use the value equal to "0" or equal to 
 947:Generated_Source\PSoC4/PWM.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 948:Generated_Source\PSoC4/PWM.c **** *  PSoC 4100/PSoC 4200 devices.
 949:Generated_Source\PSoC4/PWM.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 950:Generated_Source\PSoC4/PWM.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 951:Generated_Source\PSoC4/PWM.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 952:Generated_Source\PSoC4/PWM.c **** *
 953:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 954:Generated_Source\PSoC4/PWM.c **** void PWM_WriteCompareBuf(uint32 compareBuf)
 955:Generated_Source\PSoC4/PWM.c **** {
 1286              		.loc 1 955 0
 1287              		.cfi_startproc
 1288              		@ args = 0, pretend = 0, frame = 8
 1289              		@ frame_needed = 1, uses_anonymous_args = 0
 1290 0000 80B5     		push	{r7, lr}
 1291              		.cfi_def_cfa_offset 8
 1292              		.cfi_offset 7, -8
 1293              		.cfi_offset 14, -4
 1294 0002 82B0     		sub	sp, sp, #8
 1295              		.cfi_def_cfa_offset 16
 1296 0004 00AF     		add	r7, sp, #0
 1297              		.cfi_def_cfa_register 7
 1298 0006 7860     		str	r0, [r7, #4]
 956:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 957:Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 958:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 959:Generated_Source\PSoC4/PWM.c **** 
 960:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 961:Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 962:Generated_Source\PSoC4/PWM.c **** 
 963:Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 964:Generated_Source\PSoC4/PWM.c ****         {
 965:Generated_Source\PSoC4/PWM.c ****             compareBuf++;
 966:Generated_Source\PSoC4/PWM.c ****         }
 967:Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0u != compareBuf))
 968:Generated_Source\PSoC4/PWM.c ****         {
 969:Generated_Source\PSoC4/PWM.c ****             compareBuf --;
 970:Generated_Source\PSoC4/PWM.c ****         }
 971:Generated_Source\PSoC4/PWM.c ****         else
 972:Generated_Source\PSoC4/PWM.c ****         {
 973:Generated_Source\PSoC4/PWM.c ****         }
 974:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 975:Generated_Source\PSoC4/PWM.c ****     
 976:Generated_Source\PSoC4/PWM.c ****     PWM_COMP_CAP_BUF_REG = (compareBuf & PWM_16BIT_MASK);
 1299              		.loc 1 976 0
 1300 0008 044B     		ldr	r3, .L79
 1301 000a 7A68     		ldr	r2, [r7, #4]
 1302 000c 1204     		lsls	r2, r2, #16
 1303 000e 120C     		lsrs	r2, r2, #16
 1304 0010 1A60     		str	r2, [r3]
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 41


 977:Generated_Source\PSoC4/PWM.c **** }
 1305              		.loc 1 977 0
 1306 0012 C046     		nop
 1307 0014 BD46     		mov	sp, r7
 1308 0016 02B0     		add	sp, sp, #8
 1309              		@ sp needed
 1310 0018 80BD     		pop	{r7, pc}
 1311              	.L80:
 1312 001a C046     		.align	2
 1313              	.L79:
 1314 001c 50010540 		.word	1074069840
 1315              		.cfi_endproc
 1316              	.LFE24:
 1317              		.size	PWM_WriteCompareBuf, .-PWM_WriteCompareBuf
 1318              		.section	.text.PWM_ReadCompareBuf,"ax",%progbits
 1319              		.align	2
 1320              		.global	PWM_ReadCompareBuf
 1321              		.code	16
 1322              		.thumb_func
 1323              		.type	PWM_ReadCompareBuf, %function
 1324              	PWM_ReadCompareBuf:
 1325              	.LFB25:
 978:Generated_Source\PSoC4/PWM.c **** 
 979:Generated_Source\PSoC4/PWM.c **** 
 980:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 981:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCompareBuf
 982:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 983:Generated_Source\PSoC4/PWM.c **** *
 984:Generated_Source\PSoC4/PWM.c **** * Summary:
 985:Generated_Source\PSoC4/PWM.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 986:Generated_Source\PSoC4/PWM.c **** *  Capture or in Quadrature Decoder modes.
 987:Generated_Source\PSoC4/PWM.c **** *
 988:Generated_Source\PSoC4/PWM.c **** * Parameters:
 989:Generated_Source\PSoC4/PWM.c **** *  None
 990:Generated_Source\PSoC4/PWM.c **** *
 991:Generated_Source\PSoC4/PWM.c **** * Return:
 992:Generated_Source\PSoC4/PWM.c **** *  Compare buffer value
 993:Generated_Source\PSoC4/PWM.c **** *
 994:Generated_Source\PSoC4/PWM.c **** * Note:
 995:Generated_Source\PSoC4/PWM.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 996:Generated_Source\PSoC4/PWM.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 997:Generated_Source\PSoC4/PWM.c **** *  Down counting mode (except 0x0u).
 998:Generated_Source\PSoC4/PWM.c **** *
 999:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1000:Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCompareBuf(void)
1001:Generated_Source\PSoC4/PWM.c **** {
 1326              		.loc 1 1001 0
 1327              		.cfi_startproc
 1328              		@ args = 0, pretend = 0, frame = 0
 1329              		@ frame_needed = 1, uses_anonymous_args = 0
 1330 0000 80B5     		push	{r7, lr}
 1331              		.cfi_def_cfa_offset 8
 1332              		.cfi_offset 7, -8
 1333              		.cfi_offset 14, -4
 1334 0002 00AF     		add	r7, sp, #0
 1335              		.cfi_def_cfa_register 7
1002:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 42


1003:Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
1004:Generated_Source\PSoC4/PWM.c ****         uint32 regVal;
1005:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
1006:Generated_Source\PSoC4/PWM.c **** 
1007:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
1008:Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
1009:Generated_Source\PSoC4/PWM.c **** 
1010:Generated_Source\PSoC4/PWM.c ****         regVal = PWM_COMP_CAP_BUF_REG;
1011:Generated_Source\PSoC4/PWM.c ****         
1012:Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0u != regVal))
1013:Generated_Source\PSoC4/PWM.c ****         {
1014:Generated_Source\PSoC4/PWM.c ****             regVal--;
1015:Generated_Source\PSoC4/PWM.c ****         }
1016:Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0xFFFFu != regVal))
1017:Generated_Source\PSoC4/PWM.c ****         {
1018:Generated_Source\PSoC4/PWM.c ****             regVal++;
1019:Generated_Source\PSoC4/PWM.c ****         }
1020:Generated_Source\PSoC4/PWM.c ****         else
1021:Generated_Source\PSoC4/PWM.c ****         {
1022:Generated_Source\PSoC4/PWM.c ****         }
1023:Generated_Source\PSoC4/PWM.c **** 
1024:Generated_Source\PSoC4/PWM.c ****         return (regVal & PWM_16BIT_MASK);
1025:Generated_Source\PSoC4/PWM.c ****     #else
1026:Generated_Source\PSoC4/PWM.c ****         return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
 1336              		.loc 1 1026 0
 1337 0004 034B     		ldr	r3, .L83
 1338 0006 1B68     		ldr	r3, [r3]
 1339 0008 1B04     		lsls	r3, r3, #16
 1340 000a 1B0C     		lsrs	r3, r3, #16
1027:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
1028:Generated_Source\PSoC4/PWM.c **** }
 1341              		.loc 1 1028 0
 1342 000c 1800     		movs	r0, r3
 1343 000e BD46     		mov	sp, r7
 1344              		@ sp needed
 1345 0010 80BD     		pop	{r7, pc}
 1346              	.L84:
 1347 0012 C046     		.align	2
 1348              	.L83:
 1349 0014 50010540 		.word	1074069840
 1350              		.cfi_endproc
 1351              	.LFE25:
 1352              		.size	PWM_ReadCompareBuf, .-PWM_ReadCompareBuf
 1353              		.section	.text.PWM_ReadCapture,"ax",%progbits
 1354              		.align	2
 1355              		.global	PWM_ReadCapture
 1356              		.code	16
 1357              		.thumb_func
 1358              		.type	PWM_ReadCapture, %function
 1359              	PWM_ReadCapture:
 1360              	.LFB26:
1029:Generated_Source\PSoC4/PWM.c **** 
1030:Generated_Source\PSoC4/PWM.c **** 
1031:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1032:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCapture
1033:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1034:Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 43


1035:Generated_Source\PSoC4/PWM.c **** * Summary:
1036:Generated_Source\PSoC4/PWM.c **** *  Reads the captured counter value. This API is applicable only for
1037:Generated_Source\PSoC4/PWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1038:Generated_Source\PSoC4/PWM.c **** *
1039:Generated_Source\PSoC4/PWM.c **** * Parameters:
1040:Generated_Source\PSoC4/PWM.c **** *  None
1041:Generated_Source\PSoC4/PWM.c **** *
1042:Generated_Source\PSoC4/PWM.c **** * Return:
1043:Generated_Source\PSoC4/PWM.c **** *  Capture value
1044:Generated_Source\PSoC4/PWM.c **** *
1045:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1046:Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCapture(void)
1047:Generated_Source\PSoC4/PWM.c **** {
 1361              		.loc 1 1047 0
 1362              		.cfi_startproc
 1363              		@ args = 0, pretend = 0, frame = 0
 1364              		@ frame_needed = 1, uses_anonymous_args = 0
 1365 0000 80B5     		push	{r7, lr}
 1366              		.cfi_def_cfa_offset 8
 1367              		.cfi_offset 7, -8
 1368              		.cfi_offset 14, -4
 1369 0002 00AF     		add	r7, sp, #0
 1370              		.cfi_def_cfa_register 7
1048:Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 1371              		.loc 1 1048 0
 1372 0004 034B     		ldr	r3, .L87
 1373 0006 1B68     		ldr	r3, [r3]
 1374 0008 1B04     		lsls	r3, r3, #16
 1375 000a 1B0C     		lsrs	r3, r3, #16
1049:Generated_Source\PSoC4/PWM.c **** }
 1376              		.loc 1 1049 0
 1377 000c 1800     		movs	r0, r3
 1378 000e BD46     		mov	sp, r7
 1379              		@ sp needed
 1380 0010 80BD     		pop	{r7, pc}
 1381              	.L88:
 1382 0012 C046     		.align	2
 1383              	.L87:
 1384 0014 4C010540 		.word	1074069836
 1385              		.cfi_endproc
 1386              	.LFE26:
 1387              		.size	PWM_ReadCapture, .-PWM_ReadCapture
 1388              		.section	.text.PWM_ReadCaptureBuf,"ax",%progbits
 1389              		.align	2
 1390              		.global	PWM_ReadCaptureBuf
 1391              		.code	16
 1392              		.thumb_func
 1393              		.type	PWM_ReadCaptureBuf, %function
 1394              	PWM_ReadCaptureBuf:
 1395              	.LFB27:
1050:Generated_Source\PSoC4/PWM.c **** 
1051:Generated_Source\PSoC4/PWM.c **** 
1052:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1053:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCaptureBuf
1054:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1055:Generated_Source\PSoC4/PWM.c **** *
1056:Generated_Source\PSoC4/PWM.c **** * Summary:
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 44


1057:Generated_Source\PSoC4/PWM.c **** *  Reads the capture buffer register. This API is applicable only for
1058:Generated_Source\PSoC4/PWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1059:Generated_Source\PSoC4/PWM.c **** *
1060:Generated_Source\PSoC4/PWM.c **** * Parameters:
1061:Generated_Source\PSoC4/PWM.c **** *  None
1062:Generated_Source\PSoC4/PWM.c **** *
1063:Generated_Source\PSoC4/PWM.c **** * Return:
1064:Generated_Source\PSoC4/PWM.c **** *  Capture buffer value
1065:Generated_Source\PSoC4/PWM.c **** *
1066:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1067:Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCaptureBuf(void)
1068:Generated_Source\PSoC4/PWM.c **** {
 1396              		.loc 1 1068 0
 1397              		.cfi_startproc
 1398              		@ args = 0, pretend = 0, frame = 0
 1399              		@ frame_needed = 1, uses_anonymous_args = 0
 1400 0000 80B5     		push	{r7, lr}
 1401              		.cfi_def_cfa_offset 8
 1402              		.cfi_offset 7, -8
 1403              		.cfi_offset 14, -4
 1404 0002 00AF     		add	r7, sp, #0
 1405              		.cfi_def_cfa_register 7
1069:Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
 1406              		.loc 1 1069 0
 1407 0004 034B     		ldr	r3, .L91
 1408 0006 1B68     		ldr	r3, [r3]
 1409 0008 1B04     		lsls	r3, r3, #16
 1410 000a 1B0C     		lsrs	r3, r3, #16
1070:Generated_Source\PSoC4/PWM.c **** }
 1411              		.loc 1 1070 0
 1412 000c 1800     		movs	r0, r3
 1413 000e BD46     		mov	sp, r7
 1414              		@ sp needed
 1415 0010 80BD     		pop	{r7, pc}
 1416              	.L92:
 1417 0012 C046     		.align	2
 1418              	.L91:
 1419 0014 50010540 		.word	1074069840
 1420              		.cfi_endproc
 1421              	.LFE27:
 1422              		.size	PWM_ReadCaptureBuf, .-PWM_ReadCaptureBuf
 1423              		.section	.text.PWM_SetCaptureMode,"ax",%progbits
 1424              		.align	2
 1425              		.global	PWM_SetCaptureMode
 1426              		.code	16
 1427              		.thumb_func
 1428              		.type	PWM_SetCaptureMode, %function
 1429              	PWM_SetCaptureMode:
 1430              	.LFB28:
1071:Generated_Source\PSoC4/PWM.c **** 
1072:Generated_Source\PSoC4/PWM.c **** 
1073:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1074:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCaptureMode
1075:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1076:Generated_Source\PSoC4/PWM.c **** *
1077:Generated_Source\PSoC4/PWM.c **** * Summary:
1078:Generated_Source\PSoC4/PWM.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 45


1079:Generated_Source\PSoC4/PWM.c **** *  This input is not applicable to the Timer/Counter without Capture and
1080:Generated_Source\PSoC4/PWM.c **** *  Quadrature Decoder modes.
1081:Generated_Source\PSoC4/PWM.c **** *
1082:Generated_Source\PSoC4/PWM.c **** * Parameters:
1083:Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1084:Generated_Source\PSoC4/PWM.c **** *   Values:
1085:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1086:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1087:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1088:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1089:Generated_Source\PSoC4/PWM.c **** *
1090:Generated_Source\PSoC4/PWM.c **** * Return:
1091:Generated_Source\PSoC4/PWM.c **** *  None
1092:Generated_Source\PSoC4/PWM.c **** *
1093:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1094:Generated_Source\PSoC4/PWM.c **** void PWM_SetCaptureMode(uint32 triggerMode)
1095:Generated_Source\PSoC4/PWM.c **** {
 1431              		.loc 1 1095 0
 1432              		.cfi_startproc
 1433              		@ args = 0, pretend = 0, frame = 16
 1434              		@ frame_needed = 1, uses_anonymous_args = 0
 1435 0000 90B5     		push	{r4, r7, lr}
 1436              		.cfi_def_cfa_offset 12
 1437              		.cfi_offset 4, -12
 1438              		.cfi_offset 7, -8
 1439              		.cfi_offset 14, -4
 1440 0002 85B0     		sub	sp, sp, #20
 1441              		.cfi_def_cfa_offset 32
 1442 0004 00AF     		add	r7, sp, #0
 1443              		.cfi_def_cfa_register 7
 1444 0006 7860     		str	r0, [r7, #4]
1096:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1097:Generated_Source\PSoC4/PWM.c **** 
1098:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1445              		.loc 1 1098 0
 1446 0008 0F23     		movs	r3, #15
 1447 000a FC18     		adds	r4, r7, r3
 1448 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1449 0010 0300     		movs	r3, r0
 1450 0012 2370     		strb	r3, [r4]
1099:Generated_Source\PSoC4/PWM.c **** 
1100:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_CAPTURE_MASK;
 1451              		.loc 1 1100 0
 1452 0014 0A4B     		ldr	r3, .L94
 1453 0016 0A4A     		ldr	r2, .L94
 1454 0018 1268     		ldr	r2, [r2]
 1455 001a 0321     		movs	r1, #3
 1456 001c 8A43     		bics	r2, r1
 1457 001e 1A60     		str	r2, [r3]
1101:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= triggerMode;
 1458              		.loc 1 1101 0
 1459 0020 074B     		ldr	r3, .L94
 1460 0022 074A     		ldr	r2, .L94
 1461 0024 1168     		ldr	r1, [r2]
 1462 0026 7A68     		ldr	r2, [r7, #4]
 1463 0028 0A43     		orrs	r2, r1
 1464 002a 1A60     		str	r2, [r3]
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 46


1102:Generated_Source\PSoC4/PWM.c **** 
1103:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1465              		.loc 1 1103 0
 1466 002c 0F23     		movs	r3, #15
 1467 002e FB18     		adds	r3, r7, r3
 1468 0030 1B78     		ldrb	r3, [r3]
 1469 0032 1800     		movs	r0, r3
 1470 0034 FFF7FEFF 		bl	CyExitCriticalSection
1104:Generated_Source\PSoC4/PWM.c **** }
 1471              		.loc 1 1104 0
 1472 0038 C046     		nop
 1473 003a BD46     		mov	sp, r7
 1474 003c 05B0     		add	sp, sp, #20
 1475              		@ sp needed
 1476 003e 90BD     		pop	{r4, r7, pc}
 1477              	.L95:
 1478              		.align	2
 1479              	.L94:
 1480 0040 64010540 		.word	1074069860
 1481              		.cfi_endproc
 1482              	.LFE28:
 1483              		.size	PWM_SetCaptureMode, .-PWM_SetCaptureMode
 1484              		.section	.text.PWM_SetReloadMode,"ax",%progbits
 1485              		.align	2
 1486              		.global	PWM_SetReloadMode
 1487              		.code	16
 1488              		.thumb_func
 1489              		.type	PWM_SetReloadMode, %function
 1490              	PWM_SetReloadMode:
 1491              	.LFB29:
1105:Generated_Source\PSoC4/PWM.c **** 
1106:Generated_Source\PSoC4/PWM.c **** 
1107:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1108:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetReloadMode
1109:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1110:Generated_Source\PSoC4/PWM.c **** *
1111:Generated_Source\PSoC4/PWM.c **** * Summary:
1112:Generated_Source\PSoC4/PWM.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1113:Generated_Source\PSoC4/PWM.c **** *  input.
1114:Generated_Source\PSoC4/PWM.c **** *
1115:Generated_Source\PSoC4/PWM.c **** * Parameters:
1116:Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1117:Generated_Source\PSoC4/PWM.c **** *   Values:
1118:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1119:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1120:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1121:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1122:Generated_Source\PSoC4/PWM.c **** *
1123:Generated_Source\PSoC4/PWM.c **** * Return:
1124:Generated_Source\PSoC4/PWM.c **** *  None
1125:Generated_Source\PSoC4/PWM.c **** *
1126:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1127:Generated_Source\PSoC4/PWM.c **** void PWM_SetReloadMode(uint32 triggerMode)
1128:Generated_Source\PSoC4/PWM.c **** {
 1492              		.loc 1 1128 0
 1493              		.cfi_startproc
 1494              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 47


 1495              		@ frame_needed = 1, uses_anonymous_args = 0
 1496 0000 90B5     		push	{r4, r7, lr}
 1497              		.cfi_def_cfa_offset 12
 1498              		.cfi_offset 4, -12
 1499              		.cfi_offset 7, -8
 1500              		.cfi_offset 14, -4
 1501 0002 85B0     		sub	sp, sp, #20
 1502              		.cfi_def_cfa_offset 32
 1503 0004 00AF     		add	r7, sp, #0
 1504              		.cfi_def_cfa_register 7
 1505 0006 7860     		str	r0, [r7, #4]
1129:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1130:Generated_Source\PSoC4/PWM.c **** 
1131:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1506              		.loc 1 1131 0
 1507 0008 0F23     		movs	r3, #15
 1508 000a FC18     		adds	r4, r7, r3
 1509 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1510 0010 0300     		movs	r3, r0
 1511 0012 2370     		strb	r3, [r4]
1132:Generated_Source\PSoC4/PWM.c **** 
1133:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_RELOAD_MASK;
 1512              		.loc 1 1133 0
 1513 0014 0B4B     		ldr	r3, .L97
 1514 0016 0B4A     		ldr	r2, .L97
 1515 0018 1268     		ldr	r2, [r2]
 1516 001a 3021     		movs	r1, #48
 1517 001c 8A43     		bics	r2, r1
 1518 001e 1A60     		str	r2, [r3]
1134:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_RELOAD_SHIFT));
 1519              		.loc 1 1134 0
 1520 0020 084B     		ldr	r3, .L97
 1521 0022 084A     		ldr	r2, .L97
 1522 0024 1168     		ldr	r1, [r2]
 1523 0026 7A68     		ldr	r2, [r7, #4]
 1524 0028 1201     		lsls	r2, r2, #4
 1525 002a 0A43     		orrs	r2, r1
 1526 002c 1A60     		str	r2, [r3]
1135:Generated_Source\PSoC4/PWM.c **** 
1136:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1527              		.loc 1 1136 0
 1528 002e 0F23     		movs	r3, #15
 1529 0030 FB18     		adds	r3, r7, r3
 1530 0032 1B78     		ldrb	r3, [r3]
 1531 0034 1800     		movs	r0, r3
 1532 0036 FFF7FEFF 		bl	CyExitCriticalSection
1137:Generated_Source\PSoC4/PWM.c **** }
 1533              		.loc 1 1137 0
 1534 003a C046     		nop
 1535 003c BD46     		mov	sp, r7
 1536 003e 05B0     		add	sp, sp, #20
 1537              		@ sp needed
 1538 0040 90BD     		pop	{r4, r7, pc}
 1539              	.L98:
 1540 0042 C046     		.align	2
 1541              	.L97:
 1542 0044 64010540 		.word	1074069860
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 48


 1543              		.cfi_endproc
 1544              	.LFE29:
 1545              		.size	PWM_SetReloadMode, .-PWM_SetReloadMode
 1546              		.section	.text.PWM_SetStartMode,"ax",%progbits
 1547              		.align	2
 1548              		.global	PWM_SetStartMode
 1549              		.code	16
 1550              		.thumb_func
 1551              		.type	PWM_SetStartMode, %function
 1552              	PWM_SetStartMode:
 1553              	.LFB30:
1138:Generated_Source\PSoC4/PWM.c **** 
1139:Generated_Source\PSoC4/PWM.c **** 
1140:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1141:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetStartMode
1142:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1143:Generated_Source\PSoC4/PWM.c **** *
1144:Generated_Source\PSoC4/PWM.c **** * Summary:
1145:Generated_Source\PSoC4/PWM.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1146:Generated_Source\PSoC4/PWM.c **** *  phiB input.
1147:Generated_Source\PSoC4/PWM.c **** *
1148:Generated_Source\PSoC4/PWM.c **** * Parameters:
1149:Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1150:Generated_Source\PSoC4/PWM.c **** *   Values:
1151:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1152:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1153:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1154:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1155:Generated_Source\PSoC4/PWM.c **** *
1156:Generated_Source\PSoC4/PWM.c **** * Return:
1157:Generated_Source\PSoC4/PWM.c **** *  None
1158:Generated_Source\PSoC4/PWM.c **** *
1159:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1160:Generated_Source\PSoC4/PWM.c **** void PWM_SetStartMode(uint32 triggerMode)
1161:Generated_Source\PSoC4/PWM.c **** {
 1554              		.loc 1 1161 0
 1555              		.cfi_startproc
 1556              		@ args = 0, pretend = 0, frame = 16
 1557              		@ frame_needed = 1, uses_anonymous_args = 0
 1558 0000 90B5     		push	{r4, r7, lr}
 1559              		.cfi_def_cfa_offset 12
 1560              		.cfi_offset 4, -12
 1561              		.cfi_offset 7, -8
 1562              		.cfi_offset 14, -4
 1563 0002 85B0     		sub	sp, sp, #20
 1564              		.cfi_def_cfa_offset 32
 1565 0004 00AF     		add	r7, sp, #0
 1566              		.cfi_def_cfa_register 7
 1567 0006 7860     		str	r0, [r7, #4]
1162:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1163:Generated_Source\PSoC4/PWM.c **** 
1164:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1568              		.loc 1 1164 0
 1569 0008 0F23     		movs	r3, #15
 1570 000a FC18     		adds	r4, r7, r3
 1571 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1572 0010 0300     		movs	r3, r0
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 49


 1573 0012 2370     		strb	r3, [r4]
1165:Generated_Source\PSoC4/PWM.c **** 
1166:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_START_MASK;
 1574              		.loc 1 1166 0
 1575 0014 0B4B     		ldr	r3, .L100
 1576 0016 0B4A     		ldr	r2, .L100
 1577 0018 1268     		ldr	r2, [r2]
 1578 001a 0B49     		ldr	r1, .L100+4
 1579 001c 0A40     		ands	r2, r1
 1580 001e 1A60     		str	r2, [r3]
1167:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_START_SHIFT));
 1581              		.loc 1 1167 0
 1582 0020 084B     		ldr	r3, .L100
 1583 0022 084A     		ldr	r2, .L100
 1584 0024 1168     		ldr	r1, [r2]
 1585 0026 7A68     		ldr	r2, [r7, #4]
 1586 0028 1202     		lsls	r2, r2, #8
 1587 002a 0A43     		orrs	r2, r1
 1588 002c 1A60     		str	r2, [r3]
1168:Generated_Source\PSoC4/PWM.c **** 
1169:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1589              		.loc 1 1169 0
 1590 002e 0F23     		movs	r3, #15
 1591 0030 FB18     		adds	r3, r7, r3
 1592 0032 1B78     		ldrb	r3, [r3]
 1593 0034 1800     		movs	r0, r3
 1594 0036 FFF7FEFF 		bl	CyExitCriticalSection
1170:Generated_Source\PSoC4/PWM.c **** }
 1595              		.loc 1 1170 0
 1596 003a C046     		nop
 1597 003c BD46     		mov	sp, r7
 1598 003e 05B0     		add	sp, sp, #20
 1599              		@ sp needed
 1600 0040 90BD     		pop	{r4, r7, pc}
 1601              	.L101:
 1602 0042 C046     		.align	2
 1603              	.L100:
 1604 0044 64010540 		.word	1074069860
 1605 0048 FFFCFFFF 		.word	-769
 1606              		.cfi_endproc
 1607              	.LFE30:
 1608              		.size	PWM_SetStartMode, .-PWM_SetStartMode
 1609              		.section	.text.PWM_SetStopMode,"ax",%progbits
 1610              		.align	2
 1611              		.global	PWM_SetStopMode
 1612              		.code	16
 1613              		.thumb_func
 1614              		.type	PWM_SetStopMode, %function
 1615              	PWM_SetStopMode:
 1616              	.LFB31:
1171:Generated_Source\PSoC4/PWM.c **** 
1172:Generated_Source\PSoC4/PWM.c **** 
1173:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1174:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetStopMode
1175:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1176:Generated_Source\PSoC4/PWM.c **** *
1177:Generated_Source\PSoC4/PWM.c **** * Summary:
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 50


1178:Generated_Source\PSoC4/PWM.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1179:Generated_Source\PSoC4/PWM.c **** *
1180:Generated_Source\PSoC4/PWM.c **** * Parameters:
1181:Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1182:Generated_Source\PSoC4/PWM.c **** *   Values:
1183:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1184:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1185:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1186:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1187:Generated_Source\PSoC4/PWM.c **** *
1188:Generated_Source\PSoC4/PWM.c **** * Return:
1189:Generated_Source\PSoC4/PWM.c **** *  None
1190:Generated_Source\PSoC4/PWM.c **** *
1191:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1192:Generated_Source\PSoC4/PWM.c **** void PWM_SetStopMode(uint32 triggerMode)
1193:Generated_Source\PSoC4/PWM.c **** {
 1617              		.loc 1 1193 0
 1618              		.cfi_startproc
 1619              		@ args = 0, pretend = 0, frame = 16
 1620              		@ frame_needed = 1, uses_anonymous_args = 0
 1621 0000 90B5     		push	{r4, r7, lr}
 1622              		.cfi_def_cfa_offset 12
 1623              		.cfi_offset 4, -12
 1624              		.cfi_offset 7, -8
 1625              		.cfi_offset 14, -4
 1626 0002 85B0     		sub	sp, sp, #20
 1627              		.cfi_def_cfa_offset 32
 1628 0004 00AF     		add	r7, sp, #0
 1629              		.cfi_def_cfa_register 7
 1630 0006 7860     		str	r0, [r7, #4]
1194:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1195:Generated_Source\PSoC4/PWM.c **** 
1196:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1631              		.loc 1 1196 0
 1632 0008 0F23     		movs	r3, #15
 1633 000a FC18     		adds	r4, r7, r3
 1634 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1635 0010 0300     		movs	r3, r0
 1636 0012 2370     		strb	r3, [r4]
1197:Generated_Source\PSoC4/PWM.c **** 
1198:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_STOP_MASK;
 1637              		.loc 1 1198 0
 1638 0014 0B4B     		ldr	r3, .L103
 1639 0016 0B4A     		ldr	r2, .L103
 1640 0018 1268     		ldr	r2, [r2]
 1641 001a C021     		movs	r1, #192
 1642 001c 8A43     		bics	r2, r1
 1643 001e 1A60     		str	r2, [r3]
1199:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_STOP_SHIFT));
 1644              		.loc 1 1199 0
 1645 0020 084B     		ldr	r3, .L103
 1646 0022 084A     		ldr	r2, .L103
 1647 0024 1168     		ldr	r1, [r2]
 1648 0026 7A68     		ldr	r2, [r7, #4]
 1649 0028 9201     		lsls	r2, r2, #6
 1650 002a 0A43     		orrs	r2, r1
 1651 002c 1A60     		str	r2, [r3]
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 51


1200:Generated_Source\PSoC4/PWM.c **** 
1201:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1652              		.loc 1 1201 0
 1653 002e 0F23     		movs	r3, #15
 1654 0030 FB18     		adds	r3, r7, r3
 1655 0032 1B78     		ldrb	r3, [r3]
 1656 0034 1800     		movs	r0, r3
 1657 0036 FFF7FEFF 		bl	CyExitCriticalSection
1202:Generated_Source\PSoC4/PWM.c **** }
 1658              		.loc 1 1202 0
 1659 003a C046     		nop
 1660 003c BD46     		mov	sp, r7
 1661 003e 05B0     		add	sp, sp, #20
 1662              		@ sp needed
 1663 0040 90BD     		pop	{r4, r7, pc}
 1664              	.L104:
 1665 0042 C046     		.align	2
 1666              	.L103:
 1667 0044 64010540 		.word	1074069860
 1668              		.cfi_endproc
 1669              	.LFE31:
 1670              		.size	PWM_SetStopMode, .-PWM_SetStopMode
 1671              		.section	.text.PWM_SetCountMode,"ax",%progbits
 1672              		.align	2
 1673              		.global	PWM_SetCountMode
 1674              		.code	16
 1675              		.thumb_func
 1676              		.type	PWM_SetCountMode, %function
 1677              	PWM_SetCountMode:
 1678              	.LFB32:
1203:Generated_Source\PSoC4/PWM.c **** 
1204:Generated_Source\PSoC4/PWM.c **** 
1205:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1206:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCountMode
1207:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1208:Generated_Source\PSoC4/PWM.c **** *
1209:Generated_Source\PSoC4/PWM.c **** * Summary:
1210:Generated_Source\PSoC4/PWM.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1211:Generated_Source\PSoC4/PWM.c **** *  input.
1212:Generated_Source\PSoC4/PWM.c **** *
1213:Generated_Source\PSoC4/PWM.c **** * Parameters:
1214:Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1215:Generated_Source\PSoC4/PWM.c **** *   Values:
1216:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1217:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1218:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1219:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1220:Generated_Source\PSoC4/PWM.c **** *
1221:Generated_Source\PSoC4/PWM.c **** * Return:
1222:Generated_Source\PSoC4/PWM.c **** *  None
1223:Generated_Source\PSoC4/PWM.c **** *
1224:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1225:Generated_Source\PSoC4/PWM.c **** void PWM_SetCountMode(uint32 triggerMode)
1226:Generated_Source\PSoC4/PWM.c **** {
 1679              		.loc 1 1226 0
 1680              		.cfi_startproc
 1681              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 52


 1682              		@ frame_needed = 1, uses_anonymous_args = 0
 1683 0000 90B5     		push	{r4, r7, lr}
 1684              		.cfi_def_cfa_offset 12
 1685              		.cfi_offset 4, -12
 1686              		.cfi_offset 7, -8
 1687              		.cfi_offset 14, -4
 1688 0002 85B0     		sub	sp, sp, #20
 1689              		.cfi_def_cfa_offset 32
 1690 0004 00AF     		add	r7, sp, #0
 1691              		.cfi_def_cfa_register 7
 1692 0006 7860     		str	r0, [r7, #4]
1227:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1228:Generated_Source\PSoC4/PWM.c **** 
1229:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1693              		.loc 1 1229 0
 1694 0008 0F23     		movs	r3, #15
 1695 000a FC18     		adds	r4, r7, r3
 1696 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1697 0010 0300     		movs	r3, r0
 1698 0012 2370     		strb	r3, [r4]
1230:Generated_Source\PSoC4/PWM.c **** 
1231:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_COUNT_MASK;
 1699              		.loc 1 1231 0
 1700 0014 0B4B     		ldr	r3, .L106
 1701 0016 0B4A     		ldr	r2, .L106
 1702 0018 1268     		ldr	r2, [r2]
 1703 001a 0C21     		movs	r1, #12
 1704 001c 8A43     		bics	r2, r1
 1705 001e 1A60     		str	r2, [r3]
1232:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_COUNT_SHIFT));
 1706              		.loc 1 1232 0
 1707 0020 084B     		ldr	r3, .L106
 1708 0022 084A     		ldr	r2, .L106
 1709 0024 1168     		ldr	r1, [r2]
 1710 0026 7A68     		ldr	r2, [r7, #4]
 1711 0028 9200     		lsls	r2, r2, #2
 1712 002a 0A43     		orrs	r2, r1
 1713 002c 1A60     		str	r2, [r3]
1233:Generated_Source\PSoC4/PWM.c **** 
1234:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1714              		.loc 1 1234 0
 1715 002e 0F23     		movs	r3, #15
 1716 0030 FB18     		adds	r3, r7, r3
 1717 0032 1B78     		ldrb	r3, [r3]
 1718 0034 1800     		movs	r0, r3
 1719 0036 FFF7FEFF 		bl	CyExitCriticalSection
1235:Generated_Source\PSoC4/PWM.c **** }
 1720              		.loc 1 1235 0
 1721 003a C046     		nop
 1722 003c BD46     		mov	sp, r7
 1723 003e 05B0     		add	sp, sp, #20
 1724              		@ sp needed
 1725 0040 90BD     		pop	{r4, r7, pc}
 1726              	.L107:
 1727 0042 C046     		.align	2
 1728              	.L106:
 1729 0044 64010540 		.word	1074069860
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 53


 1730              		.cfi_endproc
 1731              	.LFE32:
 1732              		.size	PWM_SetCountMode, .-PWM_SetCountMode
 1733              		.section	.text.PWM_TriggerCommand,"ax",%progbits
 1734              		.align	2
 1735              		.global	PWM_TriggerCommand
 1736              		.code	16
 1737              		.thumb_func
 1738              		.type	PWM_TriggerCommand, %function
 1739              	PWM_TriggerCommand:
 1740              	.LFB33:
1236:Generated_Source\PSoC4/PWM.c **** 
1237:Generated_Source\PSoC4/PWM.c **** 
1238:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1239:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_TriggerCommand
1240:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1241:Generated_Source\PSoC4/PWM.c **** *
1242:Generated_Source\PSoC4/PWM.c **** * Summary:
1243:Generated_Source\PSoC4/PWM.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1244:Generated_Source\PSoC4/PWM.c **** *  The mask can be used to apply this command simultaneously to more than one
1245:Generated_Source\PSoC4/PWM.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1246:Generated_Source\PSoC4/PWM.c **** *
1247:Generated_Source\PSoC4/PWM.c **** * Parameters:
1248:Generated_Source\PSoC4/PWM.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1249:Generated_Source\PSoC4/PWM.c **** *        command should apply to.  This function from one instance can be used
1250:Generated_Source\PSoC4/PWM.c **** *        to apply the command to any of the instances in the design.
1251:Generated_Source\PSoC4/PWM.c **** *        The mask value for a specific instance is available with the MASK
1252:Generated_Source\PSoC4/PWM.c **** *        define.
1253:Generated_Source\PSoC4/PWM.c **** *  command: Enumerated command values. Capture command only applicable for
1254:Generated_Source\PSoC4/PWM.c **** *           Timer/Counter with Capture and PWM modes.
1255:Generated_Source\PSoC4/PWM.c **** *   Values:
1256:Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_CAPTURE    - Trigger Capture/Switch command
1257:Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_RELOAD     - Trigger Reload/Index command
1258:Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_STOP       - Trigger Stop/Kill command
1259:Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_START      - Trigger Start/phiB command
1260:Generated_Source\PSoC4/PWM.c **** *
1261:Generated_Source\PSoC4/PWM.c **** * Return:
1262:Generated_Source\PSoC4/PWM.c **** *  None
1263:Generated_Source\PSoC4/PWM.c **** *
1264:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1265:Generated_Source\PSoC4/PWM.c **** void PWM_TriggerCommand(uint32 mask, uint32 command)
1266:Generated_Source\PSoC4/PWM.c **** {
 1741              		.loc 1 1266 0
 1742              		.cfi_startproc
 1743              		@ args = 0, pretend = 0, frame = 16
 1744              		@ frame_needed = 1, uses_anonymous_args = 0
 1745 0000 90B5     		push	{r4, r7, lr}
 1746              		.cfi_def_cfa_offset 12
 1747              		.cfi_offset 4, -12
 1748              		.cfi_offset 7, -8
 1749              		.cfi_offset 14, -4
 1750 0002 85B0     		sub	sp, sp, #20
 1751              		.cfi_def_cfa_offset 32
 1752 0004 00AF     		add	r7, sp, #0
 1753              		.cfi_def_cfa_register 7
 1754 0006 7860     		str	r0, [r7, #4]
 1755 0008 3960     		str	r1, [r7]
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 54


1267:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1268:Generated_Source\PSoC4/PWM.c **** 
1269:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1756              		.loc 1 1269 0
 1757 000a 0F23     		movs	r3, #15
 1758 000c FC18     		adds	r4, r7, r3
 1759 000e FFF7FEFF 		bl	CyEnterCriticalSection
 1760 0012 0300     		movs	r3, r0
 1761 0014 2370     		strb	r3, [r4]
1270:Generated_Source\PSoC4/PWM.c **** 
1271:Generated_Source\PSoC4/PWM.c ****     PWM_COMMAND_REG = ((uint32)(mask << command));
 1762              		.loc 1 1271 0
 1763 0016 084B     		ldr	r3, .L109
 1764 0018 7968     		ldr	r1, [r7, #4]
 1765 001a 3A68     		ldr	r2, [r7]
 1766 001c 9140     		lsls	r1, r1, r2
 1767 001e 0A00     		movs	r2, r1
 1768 0020 1A60     		str	r2, [r3]
1272:Generated_Source\PSoC4/PWM.c **** 
1273:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1769              		.loc 1 1273 0
 1770 0022 0F23     		movs	r3, #15
 1771 0024 FB18     		adds	r3, r7, r3
 1772 0026 1B78     		ldrb	r3, [r3]
 1773 0028 1800     		movs	r0, r3
 1774 002a FFF7FEFF 		bl	CyExitCriticalSection
1274:Generated_Source\PSoC4/PWM.c **** }
 1775              		.loc 1 1274 0
 1776 002e C046     		nop
 1777 0030 BD46     		mov	sp, r7
 1778 0032 05B0     		add	sp, sp, #20
 1779              		@ sp needed
 1780 0034 90BD     		pop	{r4, r7, pc}
 1781              	.L110:
 1782 0036 C046     		.align	2
 1783              	.L109:
 1784 0038 08000540 		.word	1074069512
 1785              		.cfi_endproc
 1786              	.LFE33:
 1787              		.size	PWM_TriggerCommand, .-PWM_TriggerCommand
 1788              		.section	.text.PWM_ReadStatus,"ax",%progbits
 1789              		.align	2
 1790              		.global	PWM_ReadStatus
 1791              		.code	16
 1792              		.thumb_func
 1793              		.type	PWM_ReadStatus, %function
 1794              	PWM_ReadStatus:
 1795              	.LFB34:
1275:Generated_Source\PSoC4/PWM.c **** 
1276:Generated_Source\PSoC4/PWM.c **** 
1277:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1278:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadStatus
1279:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1280:Generated_Source\PSoC4/PWM.c **** *
1281:Generated_Source\PSoC4/PWM.c **** * Summary:
1282:Generated_Source\PSoC4/PWM.c **** *  Reads the status of the PWM.
1283:Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 55


1284:Generated_Source\PSoC4/PWM.c **** * Parameters:
1285:Generated_Source\PSoC4/PWM.c **** *  None
1286:Generated_Source\PSoC4/PWM.c **** *
1287:Generated_Source\PSoC4/PWM.c **** * Return:
1288:Generated_Source\PSoC4/PWM.c **** *  Status
1289:Generated_Source\PSoC4/PWM.c **** *   Values:
1290:Generated_Source\PSoC4/PWM.c **** *     - PWM_STATUS_DOWN    - Set if counting down
1291:Generated_Source\PSoC4/PWM.c **** *     - PWM_STATUS_RUNNING - Set if counter is running
1292:Generated_Source\PSoC4/PWM.c **** *
1293:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1294:Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadStatus(void)
1295:Generated_Source\PSoC4/PWM.c **** {
 1796              		.loc 1 1295 0
 1797              		.cfi_startproc
 1798              		@ args = 0, pretend = 0, frame = 0
 1799              		@ frame_needed = 1, uses_anonymous_args = 0
 1800 0000 80B5     		push	{r7, lr}
 1801              		.cfi_def_cfa_offset 8
 1802              		.cfi_offset 7, -8
 1803              		.cfi_offset 14, -4
 1804 0002 00AF     		add	r7, sp, #0
 1805              		.cfi_def_cfa_register 7
1296:Generated_Source\PSoC4/PWM.c ****     return ((PWM_STATUS_REG >> PWM_RUNNING_STATUS_SHIFT) |
 1806              		.loc 1 1296 0
 1807 0004 054B     		ldr	r3, .L113
 1808 0006 1B68     		ldr	r3, [r3]
 1809 0008 9A0F     		lsrs	r2, r3, #30
1297:Generated_Source\PSoC4/PWM.c ****             (PWM_STATUS_REG & PWM_STATUS_DOWN));
 1810              		.loc 1 1297 0
 1811 000a 044B     		ldr	r3, .L113
 1812 000c 1B68     		ldr	r3, [r3]
 1813 000e 0121     		movs	r1, #1
 1814 0010 0B40     		ands	r3, r1
1296:Generated_Source\PSoC4/PWM.c ****     return ((PWM_STATUS_REG >> PWM_RUNNING_STATUS_SHIFT) |
 1815              		.loc 1 1296 0
 1816 0012 1343     		orrs	r3, r2
1298:Generated_Source\PSoC4/PWM.c **** }
 1817              		.loc 1 1298 0
 1818 0014 1800     		movs	r0, r3
 1819 0016 BD46     		mov	sp, r7
 1820              		@ sp needed
 1821 0018 80BD     		pop	{r7, pc}
 1822              	.L114:
 1823 001a C046     		.align	2
 1824              	.L113:
 1825 001c 44010540 		.word	1074069828
 1826              		.cfi_endproc
 1827              	.LFE34:
 1828              		.size	PWM_ReadStatus, .-PWM_ReadStatus
 1829              		.section	.text.PWM_SetInterruptMode,"ax",%progbits
 1830              		.align	2
 1831              		.global	PWM_SetInterruptMode
 1832              		.code	16
 1833              		.thumb_func
 1834              		.type	PWM_SetInterruptMode, %function
 1835              	PWM_SetInterruptMode:
 1836              	.LFB35:
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 56


1299:Generated_Source\PSoC4/PWM.c **** 
1300:Generated_Source\PSoC4/PWM.c **** 
1301:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1302:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetInterruptMode
1303:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1304:Generated_Source\PSoC4/PWM.c **** *
1305:Generated_Source\PSoC4/PWM.c **** * Summary:
1306:Generated_Source\PSoC4/PWM.c **** *  Sets the interrupt mask to control which interrupt
1307:Generated_Source\PSoC4/PWM.c **** *  requests generate the interrupt signal.
1308:Generated_Source\PSoC4/PWM.c **** *
1309:Generated_Source\PSoC4/PWM.c **** * Parameters:
1310:Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of bits to be enabled
1311:Generated_Source\PSoC4/PWM.c **** *   Values:
1312:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1313:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1314:Generated_Source\PSoC4/PWM.c **** *
1315:Generated_Source\PSoC4/PWM.c **** * Return:
1316:Generated_Source\PSoC4/PWM.c **** *  None
1317:Generated_Source\PSoC4/PWM.c **** *
1318:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1319:Generated_Source\PSoC4/PWM.c **** void PWM_SetInterruptMode(uint32 interruptMask)
1320:Generated_Source\PSoC4/PWM.c **** {
 1837              		.loc 1 1320 0
 1838              		.cfi_startproc
 1839              		@ args = 0, pretend = 0, frame = 8
 1840              		@ frame_needed = 1, uses_anonymous_args = 0
 1841 0000 80B5     		push	{r7, lr}
 1842              		.cfi_def_cfa_offset 8
 1843              		.cfi_offset 7, -8
 1844              		.cfi_offset 14, -4
 1845 0002 82B0     		sub	sp, sp, #8
 1846              		.cfi_def_cfa_offset 16
 1847 0004 00AF     		add	r7, sp, #0
 1848              		.cfi_def_cfa_register 7
 1849 0006 7860     		str	r0, [r7, #4]
1321:Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_MASK_REG =  interruptMask;
 1850              		.loc 1 1321 0
 1851 0008 034B     		ldr	r3, .L116
 1852 000a 7A68     		ldr	r2, [r7, #4]
 1853 000c 1A60     		str	r2, [r3]
1322:Generated_Source\PSoC4/PWM.c **** }
 1854              		.loc 1 1322 0
 1855 000e C046     		nop
 1856 0010 BD46     		mov	sp, r7
 1857 0012 02B0     		add	sp, sp, #8
 1858              		@ sp needed
 1859 0014 80BD     		pop	{r7, pc}
 1860              	.L117:
 1861 0016 C046     		.align	2
 1862              	.L116:
 1863 0018 78010540 		.word	1074069880
 1864              		.cfi_endproc
 1865              	.LFE35:
 1866              		.size	PWM_SetInterruptMode, .-PWM_SetInterruptMode
 1867              		.section	.text.PWM_GetInterruptSourceMasked,"ax",%progbits
 1868              		.align	2
 1869              		.global	PWM_GetInterruptSourceMasked
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 57


 1870              		.code	16
 1871              		.thumb_func
 1872              		.type	PWM_GetInterruptSourceMasked, %function
 1873              	PWM_GetInterruptSourceMasked:
 1874              	.LFB36:
1323:Generated_Source\PSoC4/PWM.c **** 
1324:Generated_Source\PSoC4/PWM.c **** 
1325:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1326:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_GetInterruptSourceMasked
1327:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1328:Generated_Source\PSoC4/PWM.c **** *
1329:Generated_Source\PSoC4/PWM.c **** * Summary:
1330:Generated_Source\PSoC4/PWM.c **** *  Gets the interrupt requests masked by the interrupt mask.
1331:Generated_Source\PSoC4/PWM.c **** *
1332:Generated_Source\PSoC4/PWM.c **** * Parameters:
1333:Generated_Source\PSoC4/PWM.c **** *   None
1334:Generated_Source\PSoC4/PWM.c **** *
1335:Generated_Source\PSoC4/PWM.c **** * Return:
1336:Generated_Source\PSoC4/PWM.c **** *  Masked interrupt source
1337:Generated_Source\PSoC4/PWM.c **** *   Values:
1338:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1339:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1340:Generated_Source\PSoC4/PWM.c **** *
1341:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1342:Generated_Source\PSoC4/PWM.c **** uint32 PWM_GetInterruptSourceMasked(void)
1343:Generated_Source\PSoC4/PWM.c **** {
 1875              		.loc 1 1343 0
 1876              		.cfi_startproc
 1877              		@ args = 0, pretend = 0, frame = 0
 1878              		@ frame_needed = 1, uses_anonymous_args = 0
 1879 0000 80B5     		push	{r7, lr}
 1880              		.cfi_def_cfa_offset 8
 1881              		.cfi_offset 7, -8
 1882              		.cfi_offset 14, -4
 1883 0002 00AF     		add	r7, sp, #0
 1884              		.cfi_def_cfa_register 7
1344:Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_MASKED_REG);
 1885              		.loc 1 1344 0
 1886 0004 024B     		ldr	r3, .L120
 1887 0006 1B68     		ldr	r3, [r3]
1345:Generated_Source\PSoC4/PWM.c **** }
 1888              		.loc 1 1345 0
 1889 0008 1800     		movs	r0, r3
 1890 000a BD46     		mov	sp, r7
 1891              		@ sp needed
 1892 000c 80BD     		pop	{r7, pc}
 1893              	.L121:
 1894 000e C046     		.align	2
 1895              	.L120:
 1896 0010 7C010540 		.word	1074069884
 1897              		.cfi_endproc
 1898              	.LFE36:
 1899              		.size	PWM_GetInterruptSourceMasked, .-PWM_GetInterruptSourceMasked
 1900              		.section	.text.PWM_GetInterruptSource,"ax",%progbits
 1901              		.align	2
 1902              		.global	PWM_GetInterruptSource
 1903              		.code	16
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 58


 1904              		.thumb_func
 1905              		.type	PWM_GetInterruptSource, %function
 1906              	PWM_GetInterruptSource:
 1907              	.LFB37:
1346:Generated_Source\PSoC4/PWM.c **** 
1347:Generated_Source\PSoC4/PWM.c **** 
1348:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1349:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_GetInterruptSource
1350:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1351:Generated_Source\PSoC4/PWM.c **** *
1352:Generated_Source\PSoC4/PWM.c **** * Summary:
1353:Generated_Source\PSoC4/PWM.c **** *  Gets the interrupt requests (without masking).
1354:Generated_Source\PSoC4/PWM.c **** *
1355:Generated_Source\PSoC4/PWM.c **** * Parameters:
1356:Generated_Source\PSoC4/PWM.c **** *  None
1357:Generated_Source\PSoC4/PWM.c **** *
1358:Generated_Source\PSoC4/PWM.c **** * Return:
1359:Generated_Source\PSoC4/PWM.c **** *  Interrupt request value
1360:Generated_Source\PSoC4/PWM.c **** *   Values:
1361:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1362:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1363:Generated_Source\PSoC4/PWM.c **** *
1364:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1365:Generated_Source\PSoC4/PWM.c **** uint32 PWM_GetInterruptSource(void)
1366:Generated_Source\PSoC4/PWM.c **** {
 1908              		.loc 1 1366 0
 1909              		.cfi_startproc
 1910              		@ args = 0, pretend = 0, frame = 0
 1911              		@ frame_needed = 1, uses_anonymous_args = 0
 1912 0000 80B5     		push	{r7, lr}
 1913              		.cfi_def_cfa_offset 8
 1914              		.cfi_offset 7, -8
 1915              		.cfi_offset 14, -4
 1916 0002 00AF     		add	r7, sp, #0
 1917              		.cfi_def_cfa_register 7
1367:Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_REQ_REG);
 1918              		.loc 1 1367 0
 1919 0004 024B     		ldr	r3, .L124
 1920 0006 1B68     		ldr	r3, [r3]
1368:Generated_Source\PSoC4/PWM.c **** }
 1921              		.loc 1 1368 0
 1922 0008 1800     		movs	r0, r3
 1923 000a BD46     		mov	sp, r7
 1924              		@ sp needed
 1925 000c 80BD     		pop	{r7, pc}
 1926              	.L125:
 1927 000e C046     		.align	2
 1928              	.L124:
 1929 0010 70010540 		.word	1074069872
 1930              		.cfi_endproc
 1931              	.LFE37:
 1932              		.size	PWM_GetInterruptSource, .-PWM_GetInterruptSource
 1933              		.section	.text.PWM_ClearInterrupt,"ax",%progbits
 1934              		.align	2
 1935              		.global	PWM_ClearInterrupt
 1936              		.code	16
 1937              		.thumb_func
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 59


 1938              		.type	PWM_ClearInterrupt, %function
 1939              	PWM_ClearInterrupt:
 1940              	.LFB38:
1369:Generated_Source\PSoC4/PWM.c **** 
1370:Generated_Source\PSoC4/PWM.c **** 
1371:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1372:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ClearInterrupt
1373:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1374:Generated_Source\PSoC4/PWM.c **** *
1375:Generated_Source\PSoC4/PWM.c **** * Summary:
1376:Generated_Source\PSoC4/PWM.c **** *  Clears the interrupt request.
1377:Generated_Source\PSoC4/PWM.c **** *
1378:Generated_Source\PSoC4/PWM.c **** * Parameters:
1379:Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of interrupts to clear
1380:Generated_Source\PSoC4/PWM.c **** *   Values:
1381:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1382:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1383:Generated_Source\PSoC4/PWM.c **** *
1384:Generated_Source\PSoC4/PWM.c **** * Return:
1385:Generated_Source\PSoC4/PWM.c **** *  None
1386:Generated_Source\PSoC4/PWM.c **** *
1387:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1388:Generated_Source\PSoC4/PWM.c **** void PWM_ClearInterrupt(uint32 interruptMask)
1389:Generated_Source\PSoC4/PWM.c **** {
 1941              		.loc 1 1389 0
 1942              		.cfi_startproc
 1943              		@ args = 0, pretend = 0, frame = 8
 1944              		@ frame_needed = 1, uses_anonymous_args = 0
 1945 0000 80B5     		push	{r7, lr}
 1946              		.cfi_def_cfa_offset 8
 1947              		.cfi_offset 7, -8
 1948              		.cfi_offset 14, -4
 1949 0002 82B0     		sub	sp, sp, #8
 1950              		.cfi_def_cfa_offset 16
 1951 0004 00AF     		add	r7, sp, #0
 1952              		.cfi_def_cfa_register 7
 1953 0006 7860     		str	r0, [r7, #4]
1390:Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_REQ_REG = interruptMask;
 1954              		.loc 1 1390 0
 1955 0008 034B     		ldr	r3, .L127
 1956 000a 7A68     		ldr	r2, [r7, #4]
 1957 000c 1A60     		str	r2, [r3]
1391:Generated_Source\PSoC4/PWM.c **** }
 1958              		.loc 1 1391 0
 1959 000e C046     		nop
 1960 0010 BD46     		mov	sp, r7
 1961 0012 02B0     		add	sp, sp, #8
 1962              		@ sp needed
 1963 0014 80BD     		pop	{r7, pc}
 1964              	.L128:
 1965 0016 C046     		.align	2
 1966              	.L127:
 1967 0018 70010540 		.word	1074069872
 1968              		.cfi_endproc
 1969              	.LFE38:
 1970              		.size	PWM_ClearInterrupt, .-PWM_ClearInterrupt
 1971              		.section	.text.PWM_SetInterrupt,"ax",%progbits
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 60


 1972              		.align	2
 1973              		.global	PWM_SetInterrupt
 1974              		.code	16
 1975              		.thumb_func
 1976              		.type	PWM_SetInterrupt, %function
 1977              	PWM_SetInterrupt:
 1978              	.LFB39:
1392:Generated_Source\PSoC4/PWM.c **** 
1393:Generated_Source\PSoC4/PWM.c **** 
1394:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1395:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetInterrupt
1396:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1397:Generated_Source\PSoC4/PWM.c **** *
1398:Generated_Source\PSoC4/PWM.c **** * Summary:
1399:Generated_Source\PSoC4/PWM.c **** *  Sets a software interrupt request.
1400:Generated_Source\PSoC4/PWM.c **** *
1401:Generated_Source\PSoC4/PWM.c **** * Parameters:
1402:Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of interrupts to set
1403:Generated_Source\PSoC4/PWM.c **** *   Values:
1404:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1405:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1406:Generated_Source\PSoC4/PWM.c **** *
1407:Generated_Source\PSoC4/PWM.c **** * Return:
1408:Generated_Source\PSoC4/PWM.c **** *  None
1409:Generated_Source\PSoC4/PWM.c **** *
1410:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1411:Generated_Source\PSoC4/PWM.c **** void PWM_SetInterrupt(uint32 interruptMask)
1412:Generated_Source\PSoC4/PWM.c **** {
 1979              		.loc 1 1412 0
 1980              		.cfi_startproc
 1981              		@ args = 0, pretend = 0, frame = 8
 1982              		@ frame_needed = 1, uses_anonymous_args = 0
 1983 0000 80B5     		push	{r7, lr}
 1984              		.cfi_def_cfa_offset 8
 1985              		.cfi_offset 7, -8
 1986              		.cfi_offset 14, -4
 1987 0002 82B0     		sub	sp, sp, #8
 1988              		.cfi_def_cfa_offset 16
 1989 0004 00AF     		add	r7, sp, #0
 1990              		.cfi_def_cfa_register 7
 1991 0006 7860     		str	r0, [r7, #4]
1413:Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_SET_REG = interruptMask;
 1992              		.loc 1 1413 0
 1993 0008 034B     		ldr	r3, .L130
 1994 000a 7A68     		ldr	r2, [r7, #4]
 1995 000c 1A60     		str	r2, [r3]
1414:Generated_Source\PSoC4/PWM.c **** }
 1996              		.loc 1 1414 0
 1997 000e C046     		nop
 1998 0010 BD46     		mov	sp, r7
 1999 0012 02B0     		add	sp, sp, #8
 2000              		@ sp needed
 2001 0014 80BD     		pop	{r7, pc}
 2002              	.L131:
 2003 0016 C046     		.align	2
 2004              	.L130:
 2005 0018 74010540 		.word	1074069876
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 61


 2006              		.cfi_endproc
 2007              	.LFE39:
 2008              		.size	PWM_SetInterrupt, .-PWM_SetInterrupt
 2009              		.text
 2010              	.Letext0:
 2011              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2012              		.section	.debug_info,"",%progbits
 2013              	.Ldebug_info0:
 2014 0000 F7060000 		.4byte	0x6f7
 2015 0004 0400     		.2byte	0x4
 2016 0006 00000000 		.4byte	.Ldebug_abbrev0
 2017 000a 04       		.byte	0x4
 2018 000b 01       		.uleb128 0x1
 2019 000c 08020000 		.4byte	.LASF77
 2020 0010 0C       		.byte	0xc
 2021 0011 6D000000 		.4byte	.LASF78
 2022 0015 5B030000 		.4byte	.LASF79
 2023 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2024 001d 00000000 		.4byte	0
 2025 0021 00000000 		.4byte	.Ldebug_line0
 2026 0025 02       		.uleb128 0x2
 2027 0026 01       		.byte	0x1
 2028 0027 06       		.byte	0x6
 2029 0028 A8000000 		.4byte	.LASF0
 2030 002c 02       		.uleb128 0x2
 2031 002d 01       		.byte	0x1
 2032 002e 08       		.byte	0x8
 2033 002f 56040000 		.4byte	.LASF1
 2034 0033 02       		.uleb128 0x2
 2035 0034 02       		.byte	0x2
 2036 0035 05       		.byte	0x5
 2037 0036 C7030000 		.4byte	.LASF2
 2038 003a 02       		.uleb128 0x2
 2039 003b 02       		.byte	0x2
 2040 003c 07       		.byte	0x7
 2041 003d DA010000 		.4byte	.LASF3
 2042 0041 02       		.uleb128 0x2
 2043 0042 04       		.byte	0x4
 2044 0043 05       		.byte	0x5
 2045 0044 F0000000 		.4byte	.LASF4
 2046 0048 02       		.uleb128 0x2
 2047 0049 04       		.byte	0x4
 2048 004a 07       		.byte	0x7
 2049 004b BF010000 		.4byte	.LASF5
 2050 004f 02       		.uleb128 0x2
 2051 0050 08       		.byte	0x8
 2052 0051 05       		.byte	0x5
 2053 0052 9A000000 		.4byte	.LASF6
 2054 0056 02       		.uleb128 0x2
 2055 0057 08       		.byte	0x8
 2056 0058 07       		.byte	0x7
 2057 0059 2B000000 		.4byte	.LASF7
 2058 005d 03       		.uleb128 0x3
 2059 005e 04       		.byte	0x4
 2060 005f 05       		.byte	0x5
 2061 0060 696E7400 		.ascii	"int\000"
 2062 0064 02       		.uleb128 0x2
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 62


 2063 0065 04       		.byte	0x4
 2064 0066 07       		.byte	0x7
 2065 0067 97010000 		.4byte	.LASF8
 2066 006b 04       		.uleb128 0x4
 2067 006c F9000000 		.4byte	.LASF9
 2068 0070 02       		.byte	0x2
 2069 0071 FC01     		.2byte	0x1fc
 2070 0073 2C000000 		.4byte	0x2c
 2071 0077 04       		.uleb128 0x4
 2072 0078 46010000 		.4byte	.LASF10
 2073 007c 02       		.byte	0x2
 2074 007d FE01     		.2byte	0x1fe
 2075 007f 48000000 		.4byte	0x48
 2076 0083 02       		.uleb128 0x2
 2077 0084 04       		.byte	0x4
 2078 0085 04       		.byte	0x4
 2079 0086 29030000 		.4byte	.LASF11
 2080 008a 02       		.uleb128 0x2
 2081 008b 08       		.byte	0x8
 2082 008c 04       		.byte	0x4
 2083 008d FF000000 		.4byte	.LASF12
 2084 0091 02       		.uleb128 0x2
 2085 0092 01       		.byte	0x1
 2086 0093 08       		.byte	0x8
 2087 0094 1D040000 		.4byte	.LASF13
 2088 0098 04       		.uleb128 0x4
 2089 0099 CA020000 		.4byte	.LASF14
 2090 009d 02       		.byte	0x2
 2091 009e A802     		.2byte	0x2a8
 2092 00a0 A4000000 		.4byte	0xa4
 2093 00a4 05       		.uleb128 0x5
 2094 00a5 77000000 		.4byte	0x77
 2095 00a9 02       		.uleb128 0x2
 2096 00aa 08       		.byte	0x8
 2097 00ab 04       		.byte	0x4
 2098 00ac F4020000 		.4byte	.LASF15
 2099 00b0 02       		.uleb128 0x2
 2100 00b1 04       		.byte	0x4
 2101 00b2 07       		.byte	0x7
 2102 00b3 EB020000 		.4byte	.LASF16
 2103 00b7 06       		.uleb128 0x6
 2104 00b8 9E030000 		.4byte	.LASF17
 2105 00bc 01       		.byte	0x1
 2106 00bd 26       		.byte	0x26
 2107 00be 00000000 		.4byte	.LFB0
 2108 00c2 58000000 		.4byte	.LFE0-.LFB0
 2109 00c6 01       		.uleb128 0x1
 2110 00c7 9C       		.byte	0x9c
 2111 00c8 07       		.uleb128 0x7
 2112 00c9 06000000 		.4byte	.LASF19
 2113 00cd 01       		.byte	0x1
 2114 00ce B1       		.byte	0xb1
 2115 00cf 00000000 		.4byte	.LFB1
 2116 00d3 34000000 		.4byte	.LFE1-.LFB1
 2117 00d7 01       		.uleb128 0x1
 2118 00d8 9C       		.byte	0x9c
 2119 00d9 EC000000 		.4byte	0xec
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 63


 2120 00dd 08       		.uleb128 0x8
 2121 00de 8C040000 		.4byte	.LASF21
 2122 00e2 01       		.byte	0x1
 2123 00e3 B3       		.byte	0xb3
 2124 00e4 6B000000 		.4byte	0x6b
 2125 00e8 02       		.uleb128 0x2
 2126 00e9 91       		.byte	0x91
 2127 00ea 6F       		.sleb128 -17
 2128 00eb 00       		.byte	0
 2129 00ec 06       		.uleb128 0x6
 2130 00ed FE010000 		.4byte	.LASF18
 2131 00f1 01       		.byte	0x1
 2132 00f2 E6       		.byte	0xe6
 2133 00f3 00000000 		.4byte	.LFB2
 2134 00f7 24000000 		.4byte	.LFE2-.LFB2
 2135 00fb 01       		.uleb128 0x1
 2136 00fc 9C       		.byte	0x9c
 2137 00fd 09       		.uleb128 0x9
 2138 00fe 2C010000 		.4byte	.LASF20
 2139 0102 01       		.byte	0x1
 2140 0103 0001     		.2byte	0x100
 2141 0105 00000000 		.4byte	.LFB3
 2142 0109 34000000 		.4byte	.LFE3-.LFB3
 2143 010d 01       		.uleb128 0x1
 2144 010e 9C       		.byte	0x9c
 2145 010f 23010000 		.4byte	0x123
 2146 0113 0A       		.uleb128 0xa
 2147 0114 8C040000 		.4byte	.LASF21
 2148 0118 01       		.byte	0x1
 2149 0119 0201     		.2byte	0x102
 2150 011b 6B000000 		.4byte	0x6b
 2151 011f 02       		.uleb128 0x2
 2152 0120 91       		.byte	0x91
 2153 0121 6F       		.sleb128 -17
 2154 0122 00       		.byte	0
 2155 0123 09       		.uleb128 0x9
 2156 0124 BC040000 		.4byte	.LASF22
 2157 0128 01       		.byte	0x1
 2158 0129 2501     		.2byte	0x125
 2159 012b 00000000 		.4byte	.LFB4
 2160 012f 48000000 		.4byte	.LFE4-.LFB4
 2161 0133 01       		.uleb128 0x1
 2162 0134 9C       		.byte	0x9c
 2163 0135 58010000 		.4byte	0x158
 2164 0139 0B       		.uleb128 0xb
 2165 013a 22040000 		.4byte	.LASF24
 2166 013e 01       		.byte	0x1
 2167 013f 2501     		.2byte	0x125
 2168 0141 77000000 		.4byte	0x77
 2169 0145 02       		.uleb128 0x2
 2170 0146 91       		.byte	0x91
 2171 0147 64       		.sleb128 -28
 2172 0148 0A       		.uleb128 0xa
 2173 0149 8C040000 		.4byte	.LASF21
 2174 014d 01       		.byte	0x1
 2175 014e 2701     		.2byte	0x127
 2176 0150 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 64


 2177 0154 02       		.uleb128 0x2
 2178 0155 91       		.byte	0x91
 2179 0156 6F       		.sleb128 -17
 2180 0157 00       		.byte	0
 2181 0158 09       		.uleb128 0x9
 2182 0159 0F040000 		.4byte	.LASF23
 2183 015d 01       		.byte	0x1
 2184 015e 4601     		.2byte	0x146
 2185 0160 00000000 		.4byte	.LFB5
 2186 0164 48000000 		.4byte	.LFE5-.LFB5
 2187 0168 01       		.uleb128 0x1
 2188 0169 9C       		.byte	0x9c
 2189 016a 8D010000 		.4byte	0x18d
 2190 016e 0B       		.uleb128 0xb
 2191 016f 55000000 		.4byte	.LASF25
 2192 0173 01       		.byte	0x1
 2193 0174 4601     		.2byte	0x146
 2194 0176 77000000 		.4byte	0x77
 2195 017a 02       		.uleb128 0x2
 2196 017b 91       		.byte	0x91
 2197 017c 64       		.sleb128 -28
 2198 017d 0A       		.uleb128 0xa
 2199 017e 8C040000 		.4byte	.LASF21
 2200 0182 01       		.byte	0x1
 2201 0183 4801     		.2byte	0x148
 2202 0185 6B000000 		.4byte	0x6b
 2203 0189 02       		.uleb128 0x2
 2204 018a 91       		.byte	0x91
 2205 018b 6F       		.sleb128 -17
 2206 018c 00       		.byte	0
 2207 018d 09       		.uleb128 0x9
 2208 018e ED010000 		.4byte	.LASF26
 2209 0192 01       		.byte	0x1
 2210 0193 6B01     		.2byte	0x16b
 2211 0195 00000000 		.4byte	.LFB6
 2212 0199 48000000 		.4byte	.LFE6-.LFB6
 2213 019d 01       		.uleb128 0x1
 2214 019e 9C       		.byte	0x9c
 2215 019f C2010000 		.4byte	0x1c2
 2216 01a3 0B       		.uleb128 0xb
 2217 01a4 2F030000 		.4byte	.LASF27
 2218 01a8 01       		.byte	0x1
 2219 01a9 6B01     		.2byte	0x16b
 2220 01ab 77000000 		.4byte	0x77
 2221 01af 02       		.uleb128 0x2
 2222 01b0 91       		.byte	0x91
 2223 01b1 64       		.sleb128 -28
 2224 01b2 0A       		.uleb128 0xa
 2225 01b3 8C040000 		.4byte	.LASF21
 2226 01b7 01       		.byte	0x1
 2227 01b8 6D01     		.2byte	0x16d
 2228 01ba 6B000000 		.4byte	0x6b
 2229 01be 02       		.uleb128 0x2
 2230 01bf 91       		.byte	0x91
 2231 01c0 6F       		.sleb128 -17
 2232 01c1 00       		.byte	0
 2233 01c2 09       		.uleb128 0x9
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 65


 2234 01c3 08030000 		.4byte	.LASF28
 2235 01c7 01       		.byte	0x1
 2236 01c8 8B01     		.2byte	0x18b
 2237 01ca 00000000 		.4byte	.LFB7
 2238 01ce 50000000 		.4byte	.LFE7-.LFB7
 2239 01d2 01       		.uleb128 0x1
 2240 01d3 9C       		.byte	0x9c
 2241 01d4 F7010000 		.4byte	0x1f7
 2242 01d8 0B       		.uleb128 0xb
 2243 01d9 AE040000 		.4byte	.LASF29
 2244 01dd 01       		.byte	0x1
 2245 01de 8B01     		.2byte	0x18b
 2246 01e0 77000000 		.4byte	0x77
 2247 01e4 02       		.uleb128 0x2
 2248 01e5 91       		.byte	0x91
 2249 01e6 64       		.sleb128 -28
 2250 01e7 0A       		.uleb128 0xa
 2251 01e8 8C040000 		.4byte	.LASF21
 2252 01ec 01       		.byte	0x1
 2253 01ed 8D01     		.2byte	0x18d
 2254 01ef 6B000000 		.4byte	0x6b
 2255 01f3 02       		.uleb128 0x2
 2256 01f4 91       		.byte	0x91
 2257 01f5 6F       		.sleb128 -17
 2258 01f6 00       		.byte	0
 2259 01f7 0C       		.uleb128 0xc
 2260 01f8 B8030000 		.4byte	.LASF30
 2261 01fc 01       		.byte	0x1
 2262 01fd C101     		.2byte	0x1c1
 2263 01ff 00000000 		.4byte	.LFB8
 2264 0203 20000000 		.4byte	.LFE8-.LFB8
 2265 0207 01       		.uleb128 0x1
 2266 0208 9C       		.byte	0x9c
 2267 0209 1D020000 		.4byte	0x21d
 2268 020d 0B       		.uleb128 0xb
 2269 020e D1010000 		.4byte	.LASF31
 2270 0212 01       		.byte	0x1
 2271 0213 C101     		.2byte	0x1c1
 2272 0215 77000000 		.4byte	0x77
 2273 0219 02       		.uleb128 0x2
 2274 021a 91       		.byte	0x91
 2275 021b 74       		.sleb128 -12
 2276 021c 00       		.byte	0
 2277 021d 09       		.uleb128 0x9
 2278 021e 11000000 		.4byte	.LASF32
 2279 0222 01       		.byte	0x1
 2280 0223 E501     		.2byte	0x1e5
 2281 0225 00000000 		.4byte	.LFB9
 2282 0229 4C000000 		.4byte	.LFE9-.LFB9
 2283 022d 01       		.uleb128 0x1
 2284 022e 9C       		.byte	0x9c
 2285 022f 52020000 		.4byte	0x252
 2286 0233 0B       		.uleb128 0xb
 2287 0234 DD040000 		.4byte	.LASF33
 2288 0238 01       		.byte	0x1
 2289 0239 E501     		.2byte	0x1e5
 2290 023b 77000000 		.4byte	0x77
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 66


 2291 023f 02       		.uleb128 0x2
 2292 0240 91       		.byte	0x91
 2293 0241 64       		.sleb128 -28
 2294 0242 0A       		.uleb128 0xa
 2295 0243 8C040000 		.4byte	.LASF21
 2296 0247 01       		.byte	0x1
 2297 0248 E701     		.2byte	0x1e7
 2298 024a 6B000000 		.4byte	0x6b
 2299 024e 02       		.uleb128 0x2
 2300 024f 91       		.byte	0x91
 2301 0250 6F       		.sleb128 -17
 2302 0251 00       		.byte	0
 2303 0252 09       		.uleb128 0x9
 2304 0253 C8040000 		.4byte	.LASF34
 2305 0257 01       		.byte	0x1
 2306 0258 0702     		.2byte	0x207
 2307 025a 00000000 		.4byte	.LFB10
 2308 025e 4C000000 		.4byte	.LFE10-.LFB10
 2309 0262 01       		.uleb128 0x1
 2310 0263 9C       		.byte	0x9c
 2311 0264 87020000 		.4byte	0x287
 2312 0268 0B       		.uleb128 0xb
 2313 0269 A7030000 		.4byte	.LASF35
 2314 026d 01       		.byte	0x1
 2315 026e 0702     		.2byte	0x207
 2316 0270 77000000 		.4byte	0x77
 2317 0274 02       		.uleb128 0x2
 2318 0275 91       		.byte	0x91
 2319 0276 64       		.sleb128 -28
 2320 0277 0A       		.uleb128 0xa
 2321 0278 8C040000 		.4byte	.LASF21
 2322 027c 01       		.byte	0x1
 2323 027d 0902     		.2byte	0x209
 2324 027f 6B000000 		.4byte	0x6b
 2325 0283 02       		.uleb128 0x2
 2326 0284 91       		.byte	0x91
 2327 0285 6F       		.sleb128 -17
 2328 0286 00       		.byte	0
 2329 0287 09       		.uleb128 0x9
 2330 0288 A4010000 		.4byte	.LASF36
 2331 028c 01       		.byte	0x1
 2332 028d 2802     		.2byte	0x228
 2333 028f 00000000 		.4byte	.LFB11
 2334 0293 50000000 		.4byte	.LFE11-.LFB11
 2335 0297 01       		.uleb128 0x1
 2336 0298 9C       		.byte	0x9c
 2337 0299 BC020000 		.4byte	0x2bc
 2338 029d 0B       		.uleb128 0xb
 2339 029e 7E010000 		.4byte	.LASF37
 2340 02a2 01       		.byte	0x1
 2341 02a3 2802     		.2byte	0x228
 2342 02a5 77000000 		.4byte	0x77
 2343 02a9 02       		.uleb128 0x2
 2344 02aa 91       		.byte	0x91
 2345 02ab 64       		.sleb128 -28
 2346 02ac 0A       		.uleb128 0xa
 2347 02ad 8C040000 		.4byte	.LASF21
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 67


 2348 02b1 01       		.byte	0x1
 2349 02b2 2A02     		.2byte	0x22a
 2350 02b4 6B000000 		.4byte	0x6b
 2351 02b8 02       		.uleb128 0x2
 2352 02b9 91       		.byte	0x91
 2353 02ba 6F       		.sleb128 -17
 2354 02bb 00       		.byte	0
 2355 02bc 09       		.uleb128 0x9
 2356 02bd 35010000 		.4byte	.LASF38
 2357 02c1 01       		.byte	0x1
 2358 02c2 4902     		.2byte	0x249
 2359 02c4 00000000 		.4byte	.LFB12
 2360 02c8 48000000 		.4byte	.LFE12-.LFB12
 2361 02cc 01       		.uleb128 0x1
 2362 02cd 9C       		.byte	0x9c
 2363 02ce F1020000 		.4byte	0x2f1
 2364 02d2 0B       		.uleb128 0xb
 2365 02d3 6A010000 		.4byte	.LASF39
 2366 02d7 01       		.byte	0x1
 2367 02d8 4902     		.2byte	0x249
 2368 02da 77000000 		.4byte	0x77
 2369 02de 02       		.uleb128 0x2
 2370 02df 91       		.byte	0x91
 2371 02e0 64       		.sleb128 -28
 2372 02e1 0A       		.uleb128 0xa
 2373 02e2 8C040000 		.4byte	.LASF21
 2374 02e6 01       		.byte	0x1
 2375 02e7 4B02     		.2byte	0x24b
 2376 02e9 6B000000 		.4byte	0x6b
 2377 02ed 02       		.uleb128 0x2
 2378 02ee 91       		.byte	0x91
 2379 02ef 6F       		.sleb128 -17
 2380 02f0 00       		.byte	0
 2381 02f1 0C       		.uleb128 0xc
 2382 02f2 5C000000 		.4byte	.LASF40
 2383 02f6 01       		.byte	0x1
 2384 02f7 6702     		.2byte	0x267
 2385 02f9 00000000 		.4byte	.LFB13
 2386 02fd 20000000 		.4byte	.LFE13-.LFB13
 2387 0301 01       		.uleb128 0x1
 2388 0302 9C       		.byte	0x9c
 2389 0303 17030000 		.4byte	0x317
 2390 0307 0B       		.uleb128 0xb
 2391 0308 00000000 		.4byte	.LASF41
 2392 030c 01       		.byte	0x1
 2393 030d 6702     		.2byte	0x267
 2394 030f 77000000 		.4byte	0x77
 2395 0313 02       		.uleb128 0x2
 2396 0314 91       		.byte	0x91
 2397 0315 74       		.sleb128 -12
 2398 0316 00       		.byte	0
 2399 0317 0D       		.uleb128 0xd
 2400 0318 8A000000 		.4byte	.LASF46
 2401 031c 01       		.byte	0x1
 2402 031d 7B02     		.2byte	0x27b
 2403 031f 77000000 		.4byte	0x77
 2404 0323 00000000 		.4byte	.LFB14
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 68


 2405 0327 18000000 		.4byte	.LFE14-.LFB14
 2406 032b 01       		.uleb128 0x1
 2407 032c 9C       		.byte	0x9c
 2408 032d 09       		.uleb128 0x9
 2409 032e 0E050000 		.4byte	.LASF42
 2410 0332 01       		.byte	0x1
 2411 0333 9802     		.2byte	0x298
 2412 0335 00000000 		.4byte	.LFB15
 2413 0339 48000000 		.4byte	.LFE15-.LFB15
 2414 033d 01       		.uleb128 0x1
 2415 033e 9C       		.byte	0x9c
 2416 033f 62030000 		.4byte	0x362
 2417 0343 0B       		.uleb128 0xb
 2418 0344 4A040000 		.4byte	.LASF43
 2419 0348 01       		.byte	0x1
 2420 0349 9802     		.2byte	0x298
 2421 034b 77000000 		.4byte	0x77
 2422 034f 02       		.uleb128 0x2
 2423 0350 91       		.byte	0x91
 2424 0351 64       		.sleb128 -28
 2425 0352 0A       		.uleb128 0xa
 2426 0353 8C040000 		.4byte	.LASF21
 2427 0357 01       		.byte	0x1
 2428 0358 9A02     		.2byte	0x29a
 2429 035a 6B000000 		.4byte	0x6b
 2430 035e 02       		.uleb128 0x2
 2431 035f 91       		.byte	0x91
 2432 0360 6F       		.sleb128 -17
 2433 0361 00       		.byte	0
 2434 0362 0C       		.uleb128 0xc
 2435 0363 BA020000 		.4byte	.LASF44
 2436 0367 01       		.byte	0x1
 2437 0368 B502     		.2byte	0x2b5
 2438 036a 00000000 		.4byte	.LFB16
 2439 036e 20000000 		.4byte	.LFE16-.LFB16
 2440 0372 01       		.uleb128 0x1
 2441 0373 9C       		.byte	0x9c
 2442 0374 88030000 		.4byte	0x388
 2443 0378 0B       		.uleb128 0xb
 2444 0379 24000000 		.4byte	.LASF45
 2445 037d 01       		.byte	0x1
 2446 037e B502     		.2byte	0x2b5
 2447 0380 77000000 		.4byte	0x77
 2448 0384 02       		.uleb128 0x2
 2449 0385 91       		.byte	0x91
 2450 0386 74       		.sleb128 -12
 2451 0387 00       		.byte	0
 2452 0388 0D       		.uleb128 0xd
 2453 0389 DC020000 		.4byte	.LASF47
 2454 038d 01       		.byte	0x1
 2455 038e C902     		.2byte	0x2c9
 2456 0390 77000000 		.4byte	0x77
 2457 0394 00000000 		.4byte	.LFB17
 2458 0398 18000000 		.4byte	.LFE17-.LFB17
 2459 039c 01       		.uleb128 0x1
 2460 039d 9C       		.byte	0x9c
 2461 039e 09       		.uleb128 0x9
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 69


 2462 039f 19010000 		.4byte	.LASF48
 2463 03a3 01       		.byte	0x1
 2464 03a4 E302     		.2byte	0x2e3
 2465 03a6 00000000 		.4byte	.LFB18
 2466 03aa 48000000 		.4byte	.LFE18-.LFB18
 2467 03ae 01       		.uleb128 0x1
 2468 03af 9C       		.byte	0x9c
 2469 03b0 D3030000 		.4byte	0x3d3
 2470 03b4 0B       		.uleb128 0xb
 2471 03b5 EC040000 		.4byte	.LASF49
 2472 03b9 01       		.byte	0x1
 2473 03ba E302     		.2byte	0x2e3
 2474 03bc 77000000 		.4byte	0x77
 2475 03c0 02       		.uleb128 0x2
 2476 03c1 91       		.byte	0x91
 2477 03c2 64       		.sleb128 -28
 2478 03c3 0A       		.uleb128 0xa
 2479 03c4 8C040000 		.4byte	.LASF21
 2480 03c8 01       		.byte	0x1
 2481 03c9 E502     		.2byte	0x2e5
 2482 03cb 6B000000 		.4byte	0x6b
 2483 03cf 02       		.uleb128 0x2
 2484 03d0 91       		.byte	0x91
 2485 03d1 6F       		.sleb128 -17
 2486 03d2 00       		.byte	0
 2487 03d3 0C       		.uleb128 0xc
 2488 03d4 FC030000 		.4byte	.LASF50
 2489 03d8 01       		.byte	0x1
 2490 03d9 FE02     		.2byte	0x2fe
 2491 03db 00000000 		.4byte	.LFB19
 2492 03df 20000000 		.4byte	.LFE19-.LFB19
 2493 03e3 01       		.uleb128 0x1
 2494 03e4 9C       		.byte	0x9c
 2495 03e5 F9030000 		.4byte	0x3f9
 2496 03e9 0B       		.uleb128 0xb
 2497 03ea 6F040000 		.4byte	.LASF51
 2498 03ee 01       		.byte	0x1
 2499 03ef FE02     		.2byte	0x2fe
 2500 03f1 77000000 		.4byte	0x77
 2501 03f5 02       		.uleb128 0x2
 2502 03f6 91       		.byte	0x91
 2503 03f7 74       		.sleb128 -12
 2504 03f8 00       		.byte	0
 2505 03f9 0D       		.uleb128 0xd
 2506 03fa 17030000 		.4byte	.LASF52
 2507 03fe 01       		.byte	0x1
 2508 03ff 1203     		.2byte	0x312
 2509 0401 77000000 		.4byte	0x77
 2510 0405 00000000 		.4byte	.LFB20
 2511 0409 18000000 		.4byte	.LFE20-.LFB20
 2512 040d 01       		.uleb128 0x1
 2513 040e 9C       		.byte	0x9c
 2514 040f 09       		.uleb128 0x9
 2515 0410 49030000 		.4byte	.LASF53
 2516 0414 01       		.byte	0x1
 2517 0415 2C03     		.2byte	0x32c
 2518 0417 00000000 		.4byte	.LFB21
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 70


 2519 041b 4C000000 		.4byte	.LFE21-.LFB21
 2520 041f 01       		.uleb128 0x1
 2521 0420 9C       		.byte	0x9c
 2522 0421 44040000 		.4byte	0x444
 2523 0425 0B       		.uleb128 0xb
 2524 0426 EC040000 		.4byte	.LASF49
 2525 042a 01       		.byte	0x1
 2526 042b 2C03     		.2byte	0x32c
 2527 042d 77000000 		.4byte	0x77
 2528 0431 02       		.uleb128 0x2
 2529 0432 91       		.byte	0x91
 2530 0433 64       		.sleb128 -28
 2531 0434 0A       		.uleb128 0xa
 2532 0435 8C040000 		.4byte	.LASF21
 2533 0439 01       		.byte	0x1
 2534 043a 2E03     		.2byte	0x32e
 2535 043c 6B000000 		.4byte	0x6b
 2536 0440 02       		.uleb128 0x2
 2537 0441 91       		.byte	0x91
 2538 0442 6F       		.sleb128 -17
 2539 0443 00       		.byte	0
 2540 0444 0C       		.uleb128 0xc
 2541 0445 A9020000 		.4byte	.LASF54
 2542 0449 01       		.byte	0x1
 2543 044a 5103     		.2byte	0x351
 2544 044c 00000000 		.4byte	.LFB22
 2545 0450 20000000 		.4byte	.LFE22-.LFB22
 2546 0454 01       		.uleb128 0x1
 2547 0455 9C       		.byte	0x9c
 2548 0456 6A040000 		.4byte	0x46a
 2549 045a 0B       		.uleb128 0xb
 2550 045b 00030000 		.4byte	.LASF55
 2551 045f 01       		.byte	0x1
 2552 0460 5103     		.2byte	0x351
 2553 0462 77000000 		.4byte	0x77
 2554 0466 02       		.uleb128 0x2
 2555 0467 91       		.byte	0x91
 2556 0468 74       		.sleb128 -12
 2557 0469 00       		.byte	0
 2558 046a 0D       		.uleb128 0xd
 2559 046b 21050000 		.4byte	.LASF56
 2560 046f 01       		.byte	0x1
 2561 0470 8403     		.2byte	0x384
 2562 0472 77000000 		.4byte	0x77
 2563 0476 00000000 		.4byte	.LFB23
 2564 047a 18000000 		.4byte	.LFE23-.LFB23
 2565 047e 01       		.uleb128 0x1
 2566 047f 9C       		.byte	0x9c
 2567 0480 0C       		.uleb128 0xc
 2568 0481 B4000000 		.4byte	.LASF57
 2569 0485 01       		.byte	0x1
 2570 0486 BA03     		.2byte	0x3ba
 2571 0488 00000000 		.4byte	.LFB24
 2572 048c 20000000 		.4byte	.LFE24-.LFB24
 2573 0490 01       		.uleb128 0x1
 2574 0491 9C       		.byte	0x9c
 2575 0492 A6040000 		.4byte	0x4a6
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 71


 2576 0496 0B       		.uleb128 0xb
 2577 0497 64040000 		.4byte	.LASF58
 2578 049b 01       		.byte	0x1
 2579 049c BA03     		.2byte	0x3ba
 2580 049e 77000000 		.4byte	0x77
 2581 04a2 02       		.uleb128 0x2
 2582 04a3 91       		.byte	0x91
 2583 04a4 74       		.sleb128 -12
 2584 04a5 00       		.byte	0
 2585 04a6 0D       		.uleb128 0xd
 2586 04a7 06010000 		.4byte	.LASF59
 2587 04ab 01       		.byte	0x1
 2588 04ac E803     		.2byte	0x3e8
 2589 04ae 77000000 		.4byte	0x77
 2590 04b2 00000000 		.4byte	.LFB25
 2591 04b6 18000000 		.4byte	.LFE25-.LFB25
 2592 04ba 01       		.uleb128 0x1
 2593 04bb 9C       		.byte	0x9c
 2594 04bc 0D       		.uleb128 0xd
 2595 04bd 39030000 		.4byte	.LASF60
 2596 04c1 01       		.byte	0x1
 2597 04c2 1604     		.2byte	0x416
 2598 04c4 77000000 		.4byte	0x77
 2599 04c8 00000000 		.4byte	.LFB26
 2600 04cc 18000000 		.4byte	.LFE26-.LFB26
 2601 04d0 01       		.uleb128 0x1
 2602 04d1 9C       		.byte	0x9c
 2603 04d2 0D       		.uleb128 0xd
 2604 04d3 79040000 		.4byte	.LASF61
 2605 04d7 01       		.byte	0x1
 2606 04d8 2B04     		.2byte	0x42b
 2607 04da 77000000 		.4byte	0x77
 2608 04de 00000000 		.4byte	.LFB27
 2609 04e2 18000000 		.4byte	.LFE27-.LFB27
 2610 04e6 01       		.uleb128 0x1
 2611 04e7 9C       		.byte	0x9c
 2612 04e8 09       		.uleb128 0x9
 2613 04e9 42000000 		.4byte	.LASF62
 2614 04ed 01       		.byte	0x1
 2615 04ee 4604     		.2byte	0x446
 2616 04f0 00000000 		.4byte	.LFB28
 2617 04f4 44000000 		.4byte	.LFE28-.LFB28
 2618 04f8 01       		.uleb128 0x1
 2619 04f9 9C       		.byte	0x9c
 2620 04fa 1D050000 		.4byte	0x51d
 2621 04fe 0B       		.uleb128 0xb
 2622 04ff 5E010000 		.4byte	.LASF63
 2623 0503 01       		.byte	0x1
 2624 0504 4604     		.2byte	0x446
 2625 0506 77000000 		.4byte	0x77
 2626 050a 02       		.uleb128 0x2
 2627 050b 91       		.byte	0x91
 2628 050c 64       		.sleb128 -28
 2629 050d 0A       		.uleb128 0xa
 2630 050e 8C040000 		.4byte	.LASF21
 2631 0512 01       		.byte	0x1
 2632 0513 4804     		.2byte	0x448
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 72


 2633 0515 6B000000 		.4byte	0x6b
 2634 0519 02       		.uleb128 0x2
 2635 051a 91       		.byte	0x91
 2636 051b 6F       		.sleb128 -17
 2637 051c 00       		.byte	0
 2638 051d 09       		.uleb128 0x9
 2639 051e 38040000 		.4byte	.LASF64
 2640 0522 01       		.byte	0x1
 2641 0523 6704     		.2byte	0x467
 2642 0525 00000000 		.4byte	.LFB29
 2643 0529 48000000 		.4byte	.LFE29-.LFB29
 2644 052d 01       		.uleb128 0x1
 2645 052e 9C       		.byte	0x9c
 2646 052f 52050000 		.4byte	0x552
 2647 0533 0B       		.uleb128 0xb
 2648 0534 5E010000 		.4byte	.LASF63
 2649 0538 01       		.byte	0x1
 2650 0539 6704     		.2byte	0x467
 2651 053b 77000000 		.4byte	0x77
 2652 053f 02       		.uleb128 0x2
 2653 0540 91       		.byte	0x91
 2654 0541 64       		.sleb128 -28
 2655 0542 0A       		.uleb128 0xa
 2656 0543 8C040000 		.4byte	.LASF21
 2657 0547 01       		.byte	0x1
 2658 0548 6904     		.2byte	0x469
 2659 054a 6B000000 		.4byte	0x6b
 2660 054e 02       		.uleb128 0x2
 2661 054f 91       		.byte	0x91
 2662 0550 6F       		.sleb128 -17
 2663 0551 00       		.byte	0
 2664 0552 09       		.uleb128 0x9
 2665 0553 4D010000 		.4byte	.LASF65
 2666 0557 01       		.byte	0x1
 2667 0558 8804     		.2byte	0x488
 2668 055a 00000000 		.4byte	.LFB30
 2669 055e 4C000000 		.4byte	.LFE30-.LFB30
 2670 0562 01       		.uleb128 0x1
 2671 0563 9C       		.byte	0x9c
 2672 0564 87050000 		.4byte	0x587
 2673 0568 0B       		.uleb128 0xb
 2674 0569 5E010000 		.4byte	.LASF63
 2675 056d 01       		.byte	0x1
 2676 056e 8804     		.2byte	0x488
 2677 0570 77000000 		.4byte	0x77
 2678 0574 02       		.uleb128 0x2
 2679 0575 91       		.byte	0x91
 2680 0576 64       		.sleb128 -28
 2681 0577 0A       		.uleb128 0xa
 2682 0578 8C040000 		.4byte	.LASF21
 2683 057c 01       		.byte	0x1
 2684 057d 8A04     		.2byte	0x48a
 2685 057f 6B000000 		.4byte	0x6b
 2686 0583 02       		.uleb128 0x2
 2687 0584 91       		.byte	0x91
 2688 0585 6F       		.sleb128 -17
 2689 0586 00       		.byte	0
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 73


 2690 0587 09       		.uleb128 0x9
 2691 0588 87010000 		.4byte	.LASF66
 2692 058c 01       		.byte	0x1
 2693 058d A804     		.2byte	0x4a8
 2694 058f 00000000 		.4byte	.LFB31
 2695 0593 48000000 		.4byte	.LFE31-.LFB31
 2696 0597 01       		.uleb128 0x1
 2697 0598 9C       		.byte	0x9c
 2698 0599 BC050000 		.4byte	0x5bc
 2699 059d 0B       		.uleb128 0xb
 2700 059e 5E010000 		.4byte	.LASF63
 2701 05a2 01       		.byte	0x1
 2702 05a3 A804     		.2byte	0x4a8
 2703 05a5 77000000 		.4byte	0x77
 2704 05a9 02       		.uleb128 0x2
 2705 05aa 91       		.byte	0x91
 2706 05ab 64       		.sleb128 -28
 2707 05ac 0A       		.uleb128 0xa
 2708 05ad 8C040000 		.4byte	.LASF21
 2709 05b1 01       		.byte	0x1
 2710 05b2 AA04     		.2byte	0x4aa
 2711 05b4 6B000000 		.4byte	0x6b
 2712 05b8 02       		.uleb128 0x2
 2713 05b9 91       		.byte	0x91
 2714 05ba 6F       		.sleb128 -17
 2715 05bb 00       		.byte	0
 2716 05bc 09       		.uleb128 0x9
 2717 05bd 9D040000 		.4byte	.LASF67
 2718 05c1 01       		.byte	0x1
 2719 05c2 C904     		.2byte	0x4c9
 2720 05c4 00000000 		.4byte	.LFB32
 2721 05c8 48000000 		.4byte	.LFE32-.LFB32
 2722 05cc 01       		.uleb128 0x1
 2723 05cd 9C       		.byte	0x9c
 2724 05ce F1050000 		.4byte	0x5f1
 2725 05d2 0B       		.uleb128 0xb
 2726 05d3 5E010000 		.4byte	.LASF63
 2727 05d7 01       		.byte	0x1
 2728 05d8 C904     		.2byte	0x4c9
 2729 05da 77000000 		.4byte	0x77
 2730 05de 02       		.uleb128 0x2
 2731 05df 91       		.byte	0x91
 2732 05e0 64       		.sleb128 -28
 2733 05e1 0A       		.uleb128 0xa
 2734 05e2 8C040000 		.4byte	.LASF21
 2735 05e6 01       		.byte	0x1
 2736 05e7 CB04     		.2byte	0x4cb
 2737 05e9 6B000000 		.4byte	0x6b
 2738 05ed 02       		.uleb128 0x2
 2739 05ee 91       		.byte	0x91
 2740 05ef 6F       		.sleb128 -17
 2741 05f0 00       		.byte	0
 2742 05f1 09       		.uleb128 0x9
 2743 05f2 96020000 		.4byte	.LASF68
 2744 05f6 01       		.byte	0x1
 2745 05f7 F104     		.2byte	0x4f1
 2746 05f9 00000000 		.4byte	.LFB33
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 74


 2747 05fd 3C000000 		.4byte	.LFE33-.LFB33
 2748 0601 01       		.uleb128 0x1
 2749 0602 9C       		.byte	0x9c
 2750 0603 35060000 		.4byte	0x635
 2751 0607 0B       		.uleb128 0xb
 2752 0608 6A010000 		.4byte	.LASF39
 2753 060c 01       		.byte	0x1
 2754 060d F104     		.2byte	0x4f1
 2755 060f 77000000 		.4byte	0x77
 2756 0613 02       		.uleb128 0x2
 2757 0614 91       		.byte	0x91
 2758 0615 64       		.sleb128 -28
 2759 0616 0B       		.uleb128 0xb
 2760 0617 B7010000 		.4byte	.LASF69
 2761 061b 01       		.byte	0x1
 2762 061c F104     		.2byte	0x4f1
 2763 061e 77000000 		.4byte	0x77
 2764 0622 02       		.uleb128 0x2
 2765 0623 91       		.byte	0x91
 2766 0624 60       		.sleb128 -32
 2767 0625 0A       		.uleb128 0xa
 2768 0626 8C040000 		.4byte	.LASF21
 2769 062a 01       		.byte	0x1
 2770 062b F304     		.2byte	0x4f3
 2771 062d 6B000000 		.4byte	0x6b
 2772 0631 02       		.uleb128 0x2
 2773 0632 91       		.byte	0x91
 2774 0633 6F       		.sleb128 -17
 2775 0634 00       		.byte	0
 2776 0635 0D       		.uleb128 0xd
 2777 0636 6F010000 		.4byte	.LASF70
 2778 063a 01       		.byte	0x1
 2779 063b 0E05     		.2byte	0x50e
 2780 063d 77000000 		.4byte	0x77
 2781 0641 00000000 		.4byte	.LFB34
 2782 0645 20000000 		.4byte	.LFE34-.LFB34
 2783 0649 01       		.uleb128 0x1
 2784 064a 9C       		.byte	0x9c
 2785 064b 0C       		.uleb128 0xc
 2786 064c C8000000 		.4byte	.LASF71
 2787 0650 01       		.byte	0x1
 2788 0651 2705     		.2byte	0x527
 2789 0653 00000000 		.4byte	.LFB35
 2790 0657 1C000000 		.4byte	.LFE35-.LFB35
 2791 065b 01       		.uleb128 0x1
 2792 065c 9C       		.byte	0x9c
 2793 065d 71060000 		.4byte	0x671
 2794 0661 0B       		.uleb128 0xb
 2795 0662 EE030000 		.4byte	.LASF72
 2796 0666 01       		.byte	0x1
 2797 0667 2705     		.2byte	0x527
 2798 0669 77000000 		.4byte	0x77
 2799 066d 02       		.uleb128 0x2
 2800 066e 91       		.byte	0x91
 2801 066f 74       		.sleb128 -12
 2802 0670 00       		.byte	0
 2803 0671 0D       		.uleb128 0xd
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 75


 2804 0672 D1030000 		.4byte	.LASF73
 2805 0676 01       		.byte	0x1
 2806 0677 3E05     		.2byte	0x53e
 2807 0679 77000000 		.4byte	0x77
 2808 067d 00000000 		.4byte	.LFB36
 2809 0681 14000000 		.4byte	.LFE36-.LFB36
 2810 0685 01       		.uleb128 0x1
 2811 0686 9C       		.byte	0x9c
 2812 0687 0D       		.uleb128 0xd
 2813 0688 F7040000 		.4byte	.LASF74
 2814 068c 01       		.byte	0x1
 2815 068d 5505     		.2byte	0x555
 2816 068f 77000000 		.4byte	0x77
 2817 0693 00000000 		.4byte	.LFB37
 2818 0697 14000000 		.4byte	.LFE37-.LFB37
 2819 069b 01       		.uleb128 0x1
 2820 069c 9C       		.byte	0x9c
 2821 069d 0C       		.uleb128 0xc
 2822 069e DD000000 		.4byte	.LASF75
 2823 06a2 01       		.byte	0x1
 2824 06a3 6C05     		.2byte	0x56c
 2825 06a5 00000000 		.4byte	.LFB38
 2826 06a9 1C000000 		.4byte	.LFE38-.LFB38
 2827 06ad 01       		.uleb128 0x1
 2828 06ae 9C       		.byte	0x9c
 2829 06af C3060000 		.4byte	0x6c3
 2830 06b3 0B       		.uleb128 0xb
 2831 06b4 EE030000 		.4byte	.LASF72
 2832 06b8 01       		.byte	0x1
 2833 06b9 6C05     		.2byte	0x56c
 2834 06bb 77000000 		.4byte	0x77
 2835 06bf 02       		.uleb128 0x2
 2836 06c0 91       		.byte	0x91
 2837 06c1 74       		.sleb128 -12
 2838 06c2 00       		.byte	0
 2839 06c3 0C       		.uleb128 0xc
 2840 06c4 27040000 		.4byte	.LASF76
 2841 06c8 01       		.byte	0x1
 2842 06c9 8305     		.2byte	0x583
 2843 06cb 00000000 		.4byte	.LFB39
 2844 06cf 1C000000 		.4byte	.LFE39-.LFB39
 2845 06d3 01       		.uleb128 0x1
 2846 06d4 9C       		.byte	0x9c
 2847 06d5 E9060000 		.4byte	0x6e9
 2848 06d9 0B       		.uleb128 0xb
 2849 06da EE030000 		.4byte	.LASF72
 2850 06de 01       		.byte	0x1
 2851 06df 8305     		.2byte	0x583
 2852 06e1 77000000 		.4byte	0x77
 2853 06e5 02       		.uleb128 0x2
 2854 06e6 91       		.byte	0x91
 2855 06e7 74       		.sleb128 -12
 2856 06e8 00       		.byte	0
 2857 06e9 0E       		.uleb128 0xe
 2858 06ea D0020000 		.4byte	.LASF80
 2859 06ee 01       		.byte	0x1
 2860 06ef 15       		.byte	0x15
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 76


 2861 06f0 6B000000 		.4byte	0x6b
 2862 06f4 05       		.uleb128 0x5
 2863 06f5 03       		.byte	0x3
 2864 06f6 00000000 		.4byte	PWM_initVar
 2865 06fa 00       		.byte	0
 2866              		.section	.debug_abbrev,"",%progbits
 2867              	.Ldebug_abbrev0:
 2868 0000 01       		.uleb128 0x1
 2869 0001 11       		.uleb128 0x11
 2870 0002 01       		.byte	0x1
 2871 0003 25       		.uleb128 0x25
 2872 0004 0E       		.uleb128 0xe
 2873 0005 13       		.uleb128 0x13
 2874 0006 0B       		.uleb128 0xb
 2875 0007 03       		.uleb128 0x3
 2876 0008 0E       		.uleb128 0xe
 2877 0009 1B       		.uleb128 0x1b
 2878 000a 0E       		.uleb128 0xe
 2879 000b 55       		.uleb128 0x55
 2880 000c 17       		.uleb128 0x17
 2881 000d 11       		.uleb128 0x11
 2882 000e 01       		.uleb128 0x1
 2883 000f 10       		.uleb128 0x10
 2884 0010 17       		.uleb128 0x17
 2885 0011 00       		.byte	0
 2886 0012 00       		.byte	0
 2887 0013 02       		.uleb128 0x2
 2888 0014 24       		.uleb128 0x24
 2889 0015 00       		.byte	0
 2890 0016 0B       		.uleb128 0xb
 2891 0017 0B       		.uleb128 0xb
 2892 0018 3E       		.uleb128 0x3e
 2893 0019 0B       		.uleb128 0xb
 2894 001a 03       		.uleb128 0x3
 2895 001b 0E       		.uleb128 0xe
 2896 001c 00       		.byte	0
 2897 001d 00       		.byte	0
 2898 001e 03       		.uleb128 0x3
 2899 001f 24       		.uleb128 0x24
 2900 0020 00       		.byte	0
 2901 0021 0B       		.uleb128 0xb
 2902 0022 0B       		.uleb128 0xb
 2903 0023 3E       		.uleb128 0x3e
 2904 0024 0B       		.uleb128 0xb
 2905 0025 03       		.uleb128 0x3
 2906 0026 08       		.uleb128 0x8
 2907 0027 00       		.byte	0
 2908 0028 00       		.byte	0
 2909 0029 04       		.uleb128 0x4
 2910 002a 16       		.uleb128 0x16
 2911 002b 00       		.byte	0
 2912 002c 03       		.uleb128 0x3
 2913 002d 0E       		.uleb128 0xe
 2914 002e 3A       		.uleb128 0x3a
 2915 002f 0B       		.uleb128 0xb
 2916 0030 3B       		.uleb128 0x3b
 2917 0031 05       		.uleb128 0x5
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 77


 2918 0032 49       		.uleb128 0x49
 2919 0033 13       		.uleb128 0x13
 2920 0034 00       		.byte	0
 2921 0035 00       		.byte	0
 2922 0036 05       		.uleb128 0x5
 2923 0037 35       		.uleb128 0x35
 2924 0038 00       		.byte	0
 2925 0039 49       		.uleb128 0x49
 2926 003a 13       		.uleb128 0x13
 2927 003b 00       		.byte	0
 2928 003c 00       		.byte	0
 2929 003d 06       		.uleb128 0x6
 2930 003e 2E       		.uleb128 0x2e
 2931 003f 00       		.byte	0
 2932 0040 3F       		.uleb128 0x3f
 2933 0041 19       		.uleb128 0x19
 2934 0042 03       		.uleb128 0x3
 2935 0043 0E       		.uleb128 0xe
 2936 0044 3A       		.uleb128 0x3a
 2937 0045 0B       		.uleb128 0xb
 2938 0046 3B       		.uleb128 0x3b
 2939 0047 0B       		.uleb128 0xb
 2940 0048 27       		.uleb128 0x27
 2941 0049 19       		.uleb128 0x19
 2942 004a 11       		.uleb128 0x11
 2943 004b 01       		.uleb128 0x1
 2944 004c 12       		.uleb128 0x12
 2945 004d 06       		.uleb128 0x6
 2946 004e 40       		.uleb128 0x40
 2947 004f 18       		.uleb128 0x18
 2948 0050 9642     		.uleb128 0x2116
 2949 0052 19       		.uleb128 0x19
 2950 0053 00       		.byte	0
 2951 0054 00       		.byte	0
 2952 0055 07       		.uleb128 0x7
 2953 0056 2E       		.uleb128 0x2e
 2954 0057 01       		.byte	0x1
 2955 0058 3F       		.uleb128 0x3f
 2956 0059 19       		.uleb128 0x19
 2957 005a 03       		.uleb128 0x3
 2958 005b 0E       		.uleb128 0xe
 2959 005c 3A       		.uleb128 0x3a
 2960 005d 0B       		.uleb128 0xb
 2961 005e 3B       		.uleb128 0x3b
 2962 005f 0B       		.uleb128 0xb
 2963 0060 27       		.uleb128 0x27
 2964 0061 19       		.uleb128 0x19
 2965 0062 11       		.uleb128 0x11
 2966 0063 01       		.uleb128 0x1
 2967 0064 12       		.uleb128 0x12
 2968 0065 06       		.uleb128 0x6
 2969 0066 40       		.uleb128 0x40
 2970 0067 18       		.uleb128 0x18
 2971 0068 9642     		.uleb128 0x2116
 2972 006a 19       		.uleb128 0x19
 2973 006b 01       		.uleb128 0x1
 2974 006c 13       		.uleb128 0x13
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 78


 2975 006d 00       		.byte	0
 2976 006e 00       		.byte	0
 2977 006f 08       		.uleb128 0x8
 2978 0070 34       		.uleb128 0x34
 2979 0071 00       		.byte	0
 2980 0072 03       		.uleb128 0x3
 2981 0073 0E       		.uleb128 0xe
 2982 0074 3A       		.uleb128 0x3a
 2983 0075 0B       		.uleb128 0xb
 2984 0076 3B       		.uleb128 0x3b
 2985 0077 0B       		.uleb128 0xb
 2986 0078 49       		.uleb128 0x49
 2987 0079 13       		.uleb128 0x13
 2988 007a 02       		.uleb128 0x2
 2989 007b 18       		.uleb128 0x18
 2990 007c 00       		.byte	0
 2991 007d 00       		.byte	0
 2992 007e 09       		.uleb128 0x9
 2993 007f 2E       		.uleb128 0x2e
 2994 0080 01       		.byte	0x1
 2995 0081 3F       		.uleb128 0x3f
 2996 0082 19       		.uleb128 0x19
 2997 0083 03       		.uleb128 0x3
 2998 0084 0E       		.uleb128 0xe
 2999 0085 3A       		.uleb128 0x3a
 3000 0086 0B       		.uleb128 0xb
 3001 0087 3B       		.uleb128 0x3b
 3002 0088 05       		.uleb128 0x5
 3003 0089 27       		.uleb128 0x27
 3004 008a 19       		.uleb128 0x19
 3005 008b 11       		.uleb128 0x11
 3006 008c 01       		.uleb128 0x1
 3007 008d 12       		.uleb128 0x12
 3008 008e 06       		.uleb128 0x6
 3009 008f 40       		.uleb128 0x40
 3010 0090 18       		.uleb128 0x18
 3011 0091 9642     		.uleb128 0x2116
 3012 0093 19       		.uleb128 0x19
 3013 0094 01       		.uleb128 0x1
 3014 0095 13       		.uleb128 0x13
 3015 0096 00       		.byte	0
 3016 0097 00       		.byte	0
 3017 0098 0A       		.uleb128 0xa
 3018 0099 34       		.uleb128 0x34
 3019 009a 00       		.byte	0
 3020 009b 03       		.uleb128 0x3
 3021 009c 0E       		.uleb128 0xe
 3022 009d 3A       		.uleb128 0x3a
 3023 009e 0B       		.uleb128 0xb
 3024 009f 3B       		.uleb128 0x3b
 3025 00a0 05       		.uleb128 0x5
 3026 00a1 49       		.uleb128 0x49
 3027 00a2 13       		.uleb128 0x13
 3028 00a3 02       		.uleb128 0x2
 3029 00a4 18       		.uleb128 0x18
 3030 00a5 00       		.byte	0
 3031 00a6 00       		.byte	0
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 79


 3032 00a7 0B       		.uleb128 0xb
 3033 00a8 05       		.uleb128 0x5
 3034 00a9 00       		.byte	0
 3035 00aa 03       		.uleb128 0x3
 3036 00ab 0E       		.uleb128 0xe
 3037 00ac 3A       		.uleb128 0x3a
 3038 00ad 0B       		.uleb128 0xb
 3039 00ae 3B       		.uleb128 0x3b
 3040 00af 05       		.uleb128 0x5
 3041 00b0 49       		.uleb128 0x49
 3042 00b1 13       		.uleb128 0x13
 3043 00b2 02       		.uleb128 0x2
 3044 00b3 18       		.uleb128 0x18
 3045 00b4 00       		.byte	0
 3046 00b5 00       		.byte	0
 3047 00b6 0C       		.uleb128 0xc
 3048 00b7 2E       		.uleb128 0x2e
 3049 00b8 01       		.byte	0x1
 3050 00b9 3F       		.uleb128 0x3f
 3051 00ba 19       		.uleb128 0x19
 3052 00bb 03       		.uleb128 0x3
 3053 00bc 0E       		.uleb128 0xe
 3054 00bd 3A       		.uleb128 0x3a
 3055 00be 0B       		.uleb128 0xb
 3056 00bf 3B       		.uleb128 0x3b
 3057 00c0 05       		.uleb128 0x5
 3058 00c1 27       		.uleb128 0x27
 3059 00c2 19       		.uleb128 0x19
 3060 00c3 11       		.uleb128 0x11
 3061 00c4 01       		.uleb128 0x1
 3062 00c5 12       		.uleb128 0x12
 3063 00c6 06       		.uleb128 0x6
 3064 00c7 40       		.uleb128 0x40
 3065 00c8 18       		.uleb128 0x18
 3066 00c9 9742     		.uleb128 0x2117
 3067 00cb 19       		.uleb128 0x19
 3068 00cc 01       		.uleb128 0x1
 3069 00cd 13       		.uleb128 0x13
 3070 00ce 00       		.byte	0
 3071 00cf 00       		.byte	0
 3072 00d0 0D       		.uleb128 0xd
 3073 00d1 2E       		.uleb128 0x2e
 3074 00d2 00       		.byte	0
 3075 00d3 3F       		.uleb128 0x3f
 3076 00d4 19       		.uleb128 0x19
 3077 00d5 03       		.uleb128 0x3
 3078 00d6 0E       		.uleb128 0xe
 3079 00d7 3A       		.uleb128 0x3a
 3080 00d8 0B       		.uleb128 0xb
 3081 00d9 3B       		.uleb128 0x3b
 3082 00da 05       		.uleb128 0x5
 3083 00db 27       		.uleb128 0x27
 3084 00dc 19       		.uleb128 0x19
 3085 00dd 49       		.uleb128 0x49
 3086 00de 13       		.uleb128 0x13
 3087 00df 11       		.uleb128 0x11
 3088 00e0 01       		.uleb128 0x1
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 80


 3089 00e1 12       		.uleb128 0x12
 3090 00e2 06       		.uleb128 0x6
 3091 00e3 40       		.uleb128 0x40
 3092 00e4 18       		.uleb128 0x18
 3093 00e5 9742     		.uleb128 0x2117
 3094 00e7 19       		.uleb128 0x19
 3095 00e8 00       		.byte	0
 3096 00e9 00       		.byte	0
 3097 00ea 0E       		.uleb128 0xe
 3098 00eb 34       		.uleb128 0x34
 3099 00ec 00       		.byte	0
 3100 00ed 03       		.uleb128 0x3
 3101 00ee 0E       		.uleb128 0xe
 3102 00ef 3A       		.uleb128 0x3a
 3103 00f0 0B       		.uleb128 0xb
 3104 00f1 3B       		.uleb128 0x3b
 3105 00f2 0B       		.uleb128 0xb
 3106 00f3 49       		.uleb128 0x49
 3107 00f4 13       		.uleb128 0x13
 3108 00f5 3F       		.uleb128 0x3f
 3109 00f6 19       		.uleb128 0x19
 3110 00f7 02       		.uleb128 0x2
 3111 00f8 18       		.uleb128 0x18
 3112 00f9 00       		.byte	0
 3113 00fa 00       		.byte	0
 3114 00fb 00       		.byte	0
 3115              		.section	.debug_aranges,"",%progbits
 3116 0000 54010000 		.4byte	0x154
 3117 0004 0200     		.2byte	0x2
 3118 0006 00000000 		.4byte	.Ldebug_info0
 3119 000a 04       		.byte	0x4
 3120 000b 00       		.byte	0
 3121 000c 0000     		.2byte	0
 3122 000e 0000     		.2byte	0
 3123 0010 00000000 		.4byte	.LFB0
 3124 0014 58000000 		.4byte	.LFE0-.LFB0
 3125 0018 00000000 		.4byte	.LFB1
 3126 001c 34000000 		.4byte	.LFE1-.LFB1
 3127 0020 00000000 		.4byte	.LFB2
 3128 0024 24000000 		.4byte	.LFE2-.LFB2
 3129 0028 00000000 		.4byte	.LFB3
 3130 002c 34000000 		.4byte	.LFE3-.LFB3
 3131 0030 00000000 		.4byte	.LFB4
 3132 0034 48000000 		.4byte	.LFE4-.LFB4
 3133 0038 00000000 		.4byte	.LFB5
 3134 003c 48000000 		.4byte	.LFE5-.LFB5
 3135 0040 00000000 		.4byte	.LFB6
 3136 0044 48000000 		.4byte	.LFE6-.LFB6
 3137 0048 00000000 		.4byte	.LFB7
 3138 004c 50000000 		.4byte	.LFE7-.LFB7
 3139 0050 00000000 		.4byte	.LFB8
 3140 0054 20000000 		.4byte	.LFE8-.LFB8
 3141 0058 00000000 		.4byte	.LFB9
 3142 005c 4C000000 		.4byte	.LFE9-.LFB9
 3143 0060 00000000 		.4byte	.LFB10
 3144 0064 4C000000 		.4byte	.LFE10-.LFB10
 3145 0068 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 81


 3146 006c 50000000 		.4byte	.LFE11-.LFB11
 3147 0070 00000000 		.4byte	.LFB12
 3148 0074 48000000 		.4byte	.LFE12-.LFB12
 3149 0078 00000000 		.4byte	.LFB13
 3150 007c 20000000 		.4byte	.LFE13-.LFB13
 3151 0080 00000000 		.4byte	.LFB14
 3152 0084 18000000 		.4byte	.LFE14-.LFB14
 3153 0088 00000000 		.4byte	.LFB15
 3154 008c 48000000 		.4byte	.LFE15-.LFB15
 3155 0090 00000000 		.4byte	.LFB16
 3156 0094 20000000 		.4byte	.LFE16-.LFB16
 3157 0098 00000000 		.4byte	.LFB17
 3158 009c 18000000 		.4byte	.LFE17-.LFB17
 3159 00a0 00000000 		.4byte	.LFB18
 3160 00a4 48000000 		.4byte	.LFE18-.LFB18
 3161 00a8 00000000 		.4byte	.LFB19
 3162 00ac 20000000 		.4byte	.LFE19-.LFB19
 3163 00b0 00000000 		.4byte	.LFB20
 3164 00b4 18000000 		.4byte	.LFE20-.LFB20
 3165 00b8 00000000 		.4byte	.LFB21
 3166 00bc 4C000000 		.4byte	.LFE21-.LFB21
 3167 00c0 00000000 		.4byte	.LFB22
 3168 00c4 20000000 		.4byte	.LFE22-.LFB22
 3169 00c8 00000000 		.4byte	.LFB23
 3170 00cc 18000000 		.4byte	.LFE23-.LFB23
 3171 00d0 00000000 		.4byte	.LFB24
 3172 00d4 20000000 		.4byte	.LFE24-.LFB24
 3173 00d8 00000000 		.4byte	.LFB25
 3174 00dc 18000000 		.4byte	.LFE25-.LFB25
 3175 00e0 00000000 		.4byte	.LFB26
 3176 00e4 18000000 		.4byte	.LFE26-.LFB26
 3177 00e8 00000000 		.4byte	.LFB27
 3178 00ec 18000000 		.4byte	.LFE27-.LFB27
 3179 00f0 00000000 		.4byte	.LFB28
 3180 00f4 44000000 		.4byte	.LFE28-.LFB28
 3181 00f8 00000000 		.4byte	.LFB29
 3182 00fc 48000000 		.4byte	.LFE29-.LFB29
 3183 0100 00000000 		.4byte	.LFB30
 3184 0104 4C000000 		.4byte	.LFE30-.LFB30
 3185 0108 00000000 		.4byte	.LFB31
 3186 010c 48000000 		.4byte	.LFE31-.LFB31
 3187 0110 00000000 		.4byte	.LFB32
 3188 0114 48000000 		.4byte	.LFE32-.LFB32
 3189 0118 00000000 		.4byte	.LFB33
 3190 011c 3C000000 		.4byte	.LFE33-.LFB33
 3191 0120 00000000 		.4byte	.LFB34
 3192 0124 20000000 		.4byte	.LFE34-.LFB34
 3193 0128 00000000 		.4byte	.LFB35
 3194 012c 1C000000 		.4byte	.LFE35-.LFB35
 3195 0130 00000000 		.4byte	.LFB36
 3196 0134 14000000 		.4byte	.LFE36-.LFB36
 3197 0138 00000000 		.4byte	.LFB37
 3198 013c 14000000 		.4byte	.LFE37-.LFB37
 3199 0140 00000000 		.4byte	.LFB38
 3200 0144 1C000000 		.4byte	.LFE38-.LFB38
 3201 0148 00000000 		.4byte	.LFB39
 3202 014c 1C000000 		.4byte	.LFE39-.LFB39
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 82


 3203 0150 00000000 		.4byte	0
 3204 0154 00000000 		.4byte	0
 3205              		.section	.debug_ranges,"",%progbits
 3206              	.Ldebug_ranges0:
 3207 0000 00000000 		.4byte	.LFB0
 3208 0004 58000000 		.4byte	.LFE0
 3209 0008 00000000 		.4byte	.LFB1
 3210 000c 34000000 		.4byte	.LFE1
 3211 0010 00000000 		.4byte	.LFB2
 3212 0014 24000000 		.4byte	.LFE2
 3213 0018 00000000 		.4byte	.LFB3
 3214 001c 34000000 		.4byte	.LFE3
 3215 0020 00000000 		.4byte	.LFB4
 3216 0024 48000000 		.4byte	.LFE4
 3217 0028 00000000 		.4byte	.LFB5
 3218 002c 48000000 		.4byte	.LFE5
 3219 0030 00000000 		.4byte	.LFB6
 3220 0034 48000000 		.4byte	.LFE6
 3221 0038 00000000 		.4byte	.LFB7
 3222 003c 50000000 		.4byte	.LFE7
 3223 0040 00000000 		.4byte	.LFB8
 3224 0044 20000000 		.4byte	.LFE8
 3225 0048 00000000 		.4byte	.LFB9
 3226 004c 4C000000 		.4byte	.LFE9
 3227 0050 00000000 		.4byte	.LFB10
 3228 0054 4C000000 		.4byte	.LFE10
 3229 0058 00000000 		.4byte	.LFB11
 3230 005c 50000000 		.4byte	.LFE11
 3231 0060 00000000 		.4byte	.LFB12
 3232 0064 48000000 		.4byte	.LFE12
 3233 0068 00000000 		.4byte	.LFB13
 3234 006c 20000000 		.4byte	.LFE13
 3235 0070 00000000 		.4byte	.LFB14
 3236 0074 18000000 		.4byte	.LFE14
 3237 0078 00000000 		.4byte	.LFB15
 3238 007c 48000000 		.4byte	.LFE15
 3239 0080 00000000 		.4byte	.LFB16
 3240 0084 20000000 		.4byte	.LFE16
 3241 0088 00000000 		.4byte	.LFB17
 3242 008c 18000000 		.4byte	.LFE17
 3243 0090 00000000 		.4byte	.LFB18
 3244 0094 48000000 		.4byte	.LFE18
 3245 0098 00000000 		.4byte	.LFB19
 3246 009c 20000000 		.4byte	.LFE19
 3247 00a0 00000000 		.4byte	.LFB20
 3248 00a4 18000000 		.4byte	.LFE20
 3249 00a8 00000000 		.4byte	.LFB21
 3250 00ac 4C000000 		.4byte	.LFE21
 3251 00b0 00000000 		.4byte	.LFB22
 3252 00b4 20000000 		.4byte	.LFE22
 3253 00b8 00000000 		.4byte	.LFB23
 3254 00bc 18000000 		.4byte	.LFE23
 3255 00c0 00000000 		.4byte	.LFB24
 3256 00c4 20000000 		.4byte	.LFE24
 3257 00c8 00000000 		.4byte	.LFB25
 3258 00cc 18000000 		.4byte	.LFE25
 3259 00d0 00000000 		.4byte	.LFB26
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 83


 3260 00d4 18000000 		.4byte	.LFE26
 3261 00d8 00000000 		.4byte	.LFB27
 3262 00dc 18000000 		.4byte	.LFE27
 3263 00e0 00000000 		.4byte	.LFB28
 3264 00e4 44000000 		.4byte	.LFE28
 3265 00e8 00000000 		.4byte	.LFB29
 3266 00ec 48000000 		.4byte	.LFE29
 3267 00f0 00000000 		.4byte	.LFB30
 3268 00f4 4C000000 		.4byte	.LFE30
 3269 00f8 00000000 		.4byte	.LFB31
 3270 00fc 48000000 		.4byte	.LFE31
 3271 0100 00000000 		.4byte	.LFB32
 3272 0104 48000000 		.4byte	.LFE32
 3273 0108 00000000 		.4byte	.LFB33
 3274 010c 3C000000 		.4byte	.LFE33
 3275 0110 00000000 		.4byte	.LFB34
 3276 0114 20000000 		.4byte	.LFE34
 3277 0118 00000000 		.4byte	.LFB35
 3278 011c 1C000000 		.4byte	.LFE35
 3279 0120 00000000 		.4byte	.LFB36
 3280 0124 14000000 		.4byte	.LFE36
 3281 0128 00000000 		.4byte	.LFB37
 3282 012c 14000000 		.4byte	.LFE37
 3283 0130 00000000 		.4byte	.LFB38
 3284 0134 1C000000 		.4byte	.LFE38
 3285 0138 00000000 		.4byte	.LFB39
 3286 013c 1C000000 		.4byte	.LFE39
 3287 0140 00000000 		.4byte	0
 3288 0144 00000000 		.4byte	0
 3289              		.section	.debug_line,"",%progbits
 3290              	.Ldebug_line0:
 3291 0000 6C030000 		.section	.debug_str,"MS",%progbits,1
 3291      02004000 
 3291      00000201 
 3291      FB0E0D00 
 3291      01010101 
 3292              	.LASF41:
 3293 0000 636F756E 		.ascii	"count\000"
 3293      7400
 3294              	.LASF19:
 3295 0006 50574D5F 		.ascii	"PWM_Enable\000"
 3295      456E6162 
 3295      6C6500
 3296              	.LASF32:
 3297 0011 50574D5F 		.ascii	"PWM_SetPWMSyncKill\000"
 3297      53657450 
 3297      574D5379 
 3297      6E634B69 
 3297      6C6C00
 3298              	.LASF45:
 3299 0024 70657269 		.ascii	"period\000"
 3299      6F6400
 3300              	.LASF7:
 3301 002b 6C6F6E67 		.ascii	"long long unsigned int\000"
 3301      206C6F6E 
 3301      6720756E 
 3301      7369676E 
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 84


 3301      65642069 
 3302              	.LASF62:
 3303 0042 50574D5F 		.ascii	"PWM_SetCaptureMode\000"
 3303      53657443 
 3303      61707475 
 3303      72654D6F 
 3303      646500
 3304              	.LASF25:
 3305 0055 71644D6F 		.ascii	"qdMode\000"
 3305      646500
 3306              	.LASF40:
 3307 005c 50574D5F 		.ascii	"PWM_WriteCounter\000"
 3307      57726974 
 3307      65436F75 
 3307      6E746572 
 3307      00
 3308              	.LASF78:
 3309 006d 47656E65 		.ascii	"Generated_Source\\PSoC4\\PWM.c\000"
 3309      72617465 
 3309      645F536F 
 3309      75726365 
 3309      5C50536F 
 3310              	.LASF46:
 3311 008a 50574D5F 		.ascii	"PWM_ReadCounter\000"
 3311      52656164 
 3311      436F756E 
 3311      74657200 
 3312              	.LASF6:
 3313 009a 6C6F6E67 		.ascii	"long long int\000"
 3313      206C6F6E 
 3313      6720696E 
 3313      7400
 3314              	.LASF0:
 3315 00a8 7369676E 		.ascii	"signed char\000"
 3315      65642063 
 3315      68617200 
 3316              	.LASF57:
 3317 00b4 50574D5F 		.ascii	"PWM_WriteCompareBuf\000"
 3317      57726974 
 3317      65436F6D 
 3317      70617265 
 3317      42756600 
 3318              	.LASF71:
 3319 00c8 50574D5F 		.ascii	"PWM_SetInterruptMode\000"
 3319      53657449 
 3319      6E746572 
 3319      72757074 
 3319      4D6F6465 
 3320              	.LASF75:
 3321 00dd 50574D5F 		.ascii	"PWM_ClearInterrupt\000"
 3321      436C6561 
 3321      72496E74 
 3321      65727275 
 3321      707400
 3322              	.LASF4:
 3323 00f0 6C6F6E67 		.ascii	"long int\000"
 3323      20696E74 
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 85


 3323      00
 3324              	.LASF9:
 3325 00f9 75696E74 		.ascii	"uint8\000"
 3325      3800
 3326              	.LASF12:
 3327 00ff 646F7562 		.ascii	"double\000"
 3327      6C6500
 3328              	.LASF59:
 3329 0106 50574D5F 		.ascii	"PWM_ReadCompareBuf\000"
 3329      52656164 
 3329      436F6D70 
 3329      61726542 
 3329      756600
 3330              	.LASF48:
 3331 0119 50574D5F 		.ascii	"PWM_SetCompareSwap\000"
 3331      53657443 
 3331      6F6D7061 
 3331      72655377 
 3331      617000
 3332              	.LASF20:
 3333 012c 50574D5F 		.ascii	"PWM_Stop\000"
 3333      53746F70 
 3333      00
 3334              	.LASF38:
 3335 0135 50574D5F 		.ascii	"PWM_SetPWMInvert\000"
 3335      53657450 
 3335      574D496E 
 3335      76657274 
 3335      00
 3336              	.LASF10:
 3337 0146 75696E74 		.ascii	"uint32\000"
 3337      333200
 3338              	.LASF65:
 3339 014d 50574D5F 		.ascii	"PWM_SetStartMode\000"
 3339      53657453 
 3339      74617274 
 3339      4D6F6465 
 3339      00
 3340              	.LASF63:
 3341 015e 74726967 		.ascii	"triggerMode\000"
 3341      6765724D 
 3341      6F646500 
 3342              	.LASF39:
 3343 016a 6D61736B 		.ascii	"mask\000"
 3343      00
 3344              	.LASF70:
 3345 016f 50574D5F 		.ascii	"PWM_ReadStatus\000"
 3345      52656164 
 3345      53746174 
 3345      757300
 3346              	.LASF37:
 3347 017e 64656164 		.ascii	"deadTime\000"
 3347      54696D65 
 3347      00
 3348              	.LASF66:
 3349 0187 50574D5F 		.ascii	"PWM_SetStopMode\000"
 3349      53657453 
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 86


 3349      746F704D 
 3349      6F646500 
 3350              	.LASF8:
 3351 0197 756E7369 		.ascii	"unsigned int\000"
 3351      676E6564 
 3351      20696E74 
 3351      00
 3352              	.LASF36:
 3353 01a4 50574D5F 		.ascii	"PWM_SetPWMDeadTime\000"
 3353      53657450 
 3353      574D4465 
 3353      61645469 
 3353      6D6500
 3354              	.LASF69:
 3355 01b7 636F6D6D 		.ascii	"command\000"
 3355      616E6400 
 3356              	.LASF5:
 3357 01bf 6C6F6E67 		.ascii	"long unsigned int\000"
 3357      20756E73 
 3357      69676E65 
 3357      6420696E 
 3357      7400
 3358              	.LASF31:
 3359 01d1 6D6F6465 		.ascii	"modeMask\000"
 3359      4D61736B 
 3359      00
 3360              	.LASF3:
 3361 01da 73686F72 		.ascii	"short unsigned int\000"
 3361      7420756E 
 3361      7369676E 
 3361      65642069 
 3361      6E7400
 3362              	.LASF26:
 3363 01ed 50574D5F 		.ascii	"PWM_SetPrescaler\000"
 3363      53657450 
 3363      72657363 
 3363      616C6572 
 3363      00
 3364              	.LASF18:
 3365 01fe 50574D5F 		.ascii	"PWM_Start\000"
 3365      53746172 
 3365      7400
 3366              	.LASF77:
 3367 0208 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3367      43313120 
 3367      352E342E 
 3367      31203230 
 3367      31363036 
 3368 023b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 3368      20726576 
 3368      6973696F 
 3368      6E203233 
 3368      37373135 
 3369 026e 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3369      66756E63 
 3369      74696F6E 
 3369      2D736563 
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 87


 3369      74696F6E 
 3370              	.LASF68:
 3371 0296 50574D5F 		.ascii	"PWM_TriggerCommand\000"
 3371      54726967 
 3371      67657243 
 3371      6F6D6D61 
 3371      6E6400
 3372              	.LASF54:
 3373 02a9 50574D5F 		.ascii	"PWM_WriteCompare\000"
 3373      57726974 
 3373      65436F6D 
 3373      70617265 
 3373      00
 3374              	.LASF44:
 3375 02ba 50574D5F 		.ascii	"PWM_WritePeriod\000"
 3375      57726974 
 3375      65506572 
 3375      696F6400 
 3376              	.LASF14:
 3377 02ca 72656733 		.ascii	"reg32\000"
 3377      3200
 3378              	.LASF80:
 3379 02d0 50574D5F 		.ascii	"PWM_initVar\000"
 3379      696E6974 
 3379      56617200 
 3380              	.LASF47:
 3381 02dc 50574D5F 		.ascii	"PWM_ReadPeriod\000"
 3381      52656164 
 3381      50657269 
 3381      6F6400
 3382              	.LASF16:
 3383 02eb 73697A65 		.ascii	"sizetype\000"
 3383      74797065 
 3383      00
 3384              	.LASF15:
 3385 02f4 6C6F6E67 		.ascii	"long double\000"
 3385      20646F75 
 3385      626C6500 
 3386              	.LASF55:
 3387 0300 636F6D70 		.ascii	"compare\000"
 3387      61726500 
 3388              	.LASF28:
 3389 0308 50574D5F 		.ascii	"PWM_SetOneShot\000"
 3389      5365744F 
 3389      6E655368 
 3389      6F7400
 3390              	.LASF52:
 3391 0317 50574D5F 		.ascii	"PWM_ReadPeriodBuf\000"
 3391      52656164 
 3391      50657269 
 3391      6F644275 
 3391      6600
 3392              	.LASF11:
 3393 0329 666C6F61 		.ascii	"float\000"
 3393      7400
 3394              	.LASF27:
 3395 032f 70726573 		.ascii	"prescaler\000"
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 88


 3395      63616C65 
 3395      7200
 3396              	.LASF60:
 3397 0339 50574D5F 		.ascii	"PWM_ReadCapture\000"
 3397      52656164 
 3397      43617074 
 3397      75726500 
 3398              	.LASF53:
 3399 0349 50574D5F 		.ascii	"PWM_SetPeriodSwap\000"
 3399      53657450 
 3399      6572696F 
 3399      64537761 
 3399      7000
 3400              	.LASF79:
 3401 035b 433A5C55 		.ascii	"C:\\Users\\jon\\Documents\\PSoC Creator\\servo_test"
 3401      73657273 
 3401      5C6A6F6E 
 3401      5C446F63 
 3401      756D656E 
 3402 0389 65725C53 		.ascii	"er\\ServoTester.cydsn\000"
 3402      6572766F 
 3402      54657374 
 3402      65722E63 
 3402      7964736E 
 3403              	.LASF17:
 3404 039e 50574D5F 		.ascii	"PWM_Init\000"
 3404      496E6974 
 3404      00
 3405              	.LASF35:
 3406 03a7 73746F70 		.ascii	"stopOnKillEnable\000"
 3406      4F6E4B69 
 3406      6C6C456E 
 3406      61626C65 
 3406      00
 3407              	.LASF30:
 3408 03b8 50574D5F 		.ascii	"PWM_SetPWMMode\000"
 3408      53657450 
 3408      574D4D6F 
 3408      646500
 3409              	.LASF2:
 3410 03c7 73686F72 		.ascii	"short int\000"
 3410      7420696E 
 3410      7400
 3411              	.LASF73:
 3412 03d1 50574D5F 		.ascii	"PWM_GetInterruptSourceMasked\000"
 3412      47657449 
 3412      6E746572 
 3412      72757074 
 3412      536F7572 
 3413              	.LASF72:
 3414 03ee 696E7465 		.ascii	"interruptMask\000"
 3414      72727570 
 3414      744D6173 
 3414      6B00
 3415              	.LASF50:
 3416 03fc 50574D5F 		.ascii	"PWM_WritePeriodBuf\000"
 3416      57726974 
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 89


 3416      65506572 
 3416      696F6442 
 3416      756600
 3417              	.LASF23:
 3418 040f 50574D5F 		.ascii	"PWM_SetQDMode\000"
 3418      53657451 
 3418      444D6F64 
 3418      6500
 3419              	.LASF13:
 3420 041d 63686172 		.ascii	"char\000"
 3420      00
 3421              	.LASF24:
 3422 0422 6D6F6465 		.ascii	"mode\000"
 3422      00
 3423              	.LASF76:
 3424 0427 50574D5F 		.ascii	"PWM_SetInterrupt\000"
 3424      53657449 
 3424      6E746572 
 3424      72757074 
 3424      00
 3425              	.LASF64:
 3426 0438 50574D5F 		.ascii	"PWM_SetReloadMode\000"
 3426      53657452 
 3426      656C6F61 
 3426      644D6F64 
 3426      6500
 3427              	.LASF43:
 3428 044a 636F756E 		.ascii	"counterMode\000"
 3428      7465724D 
 3428      6F646500 
 3429              	.LASF1:
 3430 0456 756E7369 		.ascii	"unsigned char\000"
 3430      676E6564 
 3430      20636861 
 3430      7200
 3431              	.LASF58:
 3432 0464 636F6D70 		.ascii	"compareBuf\000"
 3432      61726542 
 3432      756600
 3433              	.LASF51:
 3434 046f 70657269 		.ascii	"periodBuf\000"
 3434      6F644275 
 3434      6600
 3435              	.LASF61:
 3436 0479 50574D5F 		.ascii	"PWM_ReadCaptureBuf\000"
 3436      52656164 
 3436      43617074 
 3436      75726542 
 3436      756600
 3437              	.LASF21:
 3438 048c 656E6162 		.ascii	"enableInterrupts\000"
 3438      6C65496E 
 3438      74657272 
 3438      75707473 
 3438      00
 3439              	.LASF67:
 3440 049d 50574D5F 		.ascii	"PWM_SetCountMode\000"
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6kZwGT.s 			page 90


 3440      53657443 
 3440      6F756E74 
 3440      4D6F6465 
 3440      00
 3441              	.LASF29:
 3442 04ae 6F6E6553 		.ascii	"oneShotEnable\000"
 3442      686F7445 
 3442      6E61626C 
 3442      6500
 3443              	.LASF22:
 3444 04bc 50574D5F 		.ascii	"PWM_SetMode\000"
 3444      5365744D 
 3444      6F646500 
 3445              	.LASF34:
 3446 04c8 50574D5F 		.ascii	"PWM_SetPWMStopOnKill\000"
 3446      53657450 
 3446      574D5374 
 3446      6F704F6E 
 3446      4B696C6C 
 3447              	.LASF33:
 3448 04dd 73796E63 		.ascii	"syncKillEnable\000"
 3448      4B696C6C 
 3448      456E6162 
 3448      6C6500
 3449              	.LASF49:
 3450 04ec 73776170 		.ascii	"swapEnable\000"
 3450      456E6162 
 3450      6C6500
 3451              	.LASF74:
 3452 04f7 50574D5F 		.ascii	"PWM_GetInterruptSource\000"
 3452      47657449 
 3452      6E746572 
 3452      72757074 
 3452      536F7572 
 3453              	.LASF42:
 3454 050e 50574D5F 		.ascii	"PWM_SetCounterMode\000"
 3454      53657443 
 3454      6F756E74 
 3454      65724D6F 
 3454      646500
 3455              	.LASF56:
 3456 0521 50574D5F 		.ascii	"PWM_ReadCompare\000"
 3456      52656164 
 3456      436F6D70 
 3456      61726500 
 3457              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
