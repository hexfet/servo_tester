ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_CSHL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	CapSense_rawFilterData1,10,4
  20              		.comm	CapSense_rawFilterData2,10,4
  21              		.global	CapSense_sensorBaseline
  22              		.bss
  23              		.align	2
  24              		.type	CapSense_sensorBaseline, %object
  25              		.size	CapSense_sensorBaseline, 10
  26              	CapSense_sensorBaseline:
  27 0000 00000000 		.space	10
  27      00000000 
  27      0000
  28              		.global	CapSense_sensorBaselineLow
  29 000a 0000     		.align	2
  30              		.type	CapSense_sensorBaselineLow, %object
  31              		.size	CapSense_sensorBaselineLow, 5
  32              	CapSense_sensorBaselineLow:
  33 000c 00000000 		.space	5
  33      00
  34              		.global	CapSense_sensorSignal
  35 0011 000000   		.align	2
  36              		.type	CapSense_sensorSignal, %object
  37              		.size	CapSense_sensorSignal, 5
  38              	CapSense_sensorSignal:
  39 0014 00000000 		.space	5
  39      00
  40              		.global	CapSense_sensorOnMask
  41 0019 000000   		.align	2
  42              		.type	CapSense_sensorOnMask, %object
  43              		.size	CapSense_sensorOnMask, 1
  44              	CapSense_sensorOnMask:
  45 001c 00       		.space	1
  46              		.comm	CapSense_lowBaselineResetCnt,5,4
  47              		.global	CapSense_lowBaselineReset
  48              		.data
  49              		.align	2
  50              		.type	CapSense_lowBaselineReset, %object
  51              		.size	CapSense_lowBaselineReset, 5
  52              	CapSense_lowBaselineReset:
  53 0000 1E       		.byte	30
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 2


  54 0001 1E       		.byte	30
  55 0002 1E       		.byte	30
  56 0003 1E       		.byte	30
  57 0004 1E       		.byte	30
  58              		.global	CapSense_enableRawFilters
  59              		.type	CapSense_enableRawFilters, %object
  60              		.size	CapSense_enableRawFilters, 1
  61              	CapSense_enableRawFilters:
  62 0005 01       		.byte	1
  63              		.comm	CapSense_fingerThreshold,1,4
  64              		.comm	CapSense_noiseThreshold,1,4
  65              		.comm	CapSense_negativeNoiseThreshold,1,4
  66              		.comm	CapSense_hysteresis,1,4
  67              		.global	CapSense_debounce
  68 0006 0000     		.align	2
  69              		.type	CapSense_debounce, %object
  70              		.size	CapSense_debounce, 1
  71              	CapSense_debounce:
  72 0008 01       		.byte	1
  73              		.global	CapSense_rawDataIndex
  74              		.section	.rodata
  75              		.align	2
  76              		.type	CapSense_rawDataIndex, %object
  77              		.size	CapSense_rawDataIndex, 1
  78              	CapSense_rawDataIndex:
  79 0000 00       		.space	1
  80              		.global	CapSense_numberOfSensors
  81 0001 000000   		.align	2
  82              		.type	CapSense_numberOfSensors, %object
  83              		.size	CapSense_numberOfSensors, 1
  84              	CapSense_numberOfSensors:
  85 0004 05       		.byte	5
  86 0005 000000   		.align	2
  87              		.type	CapSense_centroidMult, %object
  88              		.size	CapSense_centroidMult, 2
  89              	CapSense_centroidMult:
  90 0008 C03F     		.short	16320
  91              		.section	.text.CapSense_BaseInit,"ax",%progbits
  92              		.align	2
  93              		.global	CapSense_BaseInit
  94              		.code	16
  95              		.thumb_func
  96              		.type	CapSense_BaseInit, %function
  97              	CapSense_BaseInit:
  98              	.LFB32:
  99              		.file 1 "Generated_Source\\PSoC4\\CapSense_CSHL.c"
   1:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:Generated_Source\PSoC4/CapSense_CSHL.c **** * Version 2.60
   4:Generated_Source\PSoC4/CapSense_CSHL.c **** *
   5:Generated_Source\PSoC4/CapSense_CSHL.c **** * Description:
   6:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CSD component.
   8:Generated_Source\PSoC4/CapSense_CSHL.c **** *
   9:Generated_Source\PSoC4/CapSense_CSHL.c **** * Note:
  10:Generated_Source\PSoC4/CapSense_CSHL.c **** *
  11:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 3


  12:Generated_Source\PSoC4/CapSense_CSHL.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  18:Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_PVT.h"
  20:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  21:Generated_Source\PSoC4/CapSense_CSHL.c **** /* SmartSense functions */
  22:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  23:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern void CapSense_UpdateThresholds(uint32 sensor);
  24:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  25:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  26:Generated_Source\PSoC4/CapSense_CSHL.c **** /* Storage of filters data */
  27:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
  28:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) )
  29:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  30:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  31:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  32:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  33:Generated_Source\PSoC4/CapSense_CSHL.c **** #elif ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER))   || \
  34:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER))   || \
  35:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
  36:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))   || \
  37:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)) )
  38:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  39:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  40:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  41:Generated_Source\PSoC4/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  42:Generated_Source\PSoC4/CapSense_CSHL.c ****         */
  43:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  44:Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT];
  45:Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint8 CapSense_sensorEnableMask[CapSense_TOTAL_SENSOR_MASK];
  46:Generated_Source\PSoC4/CapSense_CSHL.c **** extern const uint8 CapSense_widgetNumber[CapSense_TOTAL_SENSOR_COUNT];
  47:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  48:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
  49:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern uint32 CapSense_widgetResolution[CapSense_RESOLUTIONS_TBL_SIZE];
  50:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
  51:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  52:Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  53:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  54:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  55:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[CapSense_TOTAL_SENSOR_MASK] = {0u};
  56:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  57:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  58:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineReset[CapSense_TOTAL_SENSOR_COUNT] = {
  59:Generated_Source\PSoC4/CapSense_CSHL.c ****     30u, 30u, 30u, 30u, 30u, 
  60:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  61:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  62:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  63:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  64:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  65:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern CapSense_CONFIG_TYPE_P4_v2_60 CapSense_config;
  66:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  67:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  68:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 4


  69:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
  70:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
  71:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  72:Generated_Source\PSoC4/CapSense_CSHL.c **** /* Generated by Customizer */
  73:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_fingerThreshold[CapSense_THRESHOLD_TBL_SIZE];
  74:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  75:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_noiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  76:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  77:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_negativeNoiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  78:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  79:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_hysteresis[CapSense_WIDGET_PARAM_TBL_SIZE];
  80:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  81:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_debounce[] = {
  82:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, 
  83:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  84:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  85:Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_rawDataIndex[] = {
  86:Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, /* LinearSlider0__LS */
  87:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  88:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  89:Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_numberOfSensors[] = {
  90:Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, /* LinearSlider0__LS */
  91:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  92:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  93:Generated_Source\PSoC4/CapSense_CSHL.c **** static const uint16 CapSense_centroidMult[] = {
  94:Generated_Source\PSoC4/CapSense_CSHL.c ****     16320u, 
  95:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  96:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  97:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  98:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  99:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 100:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 101:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
 102:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 103:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 104:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 105:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 106:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value.
 107:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and
 108:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
 109:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and
 110:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an
 111:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 112:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 113:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 114:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 115:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 116:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 117:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 118:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 119:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 120:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store the baseline value.
 121:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store the fraction byte of
 122:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the baseline value.
 123:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store a difference between
 124:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 125:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store a previous sample of
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 5


 126:Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 127:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before a previous sample
 128:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 129:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 130:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 131:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 132:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 133:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 134:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_BaseInit(uint32 sensor)
 135:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 100              		.loc 1 135 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 8
 103              		@ frame_needed = 1, uses_anonymous_args = 0
 104 0000 80B5     		push	{r7, lr}
 105              		.cfi_def_cfa_offset 8
 106              		.cfi_offset 7, -8
 107              		.cfi_offset 14, -4
 108 0002 82B0     		sub	sp, sp, #8
 109              		.cfi_def_cfa_offset 16
 110 0004 00AF     		add	r7, sp, #0
 111              		.cfi_def_cfa_register 7
 112 0006 7860     		str	r0, [r7, #4]
 136:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 137:Generated_Source\PSoC4/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 138:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
 139:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 140:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 141:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 142:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 debounceIndex;
 143:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 144:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 145:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 146:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 147:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 148:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 149:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 150:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 151:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline */
 152:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
 113              		.loc 1 152 0
 114 0008 124B     		ldr	r3, .L2
 115 000a 7A68     		ldr	r2, [r7, #4]
 116 000c 5200     		lsls	r2, r2, #1
 117 000e D15A     		ldrh	r1, [r2, r3]
 118 0010 114B     		ldr	r3, .L2+4
 119 0012 7A68     		ldr	r2, [r7, #4]
 120 0014 5200     		lsls	r2, r2, #1
 121 0016 D152     		strh	r1, [r2, r3]
 153:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
 122              		.loc 1 153 0
 123 0018 104A     		ldr	r2, .L2+8
 124 001a 7B68     		ldr	r3, [r7, #4]
 125 001c D318     		adds	r3, r2, r3
 126 001e 0022     		movs	r2, #0
 127 0020 1A70     		strb	r2, [r3]
 154:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 6


 128              		.loc 1 154 0
 129 0022 0F4A     		ldr	r2, .L2+12
 130 0024 7B68     		ldr	r3, [r7, #4]
 131 0026 D318     		adds	r3, r2, r3
 132 0028 0022     		movs	r2, #0
 133 002a 1A70     		strb	r2, [r3]
 155:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 156:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 157:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 158:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) ||\
 159:Generated_Source\PSoC4/CapSense_CSHL.c ****          (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)))
 160:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 161:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 134              		.loc 1 161 0
 135 002c 094B     		ldr	r3, .L2
 136 002e 7A68     		ldr	r2, [r7, #4]
 137 0030 5200     		lsls	r2, r2, #1
 138 0032 D15A     		ldrh	r1, [r2, r3]
 139 0034 0B4B     		ldr	r3, .L2+16
 140 0036 7A68     		ldr	r2, [r7, #4]
 141 0038 5200     		lsls	r2, r2, #1
 142 003a D152     		strh	r1, [r2, r3]
 162:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 143              		.loc 1 162 0
 144 003c 054B     		ldr	r3, .L2
 145 003e 7A68     		ldr	r2, [r7, #4]
 146 0040 5200     		lsls	r2, r2, #1
 147 0042 D15A     		ldrh	r1, [r2, r3]
 148 0044 084B     		ldr	r3, .L2+20
 149 0046 7A68     		ldr	r2, [r7, #4]
 150 0048 5200     		lsls	r2, r2, #1
 151 004a D152     		strh	r1, [r2, r3]
 163:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 164:Generated_Source\PSoC4/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) ||\
 165:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) ||\
 166:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) ||\
 167:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) ||\
 168:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 169:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 170:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 171:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 172:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 173:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* No Raw filters */
 174:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
 175:Generated_Source\PSoC4/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 176:Generated_Source\PSoC4/CapSense_CSHL.c ****             */
 177:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 178:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 179:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 180:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 181:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 182:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 152              		.loc 1 182 0
 153 004c C046     		nop
 154 004e BD46     		mov	sp, r7
 155 0050 02B0     		add	sp, sp, #8
 156              		@ sp needed
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 7


 157 0052 80BD     		pop	{r7, pc}
 158              	.L3:
 159              		.align	2
 160              	.L2:
 161 0054 00000000 		.word	CapSense_sensorRaw
 162 0058 00000000 		.word	CapSense_sensorBaseline
 163 005c 00000000 		.word	CapSense_sensorBaselineLow
 164 0060 00000000 		.word	CapSense_sensorSignal
 165 0064 00000000 		.word	CapSense_rawFilterData1
 166 0068 00000000 		.word	CapSense_rawFilterData2
 167              		.cfi_endproc
 168              	.LFE32:
 169              		.size	CapSense_BaseInit, .-CapSense_BaseInit
 170              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
 171              		.align	2
 172              		.global	CapSense_InitializeSensorBaseline
 173              		.code	16
 174              		.thumb_func
 175              		.type	CapSense_InitializeSensorBaseline, %function
 176              	CapSense_InitializeSensorBaseline:
 177              	.LFB33:
 183:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 184:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 185:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 186:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 187:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 188:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 189:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 190:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 191:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair
 192:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the
 193:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if
 194:Generated_Source\PSoC4/CapSense_CSHL.c **** *  enabled.
 195:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 196:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 197:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 198:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 199:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 200:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 201:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 202:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 203:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 204:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 205:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 206:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 207:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 208:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 209:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint32 sensor)
 210:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 178              		.loc 1 210 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 8
 181              		@ frame_needed = 1, uses_anonymous_args = 0
 182 0000 80B5     		push	{r7, lr}
 183              		.cfi_def_cfa_offset 8
 184              		.cfi_offset 7, -8
 185              		.cfi_offset 14, -4
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 8


 186 0002 82B0     		sub	sp, sp, #8
 187              		.cfi_def_cfa_offset 16
 188 0004 00AF     		add	r7, sp, #0
 189              		.cfi_def_cfa_register 7
 190 0006 7860     		str	r0, [r7, #4]
 211:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Scan sensor */
 212:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
 191              		.loc 1 212 0
 192 0008 7B68     		ldr	r3, [r7, #4]
 193 000a 1800     		movs	r0, r3
 194 000c FFF7FEFF 		bl	CapSense_ScanSensor
 213:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 195              		.loc 1 213 0
 196 0010 C046     		nop
 197              	.L5:
 198              		.loc 1 213 0 is_stmt 0 discriminator 1
 199 0012 FFF7FEFF 		bl	CapSense_IsBusy
 200 0016 031E     		subs	r3, r0, #0
 201 0018 FBD1     		bne	.L5
 214:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 215:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 216:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 217:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 218:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */
 219:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_BaseInit(sensor);
 202              		.loc 1 219 0 is_stmt 1
 203 001a 7B68     		ldr	r3, [r7, #4]
 204 001c 1800     		movs	r0, r3
 205 001e FFF7FEFF 		bl	CapSense_BaseInit
 220:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 206              		.loc 1 220 0
 207 0022 C046     		nop
 208 0024 BD46     		mov	sp, r7
 209 0026 02B0     		add	sp, sp, #8
 210              		@ sp needed
 211 0028 80BD     		pop	{r7, pc}
 212              		.cfi_endproc
 213              	.LFE33:
 214              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 215 002a C046     		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 216              		.align	2
 217              		.global	CapSense_InitializeAllBaselines
 218              		.code	16
 219              		.thumb_func
 220              		.type	CapSense_InitializeAllBaselines, %function
 221              	CapSense_InitializeAllBaselines:
 222              	.LFB34:
 221:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 222:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 223:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 224:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 225:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 226:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 227:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 228:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to load the
 229:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning
 230:Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 9


 231:Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 232:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 233:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 234:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 235:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 236:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 237:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 238:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 239:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 240:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 241:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 242:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 243:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 244:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 245:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 246:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 247:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 223              		.loc 1 247 0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 8
 226              		@ frame_needed = 1, uses_anonymous_args = 0
 227 0000 80B5     		push	{r7, lr}
 228              		.cfi_def_cfa_offset 8
 229              		.cfi_offset 7, -8
 230              		.cfi_offset 14, -4
 231 0002 82B0     		sub	sp, sp, #8
 232              		.cfi_def_cfa_offset 16
 233 0004 00AF     		add	r7, sp, #0
 234              		.cfi_def_cfa_register 7
 248:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 249:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 250:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 235              		.loc 1 250 0
 236 0006 0023     		movs	r3, #0
 237 0008 7B60     		str	r3, [r7, #4]
 238 000a 06E0     		b	.L7
 239              	.L8:
 251:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 252:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_InitializeSensorBaseline(i);
 240              		.loc 1 252 0 discriminator 3
 241 000c 7B68     		ldr	r3, [r7, #4]
 242 000e 1800     		movs	r0, r3
 243 0010 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 250:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 244              		.loc 1 250 0 discriminator 3
 245 0014 7B68     		ldr	r3, [r7, #4]
 246 0016 0133     		adds	r3, r3, #1
 247 0018 7B60     		str	r3, [r7, #4]
 248              	.L7:
 250:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 249              		.loc 1 250 0 is_stmt 0 discriminator 1
 250 001a 7B68     		ldr	r3, [r7, #4]
 251 001c 042B     		cmp	r3, #4
 252 001e F5D9     		bls	.L8
 253:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 254:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 253              		.loc 1 254 0 is_stmt 1
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 10


 254 0020 C046     		nop
 255 0022 BD46     		mov	sp, r7
 256 0024 02B0     		add	sp, sp, #8
 257              		@ sp needed
 258 0026 80BD     		pop	{r7, pc}
 259              		.cfi_endproc
 260              	.LFE34:
 261              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 262              		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 263              		.align	2
 264              		.global	CapSense_InitializeEnabledBaselines
 265              		.code	16
 266              		.thumb_func
 267              		.type	CapSense_InitializeEnabledBaselines, %function
 268              	CapSense_InitializeEnabledBaselines:
 269              	.LFB35:
 255:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 256:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 257:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 258:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 259:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 260:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 261:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 262:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the
 263:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines
 264:Generated_Source\PSoC4/CapSense_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process.
 265:Generated_Source\PSoC4/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 266:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 267:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 268:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 269:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 270:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 271:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 272:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 273:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 274:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorRaw[] - used to store the sensors raw data.
 275:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 276:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 277:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 278:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 279:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 280:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 281:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 282:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 270              		.loc 1 282 0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 8
 273              		@ frame_needed = 1, uses_anonymous_args = 0
 274 0000 80B5     		push	{r7, lr}
 275              		.cfi_def_cfa_offset 8
 276              		.cfi_offset 7, -8
 277              		.cfi_offset 14, -4
 278 0002 82B0     		sub	sp, sp, #8
 279              		.cfi_def_cfa_offset 16
 280 0004 00AF     		add	r7, sp, #0
 281              		.cfi_def_cfa_register 7
 283:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 11


 284:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 285:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 286:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 282              		.loc 1 286 0
 283 0006 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 287:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 284              		.loc 1 287 0
 285 000a C046     		nop
 286              	.L10:
 287              		.loc 1 287 0 is_stmt 0 discriminator 1
 288 000c FFF7FEFF 		bl	CapSense_IsBusy
 289 0010 031E     		subs	r3, r0, #0
 290 0012 FBD1     		bne	.L10
 288:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 289:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 290:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 291:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 292:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 291              		.loc 1 292 0 is_stmt 1
 292 0014 0023     		movs	r3, #0
 293 0016 7B60     		str	r3, [r7, #4]
 294 0018 11E0     		b	.L11
 295              	.L13:
 293:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 294:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 296              		.loc 1 294 0
 297 001a 7A68     		ldr	r2, [r7, #4]
 298 001c 0B4B     		ldr	r3, .L14
 299 001e 1100     		movs	r1, r2
 300 0020 1800     		movs	r0, r3
 301 0022 FFF7FEFF 		bl	CapSense_GetBitValue
 302 0026 0300     		movs	r3, r0
 303 0028 3B60     		str	r3, [r7]
 295:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 296:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 297:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(isSensorEnabled != 0u)
 304              		.loc 1 297 0
 305 002a 3B68     		ldr	r3, [r7]
 306 002c 002B     		cmp	r3, #0
 307 002e 03D0     		beq	.L12
 298:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 299:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Initialize baselines */
 300:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(i);
 308              		.loc 1 300 0
 309 0030 7B68     		ldr	r3, [r7, #4]
 310 0032 1800     		movs	r0, r3
 311 0034 FFF7FEFF 		bl	CapSense_BaseInit
 312              	.L12:
 292:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 313              		.loc 1 292 0 discriminator 2
 314 0038 7B68     		ldr	r3, [r7, #4]
 315 003a 0133     		adds	r3, r3, #1
 316 003c 7B60     		str	r3, [r7, #4]
 317              	.L11:
 292:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 318              		.loc 1 292 0 is_stmt 0 discriminator 1
 319 003e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 12


 320 0040 042B     		cmp	r3, #4
 321 0042 EAD9     		bls	.L13
 301:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 302:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 303:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 322              		.loc 1 303 0 is_stmt 1
 323 0044 C046     		nop
 324 0046 BD46     		mov	sp, r7
 325 0048 02B0     		add	sp, sp, #8
 326              		@ sp needed
 327 004a 80BD     		pop	{r7, pc}
 328              	.L15:
 329              		.align	2
 330              	.L14:
 331 004c 00000000 		.word	CapSense_sensorEnableMask
 332              		.cfi_endproc
 333              	.LFE35:
 334              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 335              		.section	.text.CapSense_UpdateBaselineNoThreshold,"ax",%progbits
 336              		.align	2
 337              		.global	CapSense_UpdateBaselineNoThreshold
 338              		.code	16
 339              		.thumb_func
 340              		.type	CapSense_UpdateBaselineNoThreshold, %function
 341              	CapSense_UpdateBaselineNoThreshold:
 342              	.LFB36:
 304:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 305:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 306:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 307:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateBaselineNoThreshold
 308:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 309:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 310:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 311:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 312:Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 313:Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 314:Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 315:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 316:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded
 317:Generated_Source\PSoC4/CapSense_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less
 318:Generated_Source\PSoC4/CapSense_CSHL.c **** *  than noise threshold.
 319:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 320:Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 321:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 322:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 323:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 324:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 325:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 326:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 327:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 328:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 329:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 330:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 331:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 332:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 333:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of
 334:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline value.
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 13


 335:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store difference between
 336:Generated_Source\PSoC4/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 337:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of
 338:Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 339:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 340:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 341:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 342:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 343:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 344:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 345:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 346:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateBaselineNoThreshold(uint32 sensor)
 347:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 343              		.loc 1 347 0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 24
 346              		@ frame_needed = 1, uses_anonymous_args = 0
 347 0000 90B5     		push	{r4, r7, lr}
 348              		.cfi_def_cfa_offset 12
 349              		.cfi_offset 4, -12
 350              		.cfi_offset 7, -8
 351              		.cfi_offset 14, -4
 352 0002 87B0     		sub	sp, sp, #28
 353              		.cfi_def_cfa_offset 40
 354 0004 00AF     		add	r7, sp, #0
 355              		.cfi_def_cfa_register 7
 356 0006 7860     		str	r0, [r7, #4]
 348:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 349:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sign;
 350:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 tempRaw;
 351:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 filteredRawData;
 352:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 357              		.loc 1 352 0
 358 0008 0F23     		movs	r3, #15
 359 000a FB18     		adds	r3, r7, r3
 360 000c 8649     		ldr	r1, .L29
 361 000e 7A68     		ldr	r2, [r7, #4]
 362 0010 8A18     		adds	r2, r1, r2
 363 0012 1278     		ldrb	r2, [r2]
 364 0014 1A70     		strb	r2, [r3]
 353:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold;
 354:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 355:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 356:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 357:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 358:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 359:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 360:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 361:Generated_Source\PSoC4/CapSense_CSHL.c ****     noiseThreshold = CapSense_noiseThreshold[widget];
 365              		.loc 1 361 0
 366 0016 0F23     		movs	r3, #15
 367 0018 FB18     		adds	r3, r7, r3
 368 001a 1A78     		ldrb	r2, [r3]
 369 001c 0E23     		movs	r3, #14
 370 001e FB18     		adds	r3, r7, r3
 371 0020 8249     		ldr	r1, .L29+4
 372 0022 8A5C     		ldrb	r2, [r1, r2]
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 14


 373 0024 1A70     		strb	r2, [r3]
 362:Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 374              		.loc 1 362 0
 375 0026 1023     		movs	r3, #16
 376 0028 FB18     		adds	r3, r7, r3
 377 002a 814A     		ldr	r2, .L29+8
 378 002c 7968     		ldr	r1, [r7, #4]
 379 002e 4900     		lsls	r1, r1, #1
 380 0030 8A5A     		ldrh	r2, [r1, r2]
 381 0032 1A80     		strh	r2, [r3]
 363:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 364:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_RAW_FILTER_MASK != 0u)
 365:Generated_Source\PSoC4/CapSense_CSHL.c ****     if(CapSense_enableRawFilters != 0u)
 382              		.loc 1 365 0
 383 0034 7F4B     		ldr	r3, .L29+12
 384 0036 1B78     		ldrb	r3, [r3]
 385 0038 002B     		cmp	r3, #0
 386 003a 26D0     		beq	.L17
 366:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 367:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 368:Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 369:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor
 370:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                             CapSense_rawFilterData2[sensor]);
 371:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 372:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 373:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 374:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 375:Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 387              		.loc 1 375 0
 388 003c 1223     		movs	r3, #18
 389 003e FB18     		adds	r3, r7, r3
 390 0040 1022     		movs	r2, #16
 391 0042 BA18     		adds	r2, r7, r2
 392 0044 1288     		ldrh	r2, [r2]
 393 0046 1A80     		strh	r2, [r3]
 376:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sen
 394              		.loc 1 376 0
 395 0048 7B4B     		ldr	r3, .L29+16
 396 004a 7A68     		ldr	r2, [r7, #4]
 397 004c 5200     		lsls	r2, r2, #1
 398 004e D15A     		ldrh	r1, [r2, r3]
 399 0050 7A4B     		ldr	r3, .L29+20
 400 0052 7A68     		ldr	r2, [r7, #4]
 401 0054 5200     		lsls	r2, r2, #1
 402 0056 D25A     		ldrh	r2, [r2, r3]
 403 0058 1023     		movs	r3, #16
 404 005a FC18     		adds	r4, r7, r3
 405 005c 1023     		movs	r3, #16
 406 005e FB18     		adds	r3, r7, r3
 407 0060 1B88     		ldrh	r3, [r3]
 408 0062 1800     		movs	r0, r3
 409 0064 FFF7FEFF 		bl	CapSense_AveragingFilter
 410 0068 0300     		movs	r3, r0
 411 006a 2380     		strh	r3, [r4]
 377:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                CapSense_rawFilterData2[sensor]);
 378:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 412              		.loc 1 378 0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 15


 413 006c 724B     		ldr	r3, .L29+16
 414 006e 7A68     		ldr	r2, [r7, #4]
 415 0070 5200     		lsls	r2, r2, #1
 416 0072 D15A     		ldrh	r1, [r2, r3]
 417 0074 714B     		ldr	r3, .L29+20
 418 0076 7A68     		ldr	r2, [r7, #4]
 419 0078 5200     		lsls	r2, r2, #1
 420 007a D152     		strh	r1, [r2, r3]
 379:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 421              		.loc 1 379 0
 422 007c 6E4B     		ldr	r3, .L29+16
 423 007e 7A68     		ldr	r2, [r7, #4]
 424 0080 5200     		lsls	r2, r2, #1
 425 0082 1221     		movs	r1, #18
 426 0084 7918     		adds	r1, r7, r1
 427 0086 0988     		ldrh	r1, [r1]
 428 0088 D152     		strh	r1, [r2, r3]
 429              	.L17:
 380:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 381:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 382:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 383:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 384:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 385:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 386:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 387:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 388:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 389:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 390:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor
 391:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 392:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 393:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 394:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 395:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 396:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 397:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 398:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]
 399:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 400:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 401:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 402:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No Raw filters */
 403:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 404:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 405:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
 406:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 407:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 408:Generated_Source\PSoC4/CapSense_CSHL.c ****         MeasureNoiseEnvelope_P4_v2_60(&CapSense_config, (uint8)sensor, CapSense_sensorRaw);
 430              		.loc 1 408 0
 431 008a 7B68     		ldr	r3, [r7, #4]
 432 008c D9B2     		uxtb	r1, r3
 433 008e 684A     		ldr	r2, .L29+8
 434 0090 6B4B     		ldr	r3, .L29+24
 435 0092 1800     		movs	r0, r3
 436 0094 FFF7FEFF 		bl	MeasureNoiseEnvelope_P4_v2_60
 409:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 410:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 411:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Baseline calculation */
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 16


 412:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 413:Generated_Source\PSoC4/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 437              		.loc 1 413 0
 438 0098 6A4B     		ldr	r3, .L29+28
 439 009a 7A68     		ldr	r2, [r7, #4]
 440 009c 5200     		lsls	r2, r2, #1
 441 009e D35A     		ldrh	r3, [r2, r3]
 442 00a0 1022     		movs	r2, #16
 443 00a2 BA18     		adds	r2, r7, r2
 444 00a4 1288     		ldrh	r2, [r2]
 445 00a6 9A42     		cmp	r2, r3
 446 00a8 12D3     		bcc	.L18
 414:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 415:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineResetCnt[sensor] = 0u;
 447              		.loc 1 415 0
 448 00aa 674A     		ldr	r2, .L29+32
 449 00ac 7B68     		ldr	r3, [r7, #4]
 450 00ae D318     		adds	r3, r2, r3
 451 00b0 0022     		movs	r2, #0
 452 00b2 1A70     		strb	r2, [r3]
 416:Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 453              		.loc 1 416 0
 454 00b4 634B     		ldr	r3, .L29+28
 455 00b6 7A68     		ldr	r2, [r7, #4]
 456 00b8 5200     		lsls	r2, r2, #1
 457 00ba D25A     		ldrh	r2, [r2, r3]
 458 00bc 1223     		movs	r3, #18
 459 00be FB18     		adds	r3, r7, r3
 460 00c0 1021     		movs	r1, #16
 461 00c2 7918     		adds	r1, r7, r1
 462 00c4 0988     		ldrh	r1, [r1]
 463 00c6 8A1A     		subs	r2, r1, r2
 464 00c8 1A80     		strh	r2, [r3]
 417:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 465              		.loc 1 417 0
 466 00ca 0123     		movs	r3, #1
 467 00cc 7B61     		str	r3, [r7, #20]
 468 00ce 0CE0     		b	.L19
 469              	.L18:
 418:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 419:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 420:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 421:Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 470              		.loc 1 421 0
 471 00d0 5C4B     		ldr	r3, .L29+28
 472 00d2 7A68     		ldr	r2, [r7, #4]
 473 00d4 5200     		lsls	r2, r2, #1
 474 00d6 D15A     		ldrh	r1, [r2, r3]
 475 00d8 1223     		movs	r3, #18
 476 00da FB18     		adds	r3, r7, r3
 477 00dc 1022     		movs	r2, #16
 478 00de BA18     		adds	r2, r7, r2
 479 00e0 1288     		ldrh	r2, [r2]
 480 00e2 8A1A     		subs	r2, r1, r2
 481 00e4 1A80     		strh	r2, [r3]
 422:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 482              		.loc 1 422 0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 17


 483 00e6 0023     		movs	r3, #0
 484 00e8 7B61     		str	r3, [r7, #20]
 485              	.L19:
 423:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 424:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 425:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 426:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 486              		.loc 1 426 0
 487 00ea 7B69     		ldr	r3, [r7, #20]
 488 00ec 002B     		cmp	r3, #0
 489 00ee 2AD1     		bne	.L20
 490              		.loc 1 426 0 is_stmt 0 discriminator 1
 491 00f0 0F23     		movs	r3, #15
 492 00f2 FB18     		adds	r3, r7, r3
 493 00f4 1B78     		ldrb	r3, [r3]
 494 00f6 554A     		ldr	r2, .L29+36
 495 00f8 D35C     		ldrb	r3, [r2, r3]
 496 00fa 9BB2     		uxth	r3, r3
 497 00fc 1222     		movs	r2, #18
 498 00fe BA18     		adds	r2, r7, r2
 499 0100 1288     		ldrh	r2, [r2]
 500 0102 9A42     		cmp	r2, r3
 501 0104 1FD9     		bls	.L20
 427:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 428:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 429:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 430:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 431:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 502              		.loc 1 431 0 is_stmt 1
 503 0106 504A     		ldr	r2, .L29+32
 504 0108 7B68     		ldr	r3, [r7, #4]
 505 010a D318     		adds	r3, r2, r3
 506 010c 1A78     		ldrb	r2, [r3]
 507 010e 5049     		ldr	r1, .L29+40
 508 0110 7B68     		ldr	r3, [r7, #4]
 509 0112 CB18     		adds	r3, r1, r3
 510 0114 1B78     		ldrb	r3, [r3]
 511 0116 9A42     		cmp	r2, r3
 512 0118 09D3     		bcc	.L21
 432:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 433:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 513              		.loc 1 433 0
 514 011a 7B68     		ldr	r3, [r7, #4]
 515 011c 1800     		movs	r0, r3
 516 011e FFF7FEFF 		bl	CapSense_BaseInit
 434:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 517              		.loc 1 434 0
 518 0122 494A     		ldr	r2, .L29+32
 519 0124 7B68     		ldr	r3, [r7, #4]
 520 0126 D318     		adds	r3, r2, r3
 521 0128 0022     		movs	r2, #0
 522 012a 1A70     		strb	r2, [r3]
 431:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 523              		.loc 1 431 0
 524 012c 51E0     		b	.L23
 525              	.L21:
 435:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 18


 436:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
 437:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 438:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 526              		.loc 1 438 0
 527 012e 464A     		ldr	r2, .L29+32
 528 0130 7B68     		ldr	r3, [r7, #4]
 529 0132 D318     		adds	r3, r2, r3
 530 0134 1B78     		ldrb	r3, [r3]
 531 0136 0133     		adds	r3, r3, #1
 532 0138 D9B2     		uxtb	r1, r3
 533 013a 434A     		ldr	r2, .L29+32
 534 013c 7B68     		ldr	r3, [r7, #4]
 535 013e D318     		adds	r3, r2, r3
 536 0140 0A1C     		adds	r2, r1, #0
 537 0142 1A70     		strb	r2, [r3]
 431:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 538              		.loc 1 431 0
 539 0144 45E0     		b	.L23
 540              	.L20:
 439:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 440:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 441:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 442:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 443:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 444:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 445:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 446:Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 541              		.loc 1 446 0
 542 0146 0E23     		movs	r3, #14
 543 0148 FB18     		adds	r3, r7, r3
 544 014a 1B78     		ldrb	r3, [r3]
 545 014c 9BB2     		uxth	r3, r3
 546 014e 1222     		movs	r2, #18
 547 0150 BA18     		adds	r2, r7, r2
 548 0152 1288     		ldrh	r2, [r2]
 549 0154 9A42     		cmp	r2, r3
 550 0156 0DD9     		bls	.L24
 447:Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 551              		.loc 1 447 0 discriminator 1
 552 0158 0F23     		movs	r3, #15
 553 015a FB18     		adds	r3, r7, r3
 554 015c 1B78     		ldrb	r3, [r3]
 555 015e 3B4A     		ldr	r2, .L29+36
 556 0160 D35C     		ldrb	r3, [r2, r3]
 557 0162 9BB2     		uxth	r3, r3
 446:Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 558              		.loc 1 446 0 discriminator 1
 559 0164 1222     		movs	r2, #18
 560 0166 BA18     		adds	r2, r7, r2
 561 0168 1288     		ldrh	r2, [r2]
 562 016a 9A42     		cmp	r2, r3
 563 016c 31D2     		bcs	.L23
 448:Generated_Source\PSoC4/CapSense_CSHL.c ****                && (sign == 0u)))
 564              		.loc 1 448 0
 565 016e 7B69     		ldr	r3, [r7, #20]
 566 0170 002B     		cmp	r3, #0
 567 0172 2ED1     		bne	.L23
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 19


 568              	.L24:
 449:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 450:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 451:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 452:Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 453:Generated_Source\PSoC4/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 454:Generated_Source\PSoC4/CapSense_CSHL.c ****                    && (sign == 0u)))
 455:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 456:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 457:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 458:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 459:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 569              		.loc 1 459 0
 570 0174 334B     		ldr	r3, .L29+28
 571 0176 7A68     		ldr	r2, [r7, #4]
 572 0178 5200     		lsls	r2, r2, #1
 573 017a D35A     		ldrh	r3, [r2, r3]
 574 017c 1B02     		lsls	r3, r3, #8
 575 017e BB60     		str	r3, [r7, #8]
 460:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 576              		.loc 1 460 0
 577 0180 344A     		ldr	r2, .L29+44
 578 0182 7B68     		ldr	r3, [r7, #4]
 579 0184 D318     		adds	r3, r2, r3
 580 0186 1B78     		ldrb	r3, [r3]
 581 0188 1A00     		movs	r2, r3
 582 018a BB68     		ldr	r3, [r7, #8]
 583 018c 1343     		orrs	r3, r2
 584 018e BB60     		str	r3, [r7, #8]
 461:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 462:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 463:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc += filteredRawData;
 585              		.loc 1 463 0
 586 0190 1023     		movs	r3, #16
 587 0192 FB18     		adds	r3, r7, r3
 588 0194 1B88     		ldrh	r3, [r3]
 589 0196 BA68     		ldr	r2, [r7, #8]
 590 0198 D318     		adds	r3, r2, r3
 591 019a BB60     		str	r3, [r7, #8]
 464:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 465:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 466:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 592              		.loc 1 466 0
 593 019c 294B     		ldr	r3, .L29+28
 594 019e 7A68     		ldr	r2, [r7, #4]
 595 01a0 5200     		lsls	r2, r2, #1
 596 01a2 D35A     		ldrh	r3, [r2, r3]
 597 01a4 1A00     		movs	r2, r3
 598 01a6 BB68     		ldr	r3, [r7, #8]
 599 01a8 9B1A     		subs	r3, r3, r2
 600 01aa BB60     		str	r3, [r7, #8]
 467:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 468:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 469:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 601              		.loc 1 469 0
 602 01ac BB68     		ldr	r3, [r7, #8]
 603 01ae 1B0A     		lsrs	r3, r3, #8
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 20


 604 01b0 99B2     		uxth	r1, r3
 605 01b2 244B     		ldr	r3, .L29+28
 606 01b4 7A68     		ldr	r2, [r7, #4]
 607 01b6 5200     		lsls	r2, r2, #1
 608 01b8 D152     		strh	r1, [r2, r3]
 470:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 609              		.loc 1 470 0
 610 01ba BB68     		ldr	r3, [r7, #8]
 611 01bc D9B2     		uxtb	r1, r3
 612 01be 254A     		ldr	r2, .L29+44
 613 01c0 7B68     		ldr	r3, [r7, #4]
 614 01c2 D318     		adds	r3, r2, r3
 615 01c4 0A1C     		adds	r2, r1, #0
 616 01c6 1A70     		strb	r2, [r3]
 471:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 472:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 617              		.loc 1 472 0
 618 01c8 1F4A     		ldr	r2, .L29+32
 619 01ca 7B68     		ldr	r3, [r7, #4]
 620 01cc D318     		adds	r3, r2, r3
 621 01ce 0022     		movs	r2, #0
 622 01d0 1A70     		strb	r2, [r3]
 623              	.L23:
 473:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 474:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 475:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 476:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 477:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 478:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 479:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 624              		.loc 1 479 0
 625 01d2 0E23     		movs	r3, #14
 626 01d4 FB18     		adds	r3, r7, r3
 627 01d6 1B78     		ldrb	r3, [r3]
 628 01d8 9BB2     		uxth	r3, r3
 629 01da 1222     		movs	r2, #18
 630 01dc BA18     		adds	r2, r7, r2
 631 01de 1288     		ldrh	r2, [r2]
 632 01e0 9A42     		cmp	r2, r3
 633 01e2 17D9     		bls	.L25
 634              		.loc 1 479 0 is_stmt 0 discriminator 1
 635 01e4 7B69     		ldr	r3, [r7, #20]
 636 01e6 002B     		cmp	r3, #0
 637 01e8 14D0     		beq	.L25
 480:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 481:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 482:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 483:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 638              		.loc 1 483 0 is_stmt 1
 639 01ea 1223     		movs	r3, #18
 640 01ec FB18     		adds	r3, r7, r3
 641 01ee 1B88     		ldrh	r3, [r3]
 642 01f0 FF2B     		cmp	r3, #255
 643 01f2 05D9     		bls	.L26
 484:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 485:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 644              		.loc 1 485 0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 21


 645 01f4 184A     		ldr	r2, .L29+48
 646 01f6 7B68     		ldr	r3, [r7, #4]
 647 01f8 D318     		adds	r3, r2, r3
 648 01fa FF22     		movs	r2, #255
 649 01fc 1A70     		strb	r2, [r3]
 483:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 650              		.loc 1 483 0
 651 01fe 0EE0     		b	.L28
 652              	.L26:
 486:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 487:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
 488:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 489:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 653              		.loc 1 489 0
 654 0200 1223     		movs	r3, #18
 655 0202 FB18     		adds	r3, r7, r3
 656 0204 1B88     		ldrh	r3, [r3]
 657 0206 D9B2     		uxtb	r1, r3
 658 0208 134A     		ldr	r2, .L29+48
 659 020a 7B68     		ldr	r3, [r7, #4]
 660 020c D318     		adds	r3, r2, r3
 661 020e 0A1C     		adds	r2, r1, #0
 662 0210 1A70     		strb	r2, [r3]
 483:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 663              		.loc 1 483 0
 664 0212 04E0     		b	.L28
 665              	.L25:
 490:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 491:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 492:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 493:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 494:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 495:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 496:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 497:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Signal is zero */
 498:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 666              		.loc 1 498 0
 667 0214 104A     		ldr	r2, .L29+48
 668 0216 7B68     		ldr	r3, [r7, #4]
 669 0218 D318     		adds	r3, r2, r3
 670 021a 0022     		movs	r2, #0
 671 021c 1A70     		strb	r2, [r3]
 672              	.L28:
 499:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 500:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 501:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 502:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 503:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 504:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 505:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 673              		.loc 1 505 0
 674 021e C046     		nop
 675 0220 BD46     		mov	sp, r7
 676 0222 07B0     		add	sp, sp, #28
 677              		@ sp needed
 678 0224 90BD     		pop	{r4, r7, pc}
 679              	.L30:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 22


 680 0226 C046     		.align	2
 681              	.L29:
 682 0228 00000000 		.word	CapSense_widgetNumber
 683 022c 00000000 		.word	CapSense_noiseThreshold
 684 0230 00000000 		.word	CapSense_sensorRaw
 685 0234 00000000 		.word	CapSense_enableRawFilters
 686 0238 00000000 		.word	CapSense_rawFilterData1
 687 023c 00000000 		.word	CapSense_rawFilterData2
 688 0240 00000000 		.word	CapSense_config
 689 0244 00000000 		.word	CapSense_sensorBaseline
 690 0248 00000000 		.word	CapSense_lowBaselineResetCnt
 691 024c 00000000 		.word	CapSense_negativeNoiseThreshold
 692 0250 00000000 		.word	CapSense_lowBaselineReset
 693 0254 00000000 		.word	CapSense_sensorBaselineLow
 694 0258 00000000 		.word	CapSense_sensorSignal
 695              		.cfi_endproc
 696              	.LFE36:
 697              		.size	CapSense_UpdateBaselineNoThreshold, .-CapSense_UpdateBaselineNoThreshold
 698              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 699              		.align	2
 700              		.global	CapSense_UpdateSensorBaseline
 701              		.code	16
 702              		.thumb_func
 703              		.type	CapSense_UpdateSensorBaseline, %function
 704              	CapSense_UpdateSensorBaseline:
 705              	.LFB37:
 506:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 507:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 508:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 509:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 510:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 511:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 512:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 513:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 514:Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 515:Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 516:Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 517:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 518:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating.
 519:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and
 520:Generated_Source\PSoC4/CapSense_CSHL.c **** *  if signal is less than noise threshold.
 521:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 522:Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 523:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 524:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 525:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 526:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 527:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 528:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 529:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 530:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 531:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 532:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 533:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 534:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 535:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 536:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 23


 537:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 538:Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint32 sensor)
 539:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 706              		.loc 1 539 0
 707              		.cfi_startproc
 708              		@ args = 0, pretend = 0, frame = 8
 709              		@ frame_needed = 1, uses_anonymous_args = 0
 710 0000 80B5     		push	{r7, lr}
 711              		.cfi_def_cfa_offset 8
 712              		.cfi_offset 7, -8
 713              		.cfi_offset 14, -4
 714 0002 82B0     		sub	sp, sp, #8
 715              		.cfi_def_cfa_offset 16
 716 0004 00AF     		add	r7, sp, #0
 717              		.cfi_def_cfa_register 7
 718 0006 7860     		str	r0, [r7, #4]
 540:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 541:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 widget;
 542:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 543:Generated_Source\PSoC4/CapSense_CSHL.c ****         widget = CapSense_widgetNumber[sensor];
 544:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 545:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 546:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 547:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 548:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 549:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 550:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 551:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_UpdateThresholds(sensor);
 719              		.loc 1 551 0
 720 0008 7B68     		ldr	r3, [r7, #4]
 721 000a 1800     		movs	r0, r3
 722 000c FFF7FEFF 		bl	CapSense_UpdateThresholds
 552:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 553:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 554:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
 723              		.loc 1 554 0
 724 0010 7B68     		ldr	r3, [r7, #4]
 725 0012 1800     		movs	r0, r3
 726 0014 FFF7FEFF 		bl	CapSense_UpdateBaselineNoThreshold
 555:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 556:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 557:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 558:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 559:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 560:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 727              		.loc 1 560 0
 728 0018 C046     		nop
 729 001a BD46     		mov	sp, r7
 730 001c 02B0     		add	sp, sp, #8
 731              		@ sp needed
 732 001e 80BD     		pop	{r7, pc}
 733              		.cfi_endproc
 734              	.LFE37:
 735              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 736              		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 737              		.align	2
 738              		.global	CapSense_UpdateEnabledBaselines
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 24


 739              		.code	16
 740              		.thumb_func
 741              		.type	CapSense_UpdateEnabledBaselines, %function
 742              	CapSense_UpdateEnabledBaselines:
 743              	.LFB38:
 561:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 562:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 563:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 564:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 565:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 566:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 567:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 568:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 569:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 570:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors.
 571:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 572:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 573:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 574:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 575:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 576:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 577:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 578:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 579:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 580:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 581:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 582:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 583:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 584:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 585:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 586:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 587:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 588:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 589:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 590:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 591:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 592:Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 593:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 744              		.loc 1 593 0
 745              		.cfi_startproc
 746              		@ args = 0, pretend = 0, frame = 8
 747              		@ frame_needed = 1, uses_anonymous_args = 0
 748 0000 80B5     		push	{r7, lr}
 749              		.cfi_def_cfa_offset 8
 750              		.cfi_offset 7, -8
 751              		.cfi_offset 14, -4
 752 0002 82B0     		sub	sp, sp, #8
 753              		.cfi_def_cfa_offset 16
 754 0004 00AF     		add	r7, sp, #0
 755              		.cfi_def_cfa_register 7
 594:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 595:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 596:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 597:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 756              		.loc 1 597 0
 757 0006 0023     		movs	r3, #0
 758 0008 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 25


 759 000a 11E0     		b	.L33
 760              	.L35:
 598:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 599:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 761              		.loc 1 599 0
 762 000c 7A68     		ldr	r2, [r7, #4]
 763 000e 0C4B     		ldr	r3, .L36
 764 0010 1100     		movs	r1, r2
 765 0012 1800     		movs	r0, r3
 766 0014 FFF7FEFF 		bl	CapSense_GetBitValue
 767 0018 0300     		movs	r3, r0
 768 001a 3B60     		str	r3, [r7]
 600:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 601:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 769              		.loc 1 601 0
 770 001c 3B68     		ldr	r3, [r7]
 771 001e 002B     		cmp	r3, #0
 772 0020 03D0     		beq	.L34
 602:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 603:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 773              		.loc 1 603 0
 774 0022 7B68     		ldr	r3, [r7, #4]
 775 0024 1800     		movs	r0, r3
 776 0026 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 777              	.L34:
 597:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 778              		.loc 1 597 0 discriminator 2
 779 002a 7B68     		ldr	r3, [r7, #4]
 780 002c 0133     		adds	r3, r3, #1
 781 002e 7B60     		str	r3, [r7, #4]
 782              	.L33:
 597:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 783              		.loc 1 597 0 is_stmt 0 discriminator 1
 784 0030 7B68     		ldr	r3, [r7, #4]
 785 0032 042B     		cmp	r3, #4
 786 0034 EAD9     		bls	.L35
 604:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 605:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 606:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 787              		.loc 1 606 0 is_stmt 1
 788 0036 C046     		nop
 789 0038 BD46     		mov	sp, r7
 790 003a 02B0     		add	sp, sp, #8
 791              		@ sp needed
 792 003c 80BD     		pop	{r7, pc}
 793              	.L37:
 794 003e C046     		.align	2
 795              	.L36:
 796 0040 00000000 		.word	CapSense_sensorEnableMask
 797              		.cfi_endproc
 798              	.LFE38:
 799              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 800              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 801              		.align	2
 802              		.global	CapSense_UpdateWidgetBaseline
 803              		.code	16
 804              		.thumb_func
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 26


 805              		.type	CapSense_UpdateWidgetBaseline, %function
 806              	CapSense_UpdateWidgetBaseline:
 807              	.LFB39:
 607:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 608:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 609:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateWidgetBaseline
 610:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 611:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 612:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 613:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 614:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 615:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors that belong to widget.
 616:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 617:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 618:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  Widget number.
 619:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 620:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 621:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 622:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 623:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 624:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 625:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 626:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 627:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 628:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 629:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 630:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 631:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 632:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 633:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 634:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 635:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 636:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 637:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateWidgetBaseline(uint32 widget)
 638:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 808              		.loc 1 638 0
 809              		.cfi_startproc
 810              		@ args = 0, pretend = 0, frame = 32
 811              		@ frame_needed = 1, uses_anonymous_args = 0
 812 0000 80B5     		push	{r7, lr}
 813              		.cfi_def_cfa_offset 8
 814              		.cfi_offset 7, -8
 815              		.cfi_offset 14, -4
 816 0002 88B0     		sub	sp, sp, #32
 817              		.cfi_def_cfa_offset 40
 818 0004 00AF     		add	r7, sp, #0
 819              		.cfi_def_cfa_register 7
 820 0006 7860     		str	r0, [r7, #4]
 639:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 640:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 firstSensor;
 641:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 lastSensor;
 642:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 643:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 644:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 645:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get number of sensors in widget */
 646:Generated_Source\PSoC4/CapSense_CSHL.c ****     sensorsPerWidget = CapSense_numberOfSensors[widget];
 821              		.loc 1 646 0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 27


 822 0008 0523     		movs	r3, #5
 823 000a BB61     		str	r3, [r7, #24]
 647:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 648:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get first sensor in widget */
 649:Generated_Source\PSoC4/CapSense_CSHL.c ****     firstSensor = CapSense_rawDataIndex[widget];
 824              		.loc 1 649 0
 825 000c 0023     		movs	r3, #0
 826 000e 7B61     		str	r3, [r7, #20]
 650:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 651:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get last sensor in widget */
 652:Generated_Source\PSoC4/CapSense_CSHL.c ****     lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget);
 827              		.loc 1 652 0
 828 0010 0023     		movs	r3, #0
 829 0012 1A00     		movs	r2, r3
 830 0014 BB69     		ldr	r3, [r7, #24]
 831 0016 D318     		adds	r3, r2, r3
 832 0018 3B61     		str	r3, [r7, #16]
 653:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 654:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 833              		.loc 1 654 0
 834 001a 7B69     		ldr	r3, [r7, #20]
 835 001c FB61     		str	r3, [r7, #28]
 836 001e 11E0     		b	.L39
 837              	.L41:
 655:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 656:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 838              		.loc 1 656 0
 839 0020 FA69     		ldr	r2, [r7, #28]
 840 0022 0C4B     		ldr	r3, .L42
 841 0024 1100     		movs	r1, r2
 842 0026 1800     		movs	r0, r3
 843 0028 FFF7FEFF 		bl	CapSense_GetBitValue
 844 002c 0300     		movs	r3, r0
 845 002e FB60     		str	r3, [r7, #12]
 657:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 658:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 846              		.loc 1 658 0
 847 0030 FB68     		ldr	r3, [r7, #12]
 848 0032 002B     		cmp	r3, #0
 849 0034 03D0     		beq	.L40
 659:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 660:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 850              		.loc 1 660 0
 851 0036 FB69     		ldr	r3, [r7, #28]
 852 0038 1800     		movs	r0, r3
 853 003a FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 854              	.L40:
 654:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 855              		.loc 1 654 0 discriminator 2
 856 003e FB69     		ldr	r3, [r7, #28]
 857 0040 0133     		adds	r3, r3, #1
 858 0042 FB61     		str	r3, [r7, #28]
 859              	.L39:
 654:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 860              		.loc 1 654 0 is_stmt 0 discriminator 1
 861 0044 FA69     		ldr	r2, [r7, #28]
 862 0046 3B69     		ldr	r3, [r7, #16]
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 28


 863 0048 9A42     		cmp	r2, r3
 864 004a E9D3     		bcc	.L41
 661:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 662:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 663:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 865              		.loc 1 663 0 is_stmt 1
 866 004c C046     		nop
 867 004e BD46     		mov	sp, r7
 868 0050 08B0     		add	sp, sp, #32
 869              		@ sp needed
 870 0052 80BD     		pop	{r7, pc}
 871              	.L43:
 872              		.align	2
 873              	.L42:
 874 0054 00000000 		.word	CapSense_sensorEnableMask
 875              		.cfi_endproc
 876              	.LFE39:
 877              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
 878              		.section	.text.CapSense_GetBaselineData,"ax",%progbits
 879              		.align	2
 880              		.global	CapSense_GetBaselineData
 881              		.code	16
 882              		.thumb_func
 883              		.type	CapSense_GetBaselineData, %function
 884              	CapSense_GetBaselineData:
 885              	.LFB40:
 664:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 665:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 666:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 667:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetBaselineData
 668:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 669:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 670:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 671:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the sensor baseline from the component.
 672:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 673:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 674:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 675:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 676:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 677:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 678:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 679:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 680:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with an initial values by scanning
 681:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 682:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 683:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 684:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 685:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 686:Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetBaselineData(uint32 sensor)
 687:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 886              		.loc 1 687 0
 887              		.cfi_startproc
 888              		@ args = 0, pretend = 0, frame = 8
 889              		@ frame_needed = 1, uses_anonymous_args = 0
 890 0000 80B5     		push	{r7, lr}
 891              		.cfi_def_cfa_offset 8
 892              		.cfi_offset 7, -8
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 29


 893              		.cfi_offset 14, -4
 894 0002 82B0     		sub	sp, sp, #8
 895              		.cfi_def_cfa_offset 16
 896 0004 00AF     		add	r7, sp, #0
 897              		.cfi_def_cfa_register 7
 898 0006 7860     		str	r0, [r7, #4]
 688:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorBaseline[sensor]);
 899              		.loc 1 688 0
 900 0008 034B     		ldr	r3, .L46
 901 000a 7A68     		ldr	r2, [r7, #4]
 902 000c 5200     		lsls	r2, r2, #1
 903 000e D35A     		ldrh	r3, [r2, r3]
 689:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 904              		.loc 1 689 0
 905 0010 1800     		movs	r0, r3
 906 0012 BD46     		mov	sp, r7
 907 0014 02B0     		add	sp, sp, #8
 908              		@ sp needed
 909 0016 80BD     		pop	{r7, pc}
 910              	.L47:
 911              		.align	2
 912              	.L46:
 913 0018 00000000 		.word	CapSense_sensorBaseline
 914              		.cfi_endproc
 915              	.LFE40:
 916              		.size	CapSense_GetBaselineData, .-CapSense_GetBaselineData
 917              		.section	.text.CapSense_SetBaselineData,"ax",%progbits
 918              		.align	2
 919              		.global	CapSense_SetBaselineData
 920              		.code	16
 921              		.thumb_func
 922              		.type	CapSense_SetBaselineData, %function
 923              	CapSense_SetBaselineData:
 924              	.LFB41:
 690:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 691:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 692:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 693:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetBaselineData
 694:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 695:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 696:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 697:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 698:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 699:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 700:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 701:Generated_Source\PSoC4/CapSense_CSHL.c **** *  data:    Sensor baseline.
 702:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 703:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 704:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 705:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 706:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 707:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with initial values by scanning
 708:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 709:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 710:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 711:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 712:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 30


 713:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetBaselineData(uint32 sensor, uint16 data)
 714:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 925              		.loc 1 714 0
 926              		.cfi_startproc
 927              		@ args = 0, pretend = 0, frame = 8
 928              		@ frame_needed = 1, uses_anonymous_args = 0
 929 0000 80B5     		push	{r7, lr}
 930              		.cfi_def_cfa_offset 8
 931              		.cfi_offset 7, -8
 932              		.cfi_offset 14, -4
 933 0002 82B0     		sub	sp, sp, #8
 934              		.cfi_def_cfa_offset 16
 935 0004 00AF     		add	r7, sp, #0
 936              		.cfi_def_cfa_register 7
 937 0006 7860     		str	r0, [r7, #4]
 938 0008 0A00     		movs	r2, r1
 939 000a BB1C     		adds	r3, r7, #2
 940 000c 1A80     		strh	r2, [r3]
 715:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = data;
 941              		.loc 1 715 0
 942 000e 054B     		ldr	r3, .L49
 943 0010 7A68     		ldr	r2, [r7, #4]
 944 0012 5200     		lsls	r2, r2, #1
 945 0014 B91C     		adds	r1, r7, #2
 946 0016 0988     		ldrh	r1, [r1]
 947 0018 D152     		strh	r1, [r2, r3]
 716:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 948              		.loc 1 716 0
 949 001a C046     		nop
 950 001c BD46     		mov	sp, r7
 951 001e 02B0     		add	sp, sp, #8
 952              		@ sp needed
 953 0020 80BD     		pop	{r7, pc}
 954              	.L50:
 955 0022 C046     		.align	2
 956              	.L49:
 957 0024 00000000 		.word	CapSense_sensorBaseline
 958              		.cfi_endproc
 959              	.LFE41:
 960              		.size	CapSense_SetBaselineData, .-CapSense_SetBaselineData
 961              		.section	.text.CapSense_GetDiffCountData,"ax",%progbits
 962              		.align	2
 963              		.global	CapSense_GetDiffCountData
 964              		.code	16
 965              		.thumb_func
 966              		.type	CapSense_GetDiffCountData, %function
 967              	CapSense_GetDiffCountData:
 968              	.LFB42:
 717:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 718:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 719:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 720:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDiffCountData
 721:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 722:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 723:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 724:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function returns the Sensor Signal from the component.
 725:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 31


 726:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 727:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 728:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 729:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 730:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the
 731:Generated_Source\PSoC4/CapSense_CSHL.c **** *  argument.
 732:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 733:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 734:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 735:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 736:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 737:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 738:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 739:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 740:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDiffCountData(uint32 sensor)
 741:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 969              		.loc 1 741 0
 970              		.cfi_startproc
 971              		@ args = 0, pretend = 0, frame = 8
 972              		@ frame_needed = 1, uses_anonymous_args = 0
 973 0000 80B5     		push	{r7, lr}
 974              		.cfi_def_cfa_offset 8
 975              		.cfi_offset 7, -8
 976              		.cfi_offset 14, -4
 977 0002 82B0     		sub	sp, sp, #8
 978              		.cfi_def_cfa_offset 16
 979 0004 00AF     		add	r7, sp, #0
 980              		.cfi_def_cfa_register 7
 981 0006 7860     		str	r0, [r7, #4]
 742:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorSignal[sensor]);
 982              		.loc 1 742 0
 983 0008 034A     		ldr	r2, .L53
 984 000a 7B68     		ldr	r3, [r7, #4]
 985 000c D318     		adds	r3, r2, r3
 986 000e 1B78     		ldrb	r3, [r3]
 743:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 987              		.loc 1 743 0
 988 0010 1800     		movs	r0, r3
 989 0012 BD46     		mov	sp, r7
 990 0014 02B0     		add	sp, sp, #8
 991              		@ sp needed
 992 0016 80BD     		pop	{r7, pc}
 993              	.L54:
 994              		.align	2
 995              	.L53:
 996 0018 00000000 		.word	CapSense_sensorSignal
 997              		.cfi_endproc
 998              	.LFE42:
 999              		.size	CapSense_GetDiffCountData, .-CapSense_GetDiffCountData
 1000              		.section	.text.CapSense_SetDiffCountData,"ax",%progbits
 1001              		.align	2
 1002              		.global	CapSense_SetDiffCountData
 1003              		.code	16
 1004              		.thumb_func
 1005              		.type	CapSense_SetDiffCountData, %function
 1006              	CapSense_SetDiffCountData:
 1007              	.LFB43:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 32


 744:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 745:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 746:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 747:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetDiffCountData
 748:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 749:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 750:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 751:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 752:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 753:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 754:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 755:Generated_Source\PSoC4/CapSense_CSHL.c **** *  value:   Sensor signal.
 756:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 757:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 758:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 759:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 760:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 761:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 762:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 763:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 764:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 765:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 766:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 767:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetDiffCountData(uint32 sensor, uint8 value)
 768:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1008              		.loc 1 768 0
 1009              		.cfi_startproc
 1010              		@ args = 0, pretend = 0, frame = 8
 1011              		@ frame_needed = 1, uses_anonymous_args = 0
 1012 0000 80B5     		push	{r7, lr}
 1013              		.cfi_def_cfa_offset 8
 1014              		.cfi_offset 7, -8
 1015              		.cfi_offset 14, -4
 1016 0002 82B0     		sub	sp, sp, #8
 1017              		.cfi_def_cfa_offset 16
 1018 0004 00AF     		add	r7, sp, #0
 1019              		.cfi_def_cfa_register 7
 1020 0006 7860     		str	r0, [r7, #4]
 1021 0008 0A00     		movs	r2, r1
 1022 000a FB1C     		adds	r3, r7, #3
 1023 000c 1A70     		strb	r2, [r3]
 769:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = value;
 1024              		.loc 1 769 0
 1025 000e 054A     		ldr	r2, .L56
 1026 0010 7B68     		ldr	r3, [r7, #4]
 1027 0012 D318     		adds	r3, r2, r3
 1028 0014 FA1C     		adds	r2, r7, #3
 1029 0016 1278     		ldrb	r2, [r2]
 1030 0018 1A70     		strb	r2, [r3]
 770:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1031              		.loc 1 770 0
 1032 001a C046     		nop
 1033 001c BD46     		mov	sp, r7
 1034 001e 02B0     		add	sp, sp, #8
 1035              		@ sp needed
 1036 0020 80BD     		pop	{r7, pc}
 1037              	.L57:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 33


 1038 0022 C046     		.align	2
 1039              	.L56:
 1040 0024 00000000 		.word	CapSense_sensorSignal
 1041              		.cfi_endproc
 1042              	.LFE43:
 1043              		.size	CapSense_SetDiffCountData, .-CapSense_SetDiffCountData
 1044              		.section	.text.CapSense_GetFingerThreshold,"ax",%progbits
 1045              		.align	2
 1046              		.global	CapSense_GetFingerThreshold
 1047              		.code	16
 1048              		.thumb_func
 1049              		.type	CapSense_GetFingerThreshold, %function
 1050              	CapSense_GetFingerThreshold:
 1051              	.LFB44:
 771:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 772:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 773:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 774:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerThreshold
 775:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 776:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 777:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 778:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the finger threshold from the component.
 779:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 780:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 781:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 782:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 783:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 784:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument.
 785:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 786:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 787:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_fingerThreshold[] - This array contains the level of signal
 788:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 789:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 790:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 791:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 792:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 793:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 794:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerThreshold(uint32 widget)
 795:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1052              		.loc 1 795 0
 1053              		.cfi_startproc
 1054              		@ args = 0, pretend = 0, frame = 8
 1055              		@ frame_needed = 1, uses_anonymous_args = 0
 1056 0000 80B5     		push	{r7, lr}
 1057              		.cfi_def_cfa_offset 8
 1058              		.cfi_offset 7, -8
 1059              		.cfi_offset 14, -4
 1060 0002 82B0     		sub	sp, sp, #8
 1061              		.cfi_def_cfa_offset 16
 1062 0004 00AF     		add	r7, sp, #0
 1063              		.cfi_def_cfa_register 7
 1064 0006 7860     		str	r0, [r7, #4]
 796:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_fingerThreshold[widget]);
 1065              		.loc 1 796 0
 1066 0008 034A     		ldr	r2, .L60
 1067 000a 7B68     		ldr	r3, [r7, #4]
 1068 000c D318     		adds	r3, r2, r3
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 34


 1069 000e 1B78     		ldrb	r3, [r3]
 797:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1070              		.loc 1 797 0
 1071 0010 1800     		movs	r0, r3
 1072 0012 BD46     		mov	sp, r7
 1073 0014 02B0     		add	sp, sp, #8
 1074              		@ sp needed
 1075 0016 80BD     		pop	{r7, pc}
 1076              	.L61:
 1077              		.align	2
 1078              	.L60:
 1079 0018 00000000 		.word	CapSense_fingerThreshold
 1080              		.cfi_endproc
 1081              	.LFE44:
 1082              		.size	CapSense_GetFingerThreshold, .-CapSense_GetFingerThreshold
 1083              		.section	.text.CapSense_GetNoiseThreshold,"ax",%progbits
 1084              		.align	2
 1085              		.global	CapSense_GetNoiseThreshold
 1086              		.code	16
 1087              		.thumb_func
 1088              		.type	CapSense_GetNoiseThreshold, %function
 1089              	CapSense_GetNoiseThreshold:
 1090              	.LFB45:
 798:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 799:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 800:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 801:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNoiseThreshold
 802:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 803:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 804:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 805:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the noise threshold from the component.
 806:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 807:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 808:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 809:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 810:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 811:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument.
 812:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 813:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 814:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_noiseThreshold[] - This array contains the level of signal
 815:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 816:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 817:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 818:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 819:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 820:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 821:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNoiseThreshold(uint32 widget)
 822:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1091              		.loc 1 822 0
 1092              		.cfi_startproc
 1093              		@ args = 0, pretend = 0, frame = 8
 1094              		@ frame_needed = 1, uses_anonymous_args = 0
 1095 0000 80B5     		push	{r7, lr}
 1096              		.cfi_def_cfa_offset 8
 1097              		.cfi_offset 7, -8
 1098              		.cfi_offset 14, -4
 1099 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 35


 1100              		.cfi_def_cfa_offset 16
 1101 0004 00AF     		add	r7, sp, #0
 1102              		.cfi_def_cfa_register 7
 1103 0006 7860     		str	r0, [r7, #4]
 823:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_noiseThreshold[widget]);
 1104              		.loc 1 823 0
 1105 0008 034A     		ldr	r2, .L64
 1106 000a 7B68     		ldr	r3, [r7, #4]
 1107 000c D318     		adds	r3, r2, r3
 1108 000e 1B78     		ldrb	r3, [r3]
 824:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1109              		.loc 1 824 0
 1110 0010 1800     		movs	r0, r3
 1111 0012 BD46     		mov	sp, r7
 1112 0014 02B0     		add	sp, sp, #8
 1113              		@ sp needed
 1114 0016 80BD     		pop	{r7, pc}
 1115              	.L65:
 1116              		.align	2
 1117              	.L64:
 1118 0018 00000000 		.word	CapSense_noiseThreshold
 1119              		.cfi_endproc
 1120              	.LFE45:
 1121              		.size	CapSense_GetNoiseThreshold, .-CapSense_GetNoiseThreshold
 1122              		.section	.text.CapSense_GetFingerHysteresis,"ax",%progbits
 1123              		.align	2
 1124              		.global	CapSense_GetFingerHysteresis
 1125              		.code	16
 1126              		.thumb_func
 1127              		.type	CapSense_GetFingerHysteresis, %function
 1128              	CapSense_GetFingerHysteresis:
 1129              	.LFB46:
 825:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 826:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 827:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 828:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerHysteresis
 829:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 830:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 831:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 832:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the Hysteresis value from the component.
 833:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 834:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 835:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 836:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 837:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 838:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument.
 839:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 840:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 841:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_hysteresis[] - This array contains the hysteresis value
 842:Generated_Source\PSoC4/CapSense_CSHL.c **** *   for each widget.
 843:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 844:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 845:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 846:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 847:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 848:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 849:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerHysteresis(uint32 widget)
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 36


 850:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1130              		.loc 1 850 0
 1131              		.cfi_startproc
 1132              		@ args = 0, pretend = 0, frame = 8
 1133              		@ frame_needed = 1, uses_anonymous_args = 0
 1134 0000 80B5     		push	{r7, lr}
 1135              		.cfi_def_cfa_offset 8
 1136              		.cfi_offset 7, -8
 1137              		.cfi_offset 14, -4
 1138 0002 82B0     		sub	sp, sp, #8
 1139              		.cfi_def_cfa_offset 16
 1140 0004 00AF     		add	r7, sp, #0
 1141              		.cfi_def_cfa_register 7
 1142 0006 7860     		str	r0, [r7, #4]
 851:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_hysteresis[widget]);
 1143              		.loc 1 851 0
 1144 0008 034A     		ldr	r2, .L68
 1145 000a 7B68     		ldr	r3, [r7, #4]
 1146 000c D318     		adds	r3, r2, r3
 1147 000e 1B78     		ldrb	r3, [r3]
 852:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1148              		.loc 1 852 0
 1149 0010 1800     		movs	r0, r3
 1150 0012 BD46     		mov	sp, r7
 1151 0014 02B0     		add	sp, sp, #8
 1152              		@ sp needed
 1153 0016 80BD     		pop	{r7, pc}
 1154              	.L69:
 1155              		.align	2
 1156              	.L68:
 1157 0018 00000000 		.word	CapSense_hysteresis
 1158              		.cfi_endproc
 1159              	.LFE46:
 1160              		.size	CapSense_GetFingerHysteresis, .-CapSense_GetFingerHysteresis
 1161              		.section	.text.CapSense_GetNegativeNoiseThreshold,"ax",%progbits
 1162              		.align	2
 1163              		.global	CapSense_GetNegativeNoiseThreshold
 1164              		.code	16
 1165              		.thumb_func
 1166              		.type	CapSense_GetNegativeNoiseThreshold, %function
 1167              	CapSense_GetNegativeNoiseThreshold:
 1168              	.LFB47:
 853:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 854:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 855:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 856:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNegativeNoiseThreshold
 857:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 858:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 859:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 860:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the negative noise threshold from the component.
 861:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 862:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 863:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 864:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 865:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return Value:
 866:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the negative noise threshold
 867:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 37


 868:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 869:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_negativeNoiseThreshold - This variable specifies the negative
 870:Generated_Source\PSoC4/CapSense_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 871:Generated_Source\PSoC4/CapSense_CSHL.c **** *   to the raw count level.
 872:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 873:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 874:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 875:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 876:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 877:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNegativeNoiseThreshold(uint32 widget)
 878:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1169              		.loc 1 878 0
 1170              		.cfi_startproc
 1171              		@ args = 0, pretend = 0, frame = 8
 1172              		@ frame_needed = 1, uses_anonymous_args = 0
 1173 0000 80B5     		push	{r7, lr}
 1174              		.cfi_def_cfa_offset 8
 1175              		.cfi_offset 7, -8
 1176              		.cfi_offset 14, -4
 1177 0002 82B0     		sub	sp, sp, #8
 1178              		.cfi_def_cfa_offset 16
 1179 0004 00AF     		add	r7, sp, #0
 1180              		.cfi_def_cfa_register 7
 1181 0006 7860     		str	r0, [r7, #4]
 879:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 880:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_negativeNoiseThreshold[widget]);
 1182              		.loc 1 880 0
 1183 0008 034A     		ldr	r2, .L72
 1184 000a 7B68     		ldr	r3, [r7, #4]
 1185 000c D318     		adds	r3, r2, r3
 1186 000e 1B78     		ldrb	r3, [r3]
 881:Generated_Source\PSoC4/CapSense_CSHL.c **** #else
 882:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_NEGATIVE_NOISE_THRESHOLD);
 883:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 884:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1187              		.loc 1 884 0
 1188 0010 1800     		movs	r0, r3
 1189 0012 BD46     		mov	sp, r7
 1190 0014 02B0     		add	sp, sp, #8
 1191              		@ sp needed
 1192 0016 80BD     		pop	{r7, pc}
 1193              	.L73:
 1194              		.align	2
 1195              	.L72:
 1196 0018 00000000 		.word	CapSense_negativeNoiseThreshold
 1197              		.cfi_endproc
 1198              	.LFE47:
 1199              		.size	CapSense_GetNegativeNoiseThreshold, .-CapSense_GetNegativeNoiseThreshold
 1200              		.section	.text.CapSense_SetFingerThreshold,"ax",%progbits
 1201              		.align	2
 1202              		.global	CapSense_SetFingerThreshold
 1203              		.code	16
 1204              		.thumb_func
 1205              		.type	CapSense_SetFingerThreshold, %function
 1206              	CapSense_SetFingerThreshold:
 1207              	.LFB48:
 885:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 38


 886:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 887:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 888:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 889:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerThreshold
 890:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 891:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 892:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 893:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the finger threshold value for a widget.
 894:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 895:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 896:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensorNumber:  widget index.
 897:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Finger threshold value for the widget.
 898:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 899:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 900:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 901:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 902:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 903:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[] - This array contains the level of signal
 904:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines if a finger is present on the widget.
 905:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 906:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 907:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 908:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 909:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 910:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerThreshold(uint32 widget, uint8 value)
 911:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1208              		.loc 1 911 0
 1209              		.cfi_startproc
 1210              		@ args = 0, pretend = 0, frame = 8
 1211              		@ frame_needed = 1, uses_anonymous_args = 0
 1212 0000 80B5     		push	{r7, lr}
 1213              		.cfi_def_cfa_offset 8
 1214              		.cfi_offset 7, -8
 1215              		.cfi_offset 14, -4
 1216 0002 82B0     		sub	sp, sp, #8
 1217              		.cfi_def_cfa_offset 16
 1218 0004 00AF     		add	r7, sp, #0
 1219              		.cfi_def_cfa_register 7
 1220 0006 7860     		str	r0, [r7, #4]
 1221 0008 0A00     		movs	r2, r1
 1222 000a FB1C     		adds	r3, r7, #3
 1223 000c 1A70     		strb	r2, [r3]
 912:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_fingerThreshold[widget] = value;
 1224              		.loc 1 912 0
 1225 000e 054A     		ldr	r2, .L75
 1226 0010 7B68     		ldr	r3, [r7, #4]
 1227 0012 D318     		adds	r3, r2, r3
 1228 0014 FA1C     		adds	r2, r7, #3
 1229 0016 1278     		ldrb	r2, [r2]
 1230 0018 1A70     		strb	r2, [r3]
 913:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1231              		.loc 1 913 0
 1232 001a C046     		nop
 1233 001c BD46     		mov	sp, r7
 1234 001e 02B0     		add	sp, sp, #8
 1235              		@ sp needed
 1236 0020 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 39


 1237              	.L76:
 1238 0022 C046     		.align	2
 1239              	.L75:
 1240 0024 00000000 		.word	CapSense_fingerThreshold
 1241              		.cfi_endproc
 1242              	.LFE48:
 1243              		.size	CapSense_SetFingerThreshold, .-CapSense_SetFingerThreshold
 1244              		.section	.text.CapSense_SetNoiseThreshold,"ax",%progbits
 1245              		.align	2
 1246              		.global	CapSense_SetNoiseThreshold
 1247              		.code	16
 1248              		.thumb_func
 1249              		.type	CapSense_SetNoiseThreshold, %function
 1250              	CapSense_SetNoiseThreshold:
 1251              	.LFB49:
 914:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 915:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 916:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 917:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNoiseThreshold
 918:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 919:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 920:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 921:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Noise Threshold value for each widget.
 922:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 923:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 924:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Sensor index number.
 925:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:   Noise Threshold value for widget.
 926:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 927:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 928:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 929:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 930:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 931:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_noiseThreshold[] - This array contains the level of signal
 932:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines the level of noise in the capacitive scan.
 933:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 934:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 935:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 936:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 937:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 938:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNoiseThreshold(uint32 widget, uint8 value)
 939:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1252              		.loc 1 939 0
 1253              		.cfi_startproc
 1254              		@ args = 0, pretend = 0, frame = 8
 1255              		@ frame_needed = 1, uses_anonymous_args = 0
 1256 0000 80B5     		push	{r7, lr}
 1257              		.cfi_def_cfa_offset 8
 1258              		.cfi_offset 7, -8
 1259              		.cfi_offset 14, -4
 1260 0002 82B0     		sub	sp, sp, #8
 1261              		.cfi_def_cfa_offset 16
 1262 0004 00AF     		add	r7, sp, #0
 1263              		.cfi_def_cfa_register 7
 1264 0006 7860     		str	r0, [r7, #4]
 1265 0008 0A00     		movs	r2, r1
 1266 000a FB1C     		adds	r3, r7, #3
 1267 000c 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 40


 940:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_noiseThreshold[widget] = value;
 1268              		.loc 1 940 0
 1269 000e 054A     		ldr	r2, .L78
 1270 0010 7B68     		ldr	r3, [r7, #4]
 1271 0012 D318     		adds	r3, r2, r3
 1272 0014 FA1C     		adds	r2, r7, #3
 1273 0016 1278     		ldrb	r2, [r2]
 1274 0018 1A70     		strb	r2, [r3]
 941:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1275              		.loc 1 941 0
 1276 001a C046     		nop
 1277 001c BD46     		mov	sp, r7
 1278 001e 02B0     		add	sp, sp, #8
 1279              		@ sp needed
 1280 0020 80BD     		pop	{r7, pc}
 1281              	.L79:
 1282 0022 C046     		.align	2
 1283              	.L78:
 1284 0024 00000000 		.word	CapSense_noiseThreshold
 1285              		.cfi_endproc
 1286              	.LFE49:
 1287              		.size	CapSense_SetNoiseThreshold, .-CapSense_SetNoiseThreshold
 1288              		.section	.text.CapSense_SetFingerHysteresis,"ax",%progbits
 1289              		.align	2
 1290              		.global	CapSense_SetFingerHysteresis
 1291              		.code	16
 1292              		.thumb_func
 1293              		.type	CapSense_SetFingerHysteresis, %function
 1294              	CapSense_SetFingerHysteresis:
 1295              	.LFB50:
 942:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 943:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 944:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 945:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerHysteresis
 946:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 947:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 948:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 949:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Hysteresis value of a widget
 950:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 951:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 952:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Hysteresis value for widgets.
 953:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number
 954:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 955:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 956:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 957:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 958:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 959:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_hysteresis[] - This array contains the hysteresis value for each widget.
 960:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 961:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 962:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 963:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 964:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 965:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 966:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerHysteresis(uint32 widget, uint8 value)
 967:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1296              		.loc 1 967 0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 41


 1297              		.cfi_startproc
 1298              		@ args = 0, pretend = 0, frame = 8
 1299              		@ frame_needed = 1, uses_anonymous_args = 0
 1300 0000 80B5     		push	{r7, lr}
 1301              		.cfi_def_cfa_offset 8
 1302              		.cfi_offset 7, -8
 1303              		.cfi_offset 14, -4
 1304 0002 82B0     		sub	sp, sp, #8
 1305              		.cfi_def_cfa_offset 16
 1306 0004 00AF     		add	r7, sp, #0
 1307              		.cfi_def_cfa_register 7
 1308 0006 7860     		str	r0, [r7, #4]
 1309 0008 0A00     		movs	r2, r1
 1310 000a FB1C     		adds	r3, r7, #3
 1311 000c 1A70     		strb	r2, [r3]
 968:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_hysteresis[widget] = value;
 1312              		.loc 1 968 0
 1313 000e 054A     		ldr	r2, .L81
 1314 0010 7B68     		ldr	r3, [r7, #4]
 1315 0012 D318     		adds	r3, r2, r3
 1316 0014 FA1C     		adds	r2, r7, #3
 1317 0016 1278     		ldrb	r2, [r2]
 1318 0018 1A70     		strb	r2, [r3]
 969:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1319              		.loc 1 969 0
 1320 001a C046     		nop
 1321 001c BD46     		mov	sp, r7
 1322 001e 02B0     		add	sp, sp, #8
 1323              		@ sp needed
 1324 0020 80BD     		pop	{r7, pc}
 1325              	.L82:
 1326 0022 C046     		.align	2
 1327              	.L81:
 1328 0024 00000000 		.word	CapSense_hysteresis
 1329              		.cfi_endproc
 1330              	.LFE50:
 1331              		.size	CapSense_SetFingerHysteresis, .-CapSense_SetFingerHysteresis
 1332              		.section	.text.CapSense_SetNegativeNoiseThreshold,"ax",%progbits
 1333              		.align	2
 1334              		.global	CapSense_SetNegativeNoiseThreshold
 1335              		.code	16
 1336              		.thumb_func
 1337              		.type	CapSense_SetNegativeNoiseThreshold, %function
 1338              	CapSense_SetNegativeNoiseThreshold:
 1339              	.LFB51:
 970:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 971:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 972:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 973:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNegativeNoiseThreshold
 974:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 975:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 976:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 977:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Negative Noise Threshold value of a widget
 978:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 979:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 980:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Negative Noise Threshold value for widgets.
 981:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget number
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 42


 982:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 983:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 984:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 985:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 986:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 987:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_negativeNoiseThreshold  - This parameter specifies the negative
 988:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   difference between the raw count and baseline levels for Baseline resetting to
 989:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   the raw count level.
 990:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 991:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 992:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 993:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 994:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 995:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
 996:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1340              		.loc 1 996 0
 1341              		.cfi_startproc
 1342              		@ args = 0, pretend = 0, frame = 8
 1343              		@ frame_needed = 1, uses_anonymous_args = 0
 1344 0000 80B5     		push	{r7, lr}
 1345              		.cfi_def_cfa_offset 8
 1346              		.cfi_offset 7, -8
 1347              		.cfi_offset 14, -4
 1348 0002 82B0     		sub	sp, sp, #8
 1349              		.cfi_def_cfa_offset 16
 1350 0004 00AF     		add	r7, sp, #0
 1351              		.cfi_def_cfa_register 7
 1352 0006 7860     		str	r0, [r7, #4]
 1353 0008 0A00     		movs	r2, r1
 1354 000a FB1C     		adds	r3, r7, #3
 1355 000c 1A70     		strb	r2, [r3]
 997:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_negativeNoiseThreshold[widget] = value;
 1356              		.loc 1 997 0
 1357 000e 054A     		ldr	r2, .L84
 1358 0010 7B68     		ldr	r3, [r7, #4]
 1359 0012 D318     		adds	r3, r2, r3
 1360 0014 FA1C     		adds	r2, r7, #3
 1361 0016 1278     		ldrb	r2, [r2]
 1362 0018 1A70     		strb	r2, [r3]
 998:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1363              		.loc 1 998 0
 1364 001a C046     		nop
 1365 001c BD46     		mov	sp, r7
 1366 001e 02B0     		add	sp, sp, #8
 1367              		@ sp needed
 1368 0020 80BD     		pop	{r7, pc}
 1369              	.L85:
 1370 0022 C046     		.align	2
 1371              	.L84:
 1372 0024 00000000 		.word	CapSense_negativeNoiseThreshold
 1373              		.cfi_endproc
 1374              	.LFE51:
 1375              		.size	CapSense_SetNegativeNoiseThreshold, .-CapSense_SetNegativeNoiseThreshold
 1376              		.section	.text.CapSense_SetDebounce,"ax",%progbits
 1377              		.align	2
 1378              		.global	CapSense_SetDebounce
 1379              		.code	16
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 43


 1380              		.thumb_func
 1381              		.type	CapSense_SetDebounce, %function
 1382              	CapSense_SetDebounce:
 1383              	.LFB52:
 999:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1000:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1001:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1002:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetDebounce
1003:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1004:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1005:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1006:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the debounce value for a widget.
1007:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1008:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1009:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Debounce value for widget.
1010:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget index.
1011:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1012:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1013:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1014:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1015:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1016:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_debounce[] - This array contains the debounce value for each widget.
1017:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
1018:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1019:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1020:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1021:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1022:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1023:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetDebounce(uint32 widget, uint8 value)
1024:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1384              		.loc 1 1024 0
 1385              		.cfi_startproc
 1386              		@ args = 0, pretend = 0, frame = 8
 1387              		@ frame_needed = 1, uses_anonymous_args = 0
 1388 0000 80B5     		push	{r7, lr}
 1389              		.cfi_def_cfa_offset 8
 1390              		.cfi_offset 7, -8
 1391              		.cfi_offset 14, -4
 1392 0002 82B0     		sub	sp, sp, #8
 1393              		.cfi_def_cfa_offset 16
 1394 0004 00AF     		add	r7, sp, #0
 1395              		.cfi_def_cfa_register 7
 1396 0006 7860     		str	r0, [r7, #4]
 1397 0008 0A00     		movs	r2, r1
 1398 000a FB1C     		adds	r3, r7, #3
 1399 000c 1A70     		strb	r2, [r3]
1025:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_debounce[widget] = value;
 1400              		.loc 1 1025 0
 1401 000e 054A     		ldr	r2, .L87
 1402 0010 7B68     		ldr	r3, [r7, #4]
 1403 0012 D318     		adds	r3, r2, r3
 1404 0014 FA1C     		adds	r2, r7, #3
 1405 0016 1278     		ldrb	r2, [r2]
 1406 0018 1A70     		strb	r2, [r3]
1026:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1407              		.loc 1 1026 0
 1408 001a C046     		nop
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 44


 1409 001c BD46     		mov	sp, r7
 1410 001e 02B0     		add	sp, sp, #8
 1411              		@ sp needed
 1412 0020 80BD     		pop	{r7, pc}
 1413              	.L88:
 1414 0022 C046     		.align	2
 1415              	.L87:
 1416 0024 00000000 		.word	CapSense_debounce
 1417              		.cfi_endproc
 1418              	.LFE52:
 1419              		.size	CapSense_SetDebounce, .-CapSense_SetDebounce
 1420              		.section	.text.CapSense_SetLowBaselineReset,"ax",%progbits
 1421              		.align	2
 1422              		.global	CapSense_SetLowBaselineReset
 1423              		.code	16
 1424              		.thumb_func
 1425              		.type	CapSense_SetLowBaselineReset, %function
 1426              	CapSense_SetLowBaselineReset:
 1427              	.LFB53:
1027:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1028:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1029:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1030:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetLowBaselineReset
1031:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1032:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1033:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1034:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the low baseline reset threshold value for the sensor.
1035:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1036:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1037:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value: low baseline reset threshold value.
1038:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensor: Sensor index.
1039:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1040:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1041:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1042:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1043:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1044:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_lowBaselineReset[] - This array contains the Baseline update
1045:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold value for each sensor.
1046:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1047:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1048:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1049:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1050:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1051:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetLowBaselineReset(uint32 sensor, uint8 value)
1052:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1428              		.loc 1 1052 0
 1429              		.cfi_startproc
 1430              		@ args = 0, pretend = 0, frame = 8
 1431              		@ frame_needed = 1, uses_anonymous_args = 0
 1432 0000 80B5     		push	{r7, lr}
 1433              		.cfi_def_cfa_offset 8
 1434              		.cfi_offset 7, -8
 1435              		.cfi_offset 14, -4
 1436 0002 82B0     		sub	sp, sp, #8
 1437              		.cfi_def_cfa_offset 16
 1438 0004 00AF     		add	r7, sp, #0
 1439              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 45


 1440 0006 7860     		str	r0, [r7, #4]
 1441 0008 0A00     		movs	r2, r1
 1442 000a FB1C     		adds	r3, r7, #3
 1443 000c 1A70     		strb	r2, [r3]
1053:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineReset[sensor] = value;
 1444              		.loc 1 1053 0
 1445 000e 054A     		ldr	r2, .L90
 1446 0010 7B68     		ldr	r3, [r7, #4]
 1447 0012 D318     		adds	r3, r2, r3
 1448 0014 FA1C     		adds	r2, r7, #3
 1449 0016 1278     		ldrb	r2, [r2]
 1450 0018 1A70     		strb	r2, [r3]
1054:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1451              		.loc 1 1054 0
 1452 001a C046     		nop
 1453 001c BD46     		mov	sp, r7
 1454 001e 02B0     		add	sp, sp, #8
 1455              		@ sp needed
 1456 0020 80BD     		pop	{r7, pc}
 1457              	.L91:
 1458 0022 C046     		.align	2
 1459              	.L90:
 1460 0024 00000000 		.word	CapSense_lowBaselineReset
 1461              		.cfi_endproc
 1462              	.LFE53:
 1463              		.size	CapSense_SetLowBaselineReset, .-CapSense_SetLowBaselineReset
 1464              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 1465              		.align	2
 1466              		.global	CapSense_CheckIsSensorActive
 1467              		.code	16
 1468              		.thumb_func
 1469              		.type	CapSense_CheckIsSensorActive, %function
 1470              	CapSense_CheckIsSensorActive:
 1471              	.LFB54:
1055:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
1056:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1057:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1058:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1059:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
1060:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1061:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1062:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1063:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[sensor] array element to the finger
1064:Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into
1065:Generated_Source\PSoC4/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold
1066:Generated_Source\PSoC4/CapSense_CSHL.c **** *  based on whether the sensor is currently active.
1067:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1068:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1069:Generated_Source\PSoC4/CapSense_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1070:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function updates the CapSense_sensorOnMask[] array element.
1071:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1072:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1073:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
1074:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1075:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1076:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1077:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 46


1078:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1079:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - used to store the difference between
1080:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1081:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store the current debounce
1082:Generated_Source\PSoC4/CapSense_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix
1083:Generated_Source\PSoC4/CapSense_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1084:Generated_Source\PSoC4/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1085:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store the sensors on/off state.
1086:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors
1087:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1088:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1089:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1090:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor is inactive.
1091:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is active.
1092:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1093:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1094:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1095:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1096:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1097:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsSensorActive(uint32 sensor)
1098:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1472              		.loc 1 1098 0
 1473              		.cfi_startproc
 1474              		@ args = 0, pretend = 0, frame = 16
 1475              		@ frame_needed = 1, uses_anonymous_args = 0
 1476 0000 80B5     		push	{r7, lr}
 1477              		.cfi_def_cfa_offset 8
 1478              		.cfi_offset 7, -8
 1479              		.cfi_offset 14, -4
 1480 0002 84B0     		sub	sp, sp, #16
 1481              		.cfi_def_cfa_offset 24
 1482 0004 00AF     		add	r7, sp, #0
 1483              		.cfi_def_cfa_register 7
 1484 0006 7860     		str	r0, [r7, #4]
1099:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget;
1100:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounce;
1101:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounceIndex;
1102:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1103:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 fingerThreshold;
1104:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 hysteresis;
1105:Generated_Source\PSoC4/CapSense_CSHL.c ****     static uint8 CapSense_debounceCounter[] = {
1106:Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, 
1107:Generated_Source\PSoC4/CapSense_CSHL.c **** };
1108:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1109:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1110:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1111:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
1112:Generated_Source\PSoC4/CapSense_CSHL.c ****     widget = CapSense_widgetNumber[sensor];
 1485              		.loc 1 1112 0
 1486 0008 0F23     		movs	r3, #15
 1487 000a FB18     		adds	r3, r7, r3
 1488 000c 4349     		ldr	r1, .L101
 1489 000e 7A68     		ldr	r2, [r7, #4]
 1490 0010 8A18     		adds	r2, r1, r2
 1491 0012 1278     		ldrb	r2, [r2]
 1492 0014 1A70     		strb	r2, [r3]
1113:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 47


1114:Generated_Source\PSoC4/CapSense_CSHL.c ****     fingerThreshold = CapSense_fingerThreshold[widget];
 1493              		.loc 1 1114 0
 1494 0016 0F23     		movs	r3, #15
 1495 0018 FB18     		adds	r3, r7, r3
 1496 001a 1A78     		ldrb	r2, [r3]
 1497 001c 0E23     		movs	r3, #14
 1498 001e FB18     		adds	r3, r7, r3
 1499 0020 3F49     		ldr	r1, .L101+4
 1500 0022 8A5C     		ldrb	r2, [r1, r2]
 1501 0024 1A70     		strb	r2, [r3]
1115:Generated_Source\PSoC4/CapSense_CSHL.c ****     hysteresis = CapSense_hysteresis[widget];
 1502              		.loc 1 1115 0
 1503 0026 0F23     		movs	r3, #15
 1504 0028 FB18     		adds	r3, r7, r3
 1505 002a 1A78     		ldrb	r2, [r3]
 1506 002c 0D23     		movs	r3, #13
 1507 002e FB18     		adds	r3, r7, r3
 1508 0030 3C49     		ldr	r1, .L101+8
 1509 0032 8A5C     		ldrb	r2, [r1, r2]
 1510 0034 1A70     		strb	r2, [r3]
1116:Generated_Source\PSoC4/CapSense_CSHL.c ****     debounce = CapSense_debounce[widget];
 1511              		.loc 1 1116 0
 1512 0036 0F23     		movs	r3, #15
 1513 0038 FB18     		adds	r3, r7, r3
 1514 003a 1A78     		ldrb	r2, [r3]
 1515 003c 0C23     		movs	r3, #12
 1516 003e FB18     		adds	r3, r7, r3
 1517 0040 3949     		ldr	r1, .L101+12
 1518 0042 8A5C     		ldrb	r2, [r1, r2]
 1519 0044 1A70     		strb	r2, [r3]
1117:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1118:Generated_Source\PSoC4/CapSense_CSHL.c ****         debounceIndex = CapSense_UNUSED_DEBOUNCE_COUNTER_INDEX;
 1520              		.loc 1 1118 0
 1521 0046 0B23     		movs	r3, #11
 1522 0048 FB18     		adds	r3, r7, r3
 1523 004a 0022     		movs	r2, #0
 1524 004c 1A70     		strb	r2, [r3]
1119:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_debounceCounter[debounceIndex] = 1u;
 1525              		.loc 1 1119 0
 1526 004e 0B23     		movs	r3, #11
 1527 0050 FB18     		adds	r3, r7, r3
 1528 0052 1B78     		ldrb	r3, [r3]
 1529 0054 354A     		ldr	r2, .L101+16
 1530 0056 0121     		movs	r1, #1
 1531 0058 D154     		strb	r1, [r2, r3]
1120:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1121:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1122:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Was on */
1123:Generated_Source\PSoC4/CapSense_CSHL.c ****     if (0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor))
 1532              		.loc 1 1123 0
 1533 005a 7A68     		ldr	r2, [r7, #4]
 1534 005c 344B     		ldr	r3, .L101+20
 1535 005e 1100     		movs	r1, r2
 1536 0060 1800     		movs	r0, r3
 1537 0062 FFF7FEFF 		bl	CapSense_GetBitValue
 1538 0066 031E     		subs	r3, r0, #0
 1539 0068 1CD0     		beq	.L93
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 48


1124:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1125:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis minus */
1126:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 1540              		.loc 1 1126 0
 1541 006a 324A     		ldr	r2, .L101+24
 1542 006c 7B68     		ldr	r3, [r7, #4]
 1543 006e D318     		adds	r3, r2, r3
 1544 0070 1B78     		ldrb	r3, [r3]
 1545 0072 1900     		movs	r1, r3
 1546 0074 0E23     		movs	r3, #14
 1547 0076 FB18     		adds	r3, r7, r3
 1548 0078 1A78     		ldrb	r2, [r3]
 1549 007a 0D23     		movs	r3, #13
 1550 007c FB18     		adds	r3, r7, r3
 1551 007e 1B78     		ldrb	r3, [r3]
 1552 0080 D31A     		subs	r3, r2, r3
 1553 0082 9942     		cmp	r1, r3
 1554 0084 3BDA     		bge	.L95
1127:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1128:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 0u);
 1555              		.loc 1 1128 0
 1556 0086 7968     		ldr	r1, [r7, #4]
 1557 0088 294B     		ldr	r3, .L101+20
 1558 008a 0022     		movs	r2, #0
 1559 008c 1800     		movs	r0, r3
 1560 008e FFF7FEFF 		bl	CapSense_SetBitValue
1129:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1130:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 1561              		.loc 1 1130 0
 1562 0092 0B23     		movs	r3, #11
 1563 0094 FB18     		adds	r3, r7, r3
 1564 0096 1B78     		ldrb	r3, [r3]
 1565 0098 244A     		ldr	r2, .L101+16
 1566 009a 0C21     		movs	r1, #12
 1567 009c 7918     		adds	r1, r7, r1
 1568 009e 0978     		ldrb	r1, [r1]
 1569 00a0 D154     		strb	r1, [r2, r3]
 1570 00a2 2CE0     		b	.L95
 1571              	.L93:
1131:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1132:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1133:Generated_Source\PSoC4/CapSense_CSHL.c ****     else    /* Was off */
1134:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1135:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis plus */
1136:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 1572              		.loc 1 1136 0
 1573 00a4 234A     		ldr	r2, .L101+24
 1574 00a6 7B68     		ldr	r3, [r7, #4]
 1575 00a8 D318     		adds	r3, r2, r3
 1576 00aa 1B78     		ldrb	r3, [r3]
 1577 00ac 1900     		movs	r1, r3
 1578 00ae 0E23     		movs	r3, #14
 1579 00b0 FB18     		adds	r3, r7, r3
 1580 00b2 1A78     		ldrb	r2, [r3]
 1581 00b4 0D23     		movs	r3, #13
 1582 00b6 FB18     		adds	r3, r7, r3
 1583 00b8 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 49


 1584 00ba D318     		adds	r3, r2, r3
 1585 00bc 9942     		cmp	r1, r3
 1586 00be 16DB     		blt	.L96
1137:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1138:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex]--;
 1587              		.loc 1 1138 0
 1588 00c0 0B23     		movs	r3, #11
 1589 00c2 FB18     		adds	r3, r7, r3
 1590 00c4 1B78     		ldrb	r3, [r3]
 1591 00c6 194A     		ldr	r2, .L101+16
 1592 00c8 D25C     		ldrb	r2, [r2, r3]
 1593 00ca 013A     		subs	r2, r2, #1
 1594 00cc D1B2     		uxtb	r1, r2
 1595 00ce 174A     		ldr	r2, .L101+16
 1596 00d0 D154     		strb	r1, [r2, r3]
1139:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
1140:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(CapSense_debounceCounter[debounceIndex] == 0u)
 1597              		.loc 1 1140 0
 1598 00d2 0B23     		movs	r3, #11
 1599 00d4 FB18     		adds	r3, r7, r3
 1600 00d6 1B78     		ldrb	r3, [r3]
 1601 00d8 144A     		ldr	r2, .L101+16
 1602 00da D35C     		ldrb	r3, [r2, r3]
 1603 00dc 002B     		cmp	r3, #0
 1604 00de 0ED1     		bne	.L95
1141:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1142:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 1u);
 1605              		.loc 1 1142 0
 1606 00e0 7968     		ldr	r1, [r7, #4]
 1607 00e2 134B     		ldr	r3, .L101+20
 1608 00e4 0122     		movs	r2, #1
 1609 00e6 1800     		movs	r0, r3
 1610 00e8 FFF7FEFF 		bl	CapSense_SetBitValue
 1611 00ec 07E0     		b	.L95
 1612              	.L96:
1143:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1144:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1145:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1146:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1147:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1148:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 1613              		.loc 1 1148 0
 1614 00ee 0B23     		movs	r3, #11
 1615 00f0 FB18     		adds	r3, r7, r3
 1616 00f2 1B78     		ldrb	r3, [r3]
 1617 00f4 0D4A     		ldr	r2, .L101+16
 1618 00f6 0C21     		movs	r1, #12
 1619 00f8 7918     		adds	r1, r7, r1
 1620 00fa 0978     		ldrb	r1, [r1]
 1621 00fc D154     		strb	r1, [r2, r3]
 1622              	.L95:
1149:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1150:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1151:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1152:Generated_Source\PSoC4/CapSense_CSHL.c ****     return ((uint32)((0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor)) ? 1u : 0u));
 1623              		.loc 1 1152 0
 1624 00fe 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 50


 1625 0100 0B4B     		ldr	r3, .L101+20
 1626 0102 1100     		movs	r1, r2
 1627 0104 1800     		movs	r0, r3
 1628 0106 FFF7FEFF 		bl	CapSense_GetBitValue
 1629 010a 031E     		subs	r3, r0, #0
 1630 010c 01D0     		beq	.L98
 1631              		.loc 1 1152 0 is_stmt 0 discriminator 1
 1632 010e 0123     		movs	r3, #1
 1633 0110 00E0     		b	.L100
 1634              	.L98:
 1635              		.loc 1 1152 0 discriminator 2
 1636 0112 0023     		movs	r3, #0
 1637              	.L100:
1153:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1638              		.loc 1 1153 0 is_stmt 1 discriminator 5
 1639 0114 1800     		movs	r0, r3
 1640 0116 BD46     		mov	sp, r7
 1641 0118 04B0     		add	sp, sp, #16
 1642              		@ sp needed
 1643 011a 80BD     		pop	{r7, pc}
 1644              	.L102:
 1645              		.align	2
 1646              	.L101:
 1647 011c 00000000 		.word	CapSense_widgetNumber
 1648 0120 00000000 		.word	CapSense_fingerThreshold
 1649 0124 00000000 		.word	CapSense_hysteresis
 1650 0128 00000000 		.word	CapSense_debounce
 1651 012c 20000000 		.word	CapSense_debounceCounter.5490
 1652 0130 00000000 		.word	CapSense_sensorOnMask
 1653 0134 00000000 		.word	CapSense_sensorSignal
 1654              		.cfi_endproc
 1655              	.LFE54:
 1656              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 1657              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 1658              		.align	2
 1659              		.global	CapSense_CheckIsWidgetActive
 1660              		.code	16
 1661              		.thumb_func
 1662              		.type	CapSense_CheckIsWidgetActive, %function
 1663              	CapSense_CheckIsWidgetActive:
 1664              	.LFB55:
1154:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1155:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1156:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1157:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
1158:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1159:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1160:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1161:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of
1162:Generated_Source\PSoC4/CapSense_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account.
1163:Generated_Source\PSoC4/CapSense_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1164:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is
1165:Generated_Source\PSoC4/CapSense_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold
1166:Generated_Source\PSoC4/CapSense_CSHL.c **** *  is raised by the hysteresis amount.
1167:Generated_Source\PSoC4/CapSense_CSHL.c **** * The debounce counter added to the sensor active transition.
1168:Generated_Source\PSoC4/CapSense_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1169:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 51


1170:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1171:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1172:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1173:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1174:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are
1175:Generated_Source\PSoC4/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1176:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1177:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1178:Generated_Source\PSoC4/CapSense_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1179:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1180:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1181:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1182:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1183:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1184:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsWidgetActive(uint32 widget)
1185:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1665              		.loc 1 1185 0
 1666              		.cfi_startproc
 1667              		@ args = 0, pretend = 0, frame = 24
 1668              		@ frame_needed = 1, uses_anonymous_args = 0
 1669 0000 80B5     		push	{r7, lr}
 1670              		.cfi_def_cfa_offset 8
 1671              		.cfi_offset 7, -8
 1672              		.cfi_offset 14, -4
 1673 0002 86B0     		sub	sp, sp, #24
 1674              		.cfi_def_cfa_offset 32
 1675 0004 00AF     		add	r7, sp, #0
 1676              		.cfi_def_cfa_register 7
 1677 0006 7860     		str	r0, [r7, #4]
1186:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
 1678              		.loc 1 1186 0
 1679 0008 0023     		movs	r3, #0
 1680 000a 7B61     		str	r3, [r7, #20]
1187:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_numberOfSensors[widget] + rawIndex;
 1681              		.loc 1 1187 0
 1682 000c 0523     		movs	r3, #5
 1683 000e 1A00     		movs	r2, r3
 1684 0010 7B69     		ldr	r3, [r7, #20]
 1685 0012 D318     		adds	r3, r2, r3
 1686 0014 FB60     		str	r3, [r7, #12]
1188:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 1687              		.loc 1 1188 0
 1688 0016 0023     		movs	r3, #0
 1689 0018 3B61     		str	r3, [r7, #16]
 1690              	.L105:
1189:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1190:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Check all sensors of widget */
1191:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1192:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1193:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive((uint32)rawIndex) != 0u)
 1691              		.loc 1 1193 0
 1692 001a 7B69     		ldr	r3, [r7, #20]
 1693 001c 1800     		movs	r0, r3
 1694 001e FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 1695 0022 031E     		subs	r3, r0, #0
 1696 0024 01D0     		beq	.L104
1194:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 52


1195:Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_SENSOR_IS_ACTIVE;
 1697              		.loc 1 1195 0
 1698 0026 0123     		movs	r3, #1
 1699 0028 3B61     		str	r3, [r7, #16]
 1700              	.L104:
1196:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1197:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1701              		.loc 1 1197 0
 1702 002a 7B69     		ldr	r3, [r7, #20]
 1703 002c 0133     		adds	r3, r3, #1
 1704 002e 7B61     		str	r3, [r7, #20]
1198:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1199:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1705              		.loc 1 1199 0
 1706 0030 7A69     		ldr	r2, [r7, #20]
 1707 0032 FB68     		ldr	r3, [r7, #12]
 1708 0034 9A42     		cmp	r2, r3
 1709 0036 F0D3     		bcc	.L105
1200:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1201:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1202:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1203:Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
 1710              		.loc 1 1203 0
 1711 0038 3B69     		ldr	r3, [r7, #16]
1204:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1712              		.loc 1 1204 0
 1713 003a 1800     		movs	r0, r3
 1714 003c BD46     		mov	sp, r7
 1715 003e 06B0     		add	sp, sp, #24
 1716              		@ sp needed
 1717 0040 80BD     		pop	{r7, pc}
 1718              		.cfi_endproc
 1719              	.LFE55:
 1720              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 1721 0042 C046     		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 1722              		.align	2
 1723              		.global	CapSense_CheckIsAnyWidgetActive
 1724              		.code	16
 1725              		.thumb_func
 1726              		.type	CapSense_CheckIsAnyWidgetActive, %function
 1727              	CapSense_CheckIsAnyWidgetActive:
 1728              	.LFB56:
1205:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1206:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1207:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1208:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
1209:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1210:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1211:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1212:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares all the sensors of the CapSense_Signal[] array to their finger
1213:Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so
1214:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the CapSense_sensorOnMask[] array is up to date after calling this
1215:Generated_Source\PSoC4/CapSense_CSHL.c **** *  function.
1216:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1217:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1218:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1219:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 53


1220:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1221:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1222:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1223:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1224:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1225:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1226:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1227:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1228:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1229:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1230:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsAnyWidgetActive(void)
1231:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1729              		.loc 1 1231 0
 1730              		.cfi_startproc
 1731              		@ args = 0, pretend = 0, frame = 8
 1732              		@ frame_needed = 1, uses_anonymous_args = 0
 1733 0000 80B5     		push	{r7, lr}
 1734              		.cfi_def_cfa_offset 8
 1735              		.cfi_offset 7, -8
 1736              		.cfi_offset 14, -4
 1737 0002 82B0     		sub	sp, sp, #8
 1738              		.cfi_def_cfa_offset 16
 1739 0004 00AF     		add	r7, sp, #0
 1740              		.cfi_def_cfa_register 7
1232:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1233:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 i;
1234:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 1741              		.loc 1 1234 0
 1742 0006 0023     		movs	r3, #0
 1743 0008 3B60     		str	r3, [r7]
1235:Generated_Source\PSoC4/CapSense_CSHL.c ****     
1236:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 1744              		.loc 1 1236 0
 1745 000a 0023     		movs	r3, #0
 1746 000c 7B60     		str	r3, [r7, #4]
 1747 000e 0AE0     		b	.L108
 1748              	.L110:
1237:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1238:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 1749              		.loc 1 1238 0
 1750 0010 7B68     		ldr	r3, [r7, #4]
 1751 0012 1800     		movs	r0, r3
 1752 0014 FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 1753 0018 031E     		subs	r3, r0, #0
 1754 001a 01D0     		beq	.L109
1239:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1240:Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 1755              		.loc 1 1240 0
 1756 001c 0123     		movs	r3, #1
 1757 001e 3B60     		str	r3, [r7]
 1758              	.L109:
1236:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1759              		.loc 1 1236 0 discriminator 2
 1760 0020 7B68     		ldr	r3, [r7, #4]
 1761 0022 0133     		adds	r3, r3, #1
 1762 0024 7B60     		str	r3, [r7, #4]
 1763              	.L108:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 54


1236:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1764              		.loc 1 1236 0 is_stmt 0 discriminator 1
 1765 0026 7B68     		ldr	r3, [r7, #4]
 1766 0028 002B     		cmp	r3, #0
 1767 002a F1D0     		beq	.L110
1241:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1242:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1243:Generated_Source\PSoC4/CapSense_CSHL.c ****     
1244:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1245:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1246:Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
 1768              		.loc 1 1246 0 is_stmt 1
 1769 002c 3B68     		ldr	r3, [r7]
1247:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1770              		.loc 1 1247 0
 1771 002e 1800     		movs	r0, r3
 1772 0030 BD46     		mov	sp, r7
 1773 0032 02B0     		add	sp, sp, #8
 1774              		@ sp needed
 1775 0034 80BD     		pop	{r7, pc}
 1776              		.cfi_endproc
 1777              	.LFE56:
 1778              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 1779 0036 C046     		.section	.text.CapSense_EnableWidget,"ax",%progbits
 1780              		.align	2
 1781              		.global	CapSense_EnableWidget
 1782              		.code	16
 1783              		.thumb_func
 1784              		.type	CapSense_EnableWidget, %function
 1785              	CapSense_EnableWidget:
 1786              	.LFB57:
1248:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1249:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1250:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1251:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
1252:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1253:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1254:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1255:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1256:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1257:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1258:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1259:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1260:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1261:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1262:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1263:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1264:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1265:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1266:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1267:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1268:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1269:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1270:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
1271:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
1272:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1273:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 55


1274:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1275:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1276:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1277:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_EnableWidget(uint32 widget)
1278:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1787              		.loc 1 1278 0
 1788              		.cfi_startproc
 1789              		@ args = 0, pretend = 0, frame = 16
 1790              		@ frame_needed = 1, uses_anonymous_args = 0
 1791 0000 80B5     		push	{r7, lr}
 1792              		.cfi_def_cfa_offset 8
 1793              		.cfi_offset 7, -8
 1794              		.cfi_offset 14, -4
 1795 0002 84B0     		sub	sp, sp, #16
 1796              		.cfi_def_cfa_offset 24
 1797 0004 00AF     		add	r7, sp, #0
 1798              		.cfi_def_cfa_register 7
 1799 0006 7860     		str	r0, [r7, #4]
1279:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1280:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1800              		.loc 1 1280 0
 1801 0008 0F23     		movs	r3, #15
 1802 000a FB18     		adds	r3, r7, r3
 1803 000c 0022     		movs	r2, #0
 1804 000e 1A70     		strb	r2, [r3]
1281:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1805              		.loc 1 1281 0
 1806 0010 0521     		movs	r1, #5
 1807 0012 0E23     		movs	r3, #14
 1808 0014 FB18     		adds	r3, r7, r3
 1809 0016 0F22     		movs	r2, #15
 1810 0018 BA18     		adds	r2, r7, r2
 1811 001a 1278     		ldrb	r2, [r2]
 1812 001c 8A18     		adds	r2, r1, r2
 1813 001e 1A70     		strb	r2, [r3]
 1814              	.L113:
1282:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1283:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Enable all sensors of widget */
1284:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1285:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1286:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 1u);
 1815              		.loc 1 1286 0 discriminator 1
 1816 0020 0F23     		movs	r3, #15
 1817 0022 FB18     		adds	r3, r7, r3
 1818 0024 1978     		ldrb	r1, [r3]
 1819 0026 0C4B     		ldr	r3, .L114
 1820 0028 0122     		movs	r2, #1
 1821 002a 1800     		movs	r0, r3
 1822 002c FFF7FEFF 		bl	CapSense_SetBitValue
1287:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1823              		.loc 1 1287 0 discriminator 1
 1824 0030 0F23     		movs	r3, #15
 1825 0032 FB18     		adds	r3, r7, r3
 1826 0034 1A78     		ldrb	r2, [r3]
 1827 0036 0F23     		movs	r3, #15
 1828 0038 FB18     		adds	r3, r7, r3
 1829 003a 0132     		adds	r2, r2, #1
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 56


 1830 003c 1A70     		strb	r2, [r3]
1288:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1289:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1831              		.loc 1 1289 0 discriminator 1
 1832 003e 0F23     		movs	r3, #15
 1833 0040 FA18     		adds	r2, r7, r3
 1834 0042 0E23     		movs	r3, #14
 1835 0044 FB18     		adds	r3, r7, r3
 1836 0046 1278     		ldrb	r2, [r2]
 1837 0048 1B78     		ldrb	r3, [r3]
 1838 004a 9A42     		cmp	r2, r3
 1839 004c E8D3     		bcc	.L113
1290:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1840              		.loc 1 1290 0
 1841 004e C046     		nop
 1842 0050 BD46     		mov	sp, r7
 1843 0052 04B0     		add	sp, sp, #16
 1844              		@ sp needed
 1845 0054 80BD     		pop	{r7, pc}
 1846              	.L115:
 1847 0056 C046     		.align	2
 1848              	.L114:
 1849 0058 00000000 		.word	CapSense_sensorEnableMask
 1850              		.cfi_endproc
 1851              	.LFE57:
 1852              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 1853              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 1854              		.align	2
 1855              		.global	CapSense_DisableWidget
 1856              		.code	16
 1857              		.thumb_func
 1858              		.type	CapSense_DisableWidget, %function
 1859              	CapSense_DisableWidget:
 1860              	.LFB58:
1291:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1292:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1293:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1294:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
1295:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1296:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1297:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1298:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1299:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1300:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1301:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1302:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1303:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1304:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1305:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1306:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1307:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1308:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1309:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1310:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1311:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1312:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1313:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor isn't scanned by CapSense_ScanEnabledWidgets().
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 57


1314:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is scanned by CapSense_ScanEnabledWidgets().
1315:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1316:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1317:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1318:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1319:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1320:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_DisableWidget(uint32 widget)
1321:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1861              		.loc 1 1321 0
 1862              		.cfi_startproc
 1863              		@ args = 0, pretend = 0, frame = 16
 1864              		@ frame_needed = 1, uses_anonymous_args = 0
 1865 0000 80B5     		push	{r7, lr}
 1866              		.cfi_def_cfa_offset 8
 1867              		.cfi_offset 7, -8
 1868              		.cfi_offset 14, -4
 1869 0002 84B0     		sub	sp, sp, #16
 1870              		.cfi_def_cfa_offset 24
 1871 0004 00AF     		add	r7, sp, #0
 1872              		.cfi_def_cfa_register 7
 1873 0006 7860     		str	r0, [r7, #4]
1322:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1874              		.loc 1 1322 0
 1875 0008 0F23     		movs	r3, #15
 1876 000a FB18     		adds	r3, r7, r3
 1877 000c 0022     		movs	r2, #0
 1878 000e 1A70     		strb	r2, [r3]
1323:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1879              		.loc 1 1323 0
 1880 0010 0521     		movs	r1, #5
 1881 0012 0E23     		movs	r3, #14
 1882 0014 FB18     		adds	r3, r7, r3
 1883 0016 0F22     		movs	r2, #15
 1884 0018 BA18     		adds	r2, r7, r2
 1885 001a 1278     		ldrb	r2, [r2]
 1886 001c 8A18     		adds	r2, r1, r2
 1887 001e 1A70     		strb	r2, [r3]
 1888              	.L117:
1324:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1325:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Disable all sensors of widget */
1326:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1327:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1328:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1329:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 0u);
 1889              		.loc 1 1329 0 discriminator 1
 1890 0020 0F23     		movs	r3, #15
 1891 0022 FB18     		adds	r3, r7, r3
 1892 0024 1978     		ldrb	r1, [r3]
 1893 0026 0C4B     		ldr	r3, .L118
 1894 0028 0022     		movs	r2, #0
 1895 002a 1800     		movs	r0, r3
 1896 002c FFF7FEFF 		bl	CapSense_SetBitValue
1330:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1897              		.loc 1 1330 0 discriminator 1
 1898 0030 0F23     		movs	r3, #15
 1899 0032 FB18     		adds	r3, r7, r3
 1900 0034 1A78     		ldrb	r2, [r3]
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 58


 1901 0036 0F23     		movs	r3, #15
 1902 0038 FB18     		adds	r3, r7, r3
 1903 003a 0132     		adds	r2, r2, #1
 1904 003c 1A70     		strb	r2, [r3]
1331:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1332:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1905              		.loc 1 1332 0 discriminator 1
 1906 003e 0F23     		movs	r3, #15
 1907 0040 FA18     		adds	r2, r7, r3
 1908 0042 0E23     		movs	r3, #14
 1909 0044 FB18     		adds	r3, r7, r3
 1910 0046 1278     		ldrb	r2, [r2]
 1911 0048 1B78     		ldrb	r3, [r3]
 1912 004a 9A42     		cmp	r2, r3
 1913 004c E8D3     		bcc	.L117
1333:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1914              		.loc 1 1333 0
 1915 004e C046     		nop
 1916 0050 BD46     		mov	sp, r7
 1917 0052 04B0     		add	sp, sp, #16
 1918              		@ sp needed
 1919 0054 80BD     		pop	{r7, pc}
 1920              	.L119:
 1921 0056 C046     		.align	2
 1922              	.L118:
 1923 0058 00000000 		.word	CapSense_sensorEnableMask
 1924              		.cfi_endproc
 1925              	.LFE58:
 1926              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 1927              		.section	.text.CapSense_FindMaximum,"ax",%progbits
 1928              		.align	2
 1929              		.global	CapSense_FindMaximum
 1930              		.code	16
 1931              		.thumb_func
 1932              		.type	CapSense_FindMaximum, %function
 1933              	CapSense_FindMaximum:
 1934              	.LFB59:
1334:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1335:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1336:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1337:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1338:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
1339:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1340:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1341:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1342:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks
1343:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[] within a defined centroid and
1344:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are
1345:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  ignored.
1346:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1347:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1348:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1349:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1350:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1351:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:  Start index of centroid in CapSense_sensorSignal[] array.
1352:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
1353:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshold.
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 59


1354:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
1355:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1356:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1357:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1358:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1359:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1360:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1361:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_startOfSlider[] - contains the index of the first slider element
1362:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1363:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1364:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1365:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1366:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1367:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_IS_DIPLEX_SLIDER)
1368:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 *d
1369:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
1370:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
1371:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1372:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1935              		.loc 1 1372 0
 1936              		.cfi_startproc
 1937              		@ args = 0, pretend = 0, frame = 16
 1938              		@ frame_needed = 1, uses_anonymous_args = 0
 1939 0000 90B5     		push	{r4, r7, lr}
 1940              		.cfi_def_cfa_offset 12
 1941              		.cfi_offset 4, -12
 1942              		.cfi_offset 7, -8
 1943              		.cfi_offset 14, -4
 1944 0002 85B0     		sub	sp, sp, #20
 1945              		.cfi_def_cfa_offset 32
 1946 0004 00AF     		add	r7, sp, #0
 1947              		.cfi_def_cfa_register 7
 1948 0006 0400     		movs	r4, r0
 1949 0008 0800     		movs	r0, r1
 1950 000a 1100     		movs	r1, r2
 1951 000c FB1D     		adds	r3, r7, #7
 1952 000e 221C     		adds	r2, r4, #0
 1953 0010 1A70     		strb	r2, [r3]
 1954 0012 BB1D     		adds	r3, r7, #6
 1955 0014 021C     		adds	r2, r0, #0
 1956 0016 1A70     		strb	r2, [r3]
 1957 0018 7B1D     		adds	r3, r7, #5
 1958 001a 0A1C     		adds	r2, r1, #0
 1959 001c 1A70     		strb	r2, [r3]
1373:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
1374:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1375:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curPos = 0u;
1376:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No centroid at Start */
1377:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
1378:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1379:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Biggest centroid is zero */
1380:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1381:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1382:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1383:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum = CapSense_MAXIMUM_CENTROID;
 1960              		.loc 1 1383 0
 1961 001e 0E23     		movs	r3, #14
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 60


 1962 0020 FB18     		adds	r3, r7, r3
 1963 0022 FF22     		movs	r2, #255
 1964 0024 1A70     		strb	r2, [r3]
1384:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1385:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 temp = 0u;
 1965              		.loc 1 1385 0
 1966 0026 0D23     		movs	r3, #13
 1967 0028 FB18     		adds	r3, r7, r3
 1968 002a 0022     		movs	r2, #0
 1969 002c 1A70     		strb	r2, [r3]
1386:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset];
 1970              		.loc 1 1386 0
 1971 002e FB1D     		adds	r3, r7, #7
 1972 0030 1A78     		ldrb	r2, [r3]
 1973 0032 204B     		ldr	r3, .L125
 1974 0034 D318     		adds	r3, r2, r3
 1975 0036 BB60     		str	r3, [r7, #8]
1387:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1388:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1389:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(diplex != 0u)
1390:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1391:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Initialize */
1392:Generated_Source\PSoC4/CapSense_CSHL.c ****                 i = 0u;
1393:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1394:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
1395:Generated_Source\PSoC4/CapSense_CSHL.c ****                 count <<= 1u;
1396:Generated_Source\PSoC4/CapSense_CSHL.c ****                 while(1u)
1397:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1398:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1399:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1400:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (curCtrdStartPos == CapSense_MAXIMUM_CENTROID)
1401:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1402:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Start of centroid */
1403:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = i;
1404:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1405:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1406:Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
1407:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1408:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1409:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1410:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1411:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1412:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1413:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
1414:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1415:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* We are at the end of current */
1416:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1417:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1418:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1419:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1420:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1421:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1422:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize = 0u;
1423:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1424:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1425:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1426:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 61


1427:Generated_Source\PSoC4/CapSense_CSHL.c ****                     i++;
1428:Generated_Source\PSoC4/CapSense_CSHL.c ****                     curPos = diplex[i];
1429:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(i == count)
1430:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1431:Generated_Source\PSoC4/CapSense_CSHL.c ****                         break;
1432:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1433:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1434:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1435:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1436:Generated_Source\PSoC4/CapSense_CSHL.c ****                        We are at the end of current */
1437:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize)
1438:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1439:Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1440:Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1441:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1442:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1443:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1444:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1445:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Without diplexing */
1446:Generated_Source\PSoC4/CapSense_CSHL.c ****                 biggestCtrdSize = count;
1447:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1448:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1449:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1450:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Check centroid size */
1451:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
1452:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1453:Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
1454:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1455:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
1456:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1457:Generated_Source\PSoC4/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1458:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1459:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1460:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (diplex == 0u)
1461:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1462:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = i;
1463:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1464:Generated_Source\PSoC4/CapSense_CSHL.c ****                             else
1465:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1466:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = diplex[i];
1467:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1468:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)
1469:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curPos = diplex[i];
1470:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1471:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Looking for greater element within centroid */
1472:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1473:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1474:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1475:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1476:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 maximum = i;
1477:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
1478:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1479:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1480:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1481:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1482:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1483:Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 62


 1976              		.loc 1 1483 0
 1977 0038 0F23     		movs	r3, #15
 1978 003a FB18     		adds	r3, r7, r3
 1979 003c 0022     		movs	r2, #0
 1980 003e 1A70     		strb	r2, [r3]
 1981 0040 2AE0     		b	.L121
 1982              	.L123:
1484:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1485:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Looking for greater element within centroid */
1486:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 1983              		.loc 1 1486 0
 1984 0042 0F23     		movs	r3, #15
 1985 0044 FB18     		adds	r3, r7, r3
 1986 0046 1B78     		ldrb	r3, [r3]
 1987 0048 BA68     		ldr	r2, [r7, #8]
 1988 004a D318     		adds	r3, r2, r3
 1989 004c 1B78     		ldrb	r3, [r3]
 1990 004e 7A1D     		adds	r2, r7, #5
 1991 0050 1278     		ldrb	r2, [r2]
 1992 0052 9A42     		cmp	r2, r3
 1993 0054 19D2     		bcs	.L122
1487:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1488:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
 1994              		.loc 1 1488 0
 1995 0056 0F23     		movs	r3, #15
 1996 0058 FB18     		adds	r3, r7, r3
 1997 005a 1B78     		ldrb	r3, [r3]
 1998 005c BA68     		ldr	r2, [r7, #8]
 1999 005e D318     		adds	r3, r2, r3
 2000 0060 1B78     		ldrb	r3, [r3]
 2001 0062 0D22     		movs	r2, #13
 2002 0064 BA18     		adds	r2, r7, r2
 2003 0066 1278     		ldrb	r2, [r2]
 2004 0068 9A42     		cmp	r2, r3
 2005 006a 0ED2     		bcs	.L122
1489:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1490:Generated_Source\PSoC4/CapSense_CSHL.c ****                         maximum = i;
 2006              		.loc 1 1490 0
 2007 006c 0E23     		movs	r3, #14
 2008 006e FB18     		adds	r3, r7, r3
 2009 0070 0F22     		movs	r2, #15
 2010 0072 BA18     		adds	r2, r7, r2
 2011 0074 1278     		ldrb	r2, [r2]
 2012 0076 1A70     		strb	r2, [r3]
1491:Generated_Source\PSoC4/CapSense_CSHL.c ****                         temp = startOfSlider[i];
 2013              		.loc 1 1491 0
 2014 0078 0F23     		movs	r3, #15
 2015 007a FB18     		adds	r3, r7, r3
 2016 007c 1B78     		ldrb	r3, [r3]
 2017 007e BA68     		ldr	r2, [r7, #8]
 2018 0080 D218     		adds	r2, r2, r3
 2019 0082 0D23     		movs	r3, #13
 2020 0084 FB18     		adds	r3, r7, r3
 2021 0086 1278     		ldrb	r2, [r2]
 2022 0088 1A70     		strb	r2, [r3]
 2023              	.L122:
1483:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 63


 2024              		.loc 1 1483 0 discriminator 2
 2025 008a 0F23     		movs	r3, #15
 2026 008c FB18     		adds	r3, r7, r3
 2027 008e 1A78     		ldrb	r2, [r3]
 2028 0090 0F23     		movs	r3, #15
 2029 0092 FB18     		adds	r3, r7, r3
 2030 0094 0132     		adds	r2, r2, #1
 2031 0096 1A70     		strb	r2, [r3]
 2032              	.L121:
1483:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 2033              		.loc 1 1483 0 is_stmt 0 discriminator 1
 2034 0098 0F23     		movs	r3, #15
 2035 009a FA18     		adds	r2, r7, r3
 2036 009c BB1D     		adds	r3, r7, #6
 2037 009e 1278     		ldrb	r2, [r2]
 2038 00a0 1B78     		ldrb	r3, [r3]
 2039 00a2 9A42     		cmp	r2, r3
 2040 00a4 CDD3     		bcc	.L123
1492:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1493:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1494:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1495:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1496:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (maximum);
 2041              		.loc 1 1496 0 is_stmt 1
 2042 00a6 0E23     		movs	r3, #14
 2043 00a8 FB18     		adds	r3, r7, r3
 2044 00aa 1B78     		ldrb	r3, [r3]
1497:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2045              		.loc 1 1497 0
 2046 00ac 1800     		movs	r0, r3
 2047 00ae BD46     		mov	sp, r7
 2048 00b0 05B0     		add	sp, sp, #20
 2049              		@ sp needed
 2050 00b2 90BD     		pop	{r4, r7, pc}
 2051              	.L126:
 2052              		.align	2
 2053              	.L125:
 2054 00b4 00000000 		.word	CapSense_sensorSignal
 2055              		.cfi_endproc
 2056              	.LFE59:
 2057              		.size	CapSense_FindMaximum, .-CapSense_FindMaximum
 2058              		.global	__aeabi_idiv
 2059              		.section	.text.CapSense_CalcCentroid,"ax",%progbits
 2060              		.align	2
 2061              		.global	CapSense_CalcCentroid
 2062              		.code	16
 2063              		.thumb_func
 2064              		.type	CapSense_CalcCentroid, %function
 2065              	CapSense_CalcCentroid:
 2066              	.LFB60:
1498:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1499:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1500:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1501:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
1502:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1503:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1504:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 64


1505:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1506:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution.
1507:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1508:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1509:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  type:  widget type.
1510:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
1511:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1512:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:   Start index of centroid in CapSense_sensorSignal[] array.
1513:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1514:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1515:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  API resolution.
1516:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1517:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1518:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1519:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the slider.
1520:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1521:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1522:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1523:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1524:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1525:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1526:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1527:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
1528:Generated_Source\PSoC4/CapSense_CSHL.c **** #else
1529:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1530:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
1531:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1532:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2067              		.loc 1 1532 0
 2068              		.cfi_startproc
 2069              		@ args = 4, pretend = 0, frame = 32
 2070              		@ frame_needed = 1, uses_anonymous_args = 0
 2071 0000 B0B5     		push	{r4, r5, r7, lr}
 2072              		.cfi_def_cfa_offset 16
 2073              		.cfi_offset 4, -16
 2074              		.cfi_offset 5, -12
 2075              		.cfi_offset 7, -8
 2076              		.cfi_offset 14, -4
 2077 0002 88B0     		sub	sp, sp, #32
 2078              		.cfi_def_cfa_offset 48
 2079 0004 00AF     		add	r7, sp, #0
 2080              		.cfi_def_cfa_register 7
 2081 0006 0500     		movs	r5, r0
 2082 0008 0C00     		movs	r4, r1
 2083 000a 1000     		movs	r0, r2
 2084 000c 1900     		movs	r1, r3
 2085 000e FB1D     		adds	r3, r7, #7
 2086 0010 2A1C     		adds	r2, r5, #0
 2087 0012 1A70     		strb	r2, [r3]
 2088 0014 BB1D     		adds	r3, r7, #6
 2089 0016 221C     		adds	r2, r4, #0
 2090 0018 1A70     		strb	r2, [r3]
 2091 001a 7B1D     		adds	r3, r7, #5
 2092 001c 021C     		adds	r2, r0, #0
 2093 001e 1A70     		strb	r2, [r3]
 2094 0020 BB1C     		adds	r3, r7, #2
 2095 0022 0A1C     		adds	r2, r1, #0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 65


 2096 0024 1A80     		strh	r2, [r3]
1533:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1534:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posPrev;
1535:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posNext;
1536:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1537:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1538:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Helps during centroid calculation */
1539:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1540:Generated_Source\PSoC4/CapSense_CSHL.c ****             static uint8 CapSense_centroid[3u];
1541:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1542:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1543:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1544:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 pos;
1545:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1546:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1547:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 position;
1548:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 numerator;
1549:Generated_Source\PSoC4/CapSense_CSHL.c ****         int32 denominator;
1550:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1551:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8  *startOfSlider = &CapSense_sensorSignal[offset];
 2097              		.loc 1 1551 0
 2098 0026 BB1D     		adds	r3, r7, #6
 2099 0028 1A78     		ldrb	r2, [r3]
 2100 002a 5B4B     		ldr	r3, .L137
 2101 002c D318     		adds	r3, r2, r3
 2102 002e BB61     		str	r3, [r7, #24]
1552:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1553:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1554:Generated_Source\PSoC4/CapSense_CSHL.c ****             posPrev = 0u;
 2103              		.loc 1 1554 0
 2104 0030 1F23     		movs	r3, #31
 2105 0032 FB18     		adds	r3, r7, r3
 2106 0034 0022     		movs	r2, #0
 2107 0036 1A70     		strb	r2, [r3]
1555:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1556:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1557:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1558:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1559:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1560:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1561:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1562:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1563:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1564:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1565:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1566:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1567:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1568:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1569:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1570:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
1571:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1572:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1573:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1574:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1575:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1576:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1577:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 66


1578:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1579:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1580:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1581:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1582:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1583:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1584:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1585:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1586:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1587:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1588:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1589:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1590:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1591:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1592:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1593:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(diplex == 0u)
1594:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1595:Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = maximum;
1596:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1597:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = maximum + 1u;
1598:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1599:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1600:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1601:Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1602:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1603:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1604:Generated_Source\PSoC4/CapSense_CSHL.c ****                         count <<= 1u;
1605:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1606:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1607:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1608:Generated_Source\PSoC4/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1609:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1610:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1611:Generated_Source\PSoC4/CapSense_CSHL.c ****                     count <<= 1u;
1612:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1613:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1614:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (maximum >= 1u)
 2108              		.loc 1 1614 0
 2109 0038 FB1D     		adds	r3, r7, #7
 2110 003a 1B78     		ldrb	r3, [r3]
 2111 003c 002B     		cmp	r3, #0
 2112 003e 05D0     		beq	.L128
1615:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1616:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
 2113              		.loc 1 1616 0
 2114 0040 1F23     		movs	r3, #31
 2115 0042 FB18     		adds	r3, r7, r3
 2116 0044 FA1D     		adds	r2, r7, #7
 2117 0046 1278     		ldrb	r2, [r2]
 2118 0048 013A     		subs	r2, r2, #1
 2119 004a 1A70     		strb	r2, [r3]
 2120              	.L128:
1617:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1618:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = maximum + 1u;
 2121              		.loc 1 1618 0
 2122 004c 1723     		movs	r3, #23
 2123 004e FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 67


 2124 0050 FA1D     		adds	r2, r7, #7
 2125 0052 1278     		ldrb	r2, [r2]
 2126 0054 0132     		adds	r2, r2, #1
 2127 0056 1A70     		strb	r2, [r3]
1619:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1620:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1621:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1622:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1623:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1624:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1625:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
 2128              		.loc 1 1625 0
 2129 0058 FB1D     		adds	r3, r7, #7
 2130 005a 1B78     		ldrb	r3, [r3]
 2131 005c BA69     		ldr	r2, [r7, #24]
 2132 005e D318     		adds	r3, r2, r3
 2133 0060 1A78     		ldrb	r2, [r3]
 2134 0062 4E4B     		ldr	r3, .L137+4
 2135 0064 5A70     		strb	r2, [r3, #1]
1626:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1627:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1628:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1629:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
 2136              		.loc 1 1629 0
 2137 0066 FB1D     		adds	r3, r7, #7
 2138 0068 1B78     		ldrb	r3, [r3]
 2139 006a 002B     		cmp	r3, #0
 2140 006c 0BD1     		bne	.L129
1630:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1631:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
 2141              		.loc 1 1631 0
 2142 006e 4B4B     		ldr	r3, .L137+4
 2143 0070 0022     		movs	r2, #0
 2144 0072 1A70     		strb	r2, [r3]
1632:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
 2145              		.loc 1 1632 0
 2146 0074 1723     		movs	r3, #23
 2147 0076 FB18     		adds	r3, r7, r3
 2148 0078 1B78     		ldrb	r3, [r3]
 2149 007a BA69     		ldr	r2, [r7, #24]
 2150 007c D318     		adds	r3, r2, r3
 2151 007e 1A78     		ldrb	r2, [r3]
 2152 0080 464B     		ldr	r3, .L137+4
 2153 0082 9A70     		strb	r2, [r3, #2]
 2154 0084 22E0     		b	.L130
 2155              	.L129:
1633:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1634:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
 2156              		.loc 1 1634 0
 2157 0086 FB1D     		adds	r3, r7, #7
 2158 0088 1A78     		ldrb	r2, [r3]
 2159 008a 7B1D     		adds	r3, r7, #5
 2160 008c 1B78     		ldrb	r3, [r3]
 2161 008e 013B     		subs	r3, r3, #1
 2162 0090 9A42     		cmp	r2, r3
 2163 0092 0BD1     		bne	.L131
1635:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 68


1636:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
 2164              		.loc 1 1636 0
 2165 0094 1F23     		movs	r3, #31
 2166 0096 FB18     		adds	r3, r7, r3
 2167 0098 1B78     		ldrb	r3, [r3]
 2168 009a BA69     		ldr	r2, [r7, #24]
 2169 009c D318     		adds	r3, r2, r3
 2170 009e 1A78     		ldrb	r2, [r3]
 2171 00a0 3E4B     		ldr	r3, .L137+4
 2172 00a2 1A70     		strb	r2, [r3]
1637:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
 2173              		.loc 1 1637 0
 2174 00a4 3D4B     		ldr	r3, .L137+4
 2175 00a6 0022     		movs	r2, #0
 2176 00a8 9A70     		strb	r2, [r3, #2]
 2177 00aa 0FE0     		b	.L130
 2178              	.L131:
1638:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1639:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1640:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1641:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
 2179              		.loc 1 1641 0
 2180 00ac 1F23     		movs	r3, #31
 2181 00ae FB18     		adds	r3, r7, r3
 2182 00b0 1B78     		ldrb	r3, [r3]
 2183 00b2 BA69     		ldr	r2, [r7, #24]
 2184 00b4 D318     		adds	r3, r2, r3
 2185 00b6 1A78     		ldrb	r2, [r3]
 2186 00b8 384B     		ldr	r3, .L137+4
 2187 00ba 1A70     		strb	r2, [r3]
1642:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
 2188              		.loc 1 1642 0
 2189 00bc 1723     		movs	r3, #23
 2190 00be FB18     		adds	r3, r7, r3
 2191 00c0 1B78     		ldrb	r3, [r3]
 2192 00c2 BA69     		ldr	r2, [r7, #24]
 2193 00c4 D318     		adds	r3, r2, r3
 2194 00c6 1A78     		ldrb	r2, [r3]
 2195 00c8 344B     		ldr	r3, .L137+4
 2196 00ca 9A70     		strb	r2, [r3, #2]
 2197              	.L130:
1643:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1644:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_BASIC_C
1645:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1646:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1647:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1648:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1649:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1650:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1651:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
 2198              		.loc 1 1651 0
 2199 00cc 334B     		ldr	r3, .L137+4
 2200 00ce 1B78     		ldrb	r3, [r3]
 2201 00d0 3022     		movs	r2, #48
 2202 00d2 BA18     		adds	r2, r7, r2
 2203 00d4 1278     		ldrb	r2, [r2]
 2204 00d6 9A42     		cmp	r2, r3
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 69


 2205 00d8 09D2     		bcs	.L132
1652:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1653:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
 2206              		.loc 1 1653 0
 2207 00da 304B     		ldr	r3, .L137+4
 2208 00dc 1A78     		ldrb	r2, [r3]
 2209 00de 3023     		movs	r3, #48
 2210 00e0 FB18     		adds	r3, r7, r3
 2211 00e2 1B78     		ldrb	r3, [r3]
 2212 00e4 D31A     		subs	r3, r2, r3
 2213 00e6 DAB2     		uxtb	r2, r3
 2214 00e8 2C4B     		ldr	r3, .L137+4
 2215 00ea 1A70     		strb	r2, [r3]
 2216 00ec 02E0     		b	.L133
 2217              	.L132:
1654:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1655:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1656:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1657:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
 2218              		.loc 1 1657 0
 2219 00ee 2B4B     		ldr	r3, .L137+4
 2220 00f0 0022     		movs	r2, #0
 2221 00f2 1A70     		strb	r2, [r3]
 2222              	.L133:
1658:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1659:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1660:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1661:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
 2223              		.loc 1 1661 0
 2224 00f4 294B     		ldr	r3, .L137+4
 2225 00f6 5A78     		ldrb	r2, [r3, #1]
 2226 00f8 3023     		movs	r3, #48
 2227 00fa FB18     		adds	r3, r7, r3
 2228 00fc 1B78     		ldrb	r3, [r3]
 2229 00fe D31A     		subs	r3, r2, r3
 2230 0100 DAB2     		uxtb	r2, r3
 2231 0102 264B     		ldr	r3, .L137+4
 2232 0104 5A70     		strb	r2, [r3, #1]
1662:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1663:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1664:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
 2233              		.loc 1 1664 0
 2234 0106 254B     		ldr	r3, .L137+4
 2235 0108 9B78     		ldrb	r3, [r3, #2]
 2236 010a 3022     		movs	r2, #48
 2237 010c BA18     		adds	r2, r7, r2
 2238 010e 1278     		ldrb	r2, [r2]
 2239 0110 9A42     		cmp	r2, r3
 2240 0112 09D2     		bcs	.L134
1665:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1666:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
 2241              		.loc 1 1666 0
 2242 0114 214B     		ldr	r3, .L137+4
 2243 0116 9A78     		ldrb	r2, [r3, #2]
 2244 0118 3023     		movs	r3, #48
 2245 011a FB18     		adds	r3, r7, r3
 2246 011c 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 70


 2247 011e D31A     		subs	r3, r2, r3
 2248 0120 DAB2     		uxtb	r2, r3
 2249 0122 1E4B     		ldr	r3, .L137+4
 2250 0124 9A70     		strb	r2, [r3, #2]
 2251 0126 02E0     		b	.L135
 2252              	.L134:
1667:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1668:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1669:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1670:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
 2253              		.loc 1 1670 0
 2254 0128 1C4B     		ldr	r3, .L137+4
 2255 012a 0022     		movs	r2, #0
 2256 012c 9A70     		strb	r2, [r3, #2]
 2257              	.L135:
1671:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1672:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1673:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1674:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1675:Generated_Source\PSoC4/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
 2258              		.loc 1 1675 0
 2259 012e 1B4B     		ldr	r3, .L137+4
 2260 0130 9B78     		ldrb	r3, [r3, #2]
 2261 0132 1A00     		movs	r2, r3
1676:Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
 2262              		.loc 1 1676 0
 2263 0134 194B     		ldr	r3, .L137+4
 2264 0136 1B78     		ldrb	r3, [r3]
1675:Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
 2265              		.loc 1 1675 0
 2266 0138 D31A     		subs	r3, r2, r3
 2267 013a 3B61     		str	r3, [r7, #16]
1677:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1678:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1679:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] +
 2268              		.loc 1 1679 0
 2269 013c 174B     		ldr	r3, .L137+4
 2270 013e 1B78     		ldrb	r3, [r3]
 2271 0140 1A00     		movs	r2, r3
1680:Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] +
 2272              		.loc 1 1680 0
 2273 0142 164B     		ldr	r3, .L137+4
 2274 0144 5B78     		ldrb	r3, [r3, #1]
1679:Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] +
 2275              		.loc 1 1679 0
 2276 0146 D318     		adds	r3, r2, r3
1681:Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
 2277              		.loc 1 1681 0
 2278 0148 144A     		ldr	r2, .L137+4
 2279 014a 9278     		ldrb	r2, [r2, #2]
1679:Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] +
 2280              		.loc 1 1679 0
 2281 014c 9B18     		adds	r3, r3, r2
 2282 014e FB60     		str	r3, [r7, #12]
1682:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1683:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1684:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 71


 2283              		.loc 1 1684 0
 2284 0150 3B69     		ldr	r3, [r7, #16]
 2285 0152 1B02     		lsls	r3, r3, #8
 2286 0154 F968     		ldr	r1, [r7, #12]
 2287 0156 1800     		movs	r0, r3
 2288 0158 FFF7FEFF 		bl	__aeabi_idiv
 2289 015c 0300     		movs	r3, r0
 2290 015e 1A00     		movs	r2, r3
 2291 0160 FB1D     		adds	r3, r7, #7
 2292 0162 1B78     		ldrb	r3, [r3]
 2293 0164 1B02     		lsls	r3, r3, #8
 2294 0166 D318     		adds	r3, r2, r3
 2295 0168 FB60     		str	r3, [r7, #12]
1685:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1686:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1687:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1688:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(denominator < 0)
1689:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1690:Generated_Source\PSoC4/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1691:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1692:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1693:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1694:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator *= (int16)resolution;
 2296              		.loc 1 1694 0
 2297 016a BB1C     		adds	r3, r7, #2
 2298 016c 0022     		movs	r2, #0
 2299 016e 9B5E     		ldrsh	r3, [r3, r2]
 2300 0170 1A00     		movs	r2, r3
 2301 0172 FB68     		ldr	r3, [r7, #12]
 2302 0174 5343     		muls	r3, r2
 2303 0176 FB60     		str	r3, [r7, #12]
1695:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1696:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Round result and put it to uint8 */
1697:Generated_Source\PSoC4/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
 2304              		.loc 1 1697 0
 2305 0178 FB68     		ldr	r3, [r7, #12]
 2306 017a FE22     		movs	r2, #254
 2307 017c D201     		lsls	r2, r2, #7
 2308 017e 9446     		mov	ip, r2
 2309 0180 6344     		add	r3, r3, ip
 2310 0182 1A0C     		lsrs	r2, r3, #16
 2311 0184 0B23     		movs	r3, #11
 2312 0186 FB18     		adds	r3, r7, r3
 2313 0188 1A70     		strb	r2, [r3]
1698:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1699:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
 2314              		.loc 1 1699 0
 2315 018a 0B23     		movs	r3, #11
 2316 018c FB18     		adds	r3, r7, r3
 2317 018e 1B78     		ldrb	r3, [r3]
1700:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2318              		.loc 1 1700 0
 2319 0190 1800     		movs	r0, r3
 2320 0192 BD46     		mov	sp, r7
 2321 0194 08B0     		add	sp, sp, #32
 2322              		@ sp needed
 2323 0196 B0BD     		pop	{r4, r5, r7, pc}
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 72


 2324              	.L138:
 2325              		.align	2
 2326              	.L137:
 2327 0198 00000000 		.word	CapSense_sensorSignal
 2328 019c 24000000 		.word	CapSense_centroid.5542
 2329              		.cfi_endproc
 2330              	.LFE60:
 2331              		.size	CapSense_CalcCentroid, .-CapSense_CalcCentroid
 2332              		.section	.text.CapSense_GetCentroidPos,"ax",%progbits
 2333              		.align	2
 2334              		.global	CapSense_GetCentroidPos
 2335              		.code	16
 2336              		.thumb_func
 2337              		.type	CapSense_GetCentroidPos, %function
 2338              	CapSense_GetCentroidPos:
 2339              	.LFB61:
1701:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1702:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1703:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1704:Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1705:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1706:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1707:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1708:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1709:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1710:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1711:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1712:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1713:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1714:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1715:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1716:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1717:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1718:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__LS           5
1719:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1720:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1721:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the linear slider.
1722:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1723:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1724:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1725:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1726:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1727:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1728:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1729:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1730:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1731:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1732:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1733:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1734:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1735:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1736:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1737:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1738:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1739:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1740:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint32 widget)
1741:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 73


 2340              		.loc 1 1741 0
 2341              		.cfi_startproc
 2342              		@ args = 0, pretend = 0, frame = 16
 2343              		@ frame_needed = 1, uses_anonymous_args = 0
 2344 0000 B0B5     		push	{r4, r5, r7, lr}
 2345              		.cfi_def_cfa_offset 16
 2346              		.cfi_offset 4, -16
 2347              		.cfi_offset 5, -12
 2348              		.cfi_offset 7, -8
 2349              		.cfi_offset 14, -4
 2350 0002 86B0     		sub	sp, sp, #24
 2351              		.cfi_def_cfa_offset 40
 2352 0004 02AF     		add	r7, sp, #8
 2353              		.cfi_def_cfa 7, 32
 2354 0006 7860     		str	r0, [r7, #4]
1742:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1743:Generated_Source\PSoC4/CapSense_CSHL.c ****             const uint8 *diplex;
1744:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1745:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1746:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1747:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1748:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1749:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1750:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1751:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1752:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1753:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1754:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1755:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1756:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1757:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1758:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1759:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1760:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1761:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
 2355              		.loc 1 1761 0
 2356 0008 0D23     		movs	r3, #13
 2357 000a FB18     		adds	r3, r7, r3
 2358 000c 0022     		movs	r2, #0
 2359 000e 1A70     		strb	r2, [r3]
1762:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
 2360              		.loc 1 1762 0
 2361 0010 0C23     		movs	r3, #12
 2362 0012 FB18     		adds	r3, r7, r3
 2363 0014 0522     		movs	r2, #5
 2364 0016 1A70     		strb	r2, [r3]
1763:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1764:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1765:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1766:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1767:Generated_Source\PSoC4/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1768:Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1769:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1770:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1771:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1772:Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = 0u;
1773:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 74


1774:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1775:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1776:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1777:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1778:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 
1779:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1780:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
 2365              		.loc 1 1780 0
 2366 0018 1D4A     		ldr	r2, .L143
 2367 001a 7B68     		ldr	r3, [r7, #4]
 2368 001c D318     		adds	r3, r2, r3
 2369 001e 1A78     		ldrb	r2, [r3]
 2370 0020 0B23     		movs	r3, #11
 2371 0022 FC18     		adds	r4, r7, r3
 2372 0024 0C23     		movs	r3, #12
 2373 0026 FB18     		adds	r3, r7, r3
 2374 0028 1978     		ldrb	r1, [r3]
 2375 002a 0D23     		movs	r3, #13
 2376 002c FB18     		adds	r3, r7, r3
 2377 002e 1B78     		ldrb	r3, [r3]
 2378 0030 1800     		movs	r0, r3
 2379 0032 FFF7FEFF 		bl	CapSense_FindMaximum
 2380 0036 0300     		movs	r3, r0
 2381 0038 2370     		strb	r3, [r4]
1781:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1782:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1783:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != 0xFFu)
 2382              		.loc 1 1783 0
 2383 003a 0B23     		movs	r3, #11
 2384 003c FB18     		adds	r3, r7, r3
 2385 003e 1B78     		ldrb	r3, [r3]
 2386 0040 FF2B     		cmp	r3, #255
 2387 0042 19D0     		beq	.L140
1784:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1785:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1786:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
 2388              		.loc 1 1786 0
 2389 0044 FF23     		movs	r3, #255
 2390 0046 9D01     		lsls	r5, r3, #6
 2391 0048 124A     		ldr	r2, .L143+4
 2392 004a 7B68     		ldr	r3, [r7, #4]
 2393 004c D318     		adds	r3, r2, r3
 2394 004e 1B78     		ldrb	r3, [r3]
 2395 0050 0C22     		movs	r2, #12
 2396 0052 BA18     		adds	r2, r7, r2
 2397 0054 1478     		ldrb	r4, [r2]
 2398 0056 0D22     		movs	r2, #13
 2399 0058 BA18     		adds	r2, r7, r2
 2400 005a 1178     		ldrb	r1, [r2]
 2401 005c 0B22     		movs	r2, #11
 2402 005e BA18     		adds	r2, r7, r2
 2403 0060 1078     		ldrb	r0, [r2]
 2404 0062 0093     		str	r3, [sp]
 2405 0064 2B00     		movs	r3, r5
 2406 0066 2200     		movs	r2, r4
 2407 0068 FFF7FEFF 		bl	CapSense_CalcCentroid
 2408 006c 0300     		movs	r3, r0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 75


 2409 006e 1A00     		movs	r2, r3
 2410 0070 0E23     		movs	r3, #14
 2411 0072 FB18     		adds	r3, r7, r3
 2412 0074 1A80     		strh	r2, [r3]
 2413 0076 04E0     		b	.L141
 2414              	.L140:
1787:Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1788:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1789:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1790:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1791:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1792:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1793:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1794:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1795:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1796:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1797:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1798:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1799:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1800:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1801:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1802:Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1803:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1804:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1805:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
1806:Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1807:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1808:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1809:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1810:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1811:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1812:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1813:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1814:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1815:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1816:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1817:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1818:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1819:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1820:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
1821:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1822:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1823:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1824:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1825:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1826:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1827:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1828:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1829:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1830:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1831:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1832:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1833:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1834:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1835:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1836:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1837:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 76


1838:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1839:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1840:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1841:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1842:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1843:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
1844:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1845:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1846:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1847:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1848:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1849:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1850:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1851:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
1852:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1853:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1854:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1855:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1856:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1857:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1858:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1859:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1860:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1861:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1862:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1863:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1864:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1865:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1866:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1867:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1868:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1869:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1870:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1871:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1872:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1873:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1874:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1875:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
1876:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1877:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1878:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1879:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1880:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1881:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1882:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1883:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1884:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1885:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1886:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1887:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1888:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1889:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum wasn't found */
1890:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
 2415              		.loc 1 1890 0
 2416 0078 0E23     		movs	r3, #14
 2417 007a FB18     		adds	r3, r7, r3
 2418 007c 0122     		movs	r2, #1
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 77


 2419 007e 5242     		rsbs	r2, r2, #0
 2420 0080 1A80     		strh	r2, [r3]
 2421              	.L141:
1891:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1892:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1893:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
1894:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1895:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1896:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1897:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1898:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1899:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1900:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1901:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1902:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
 2422              		.loc 1 1902 0
 2423 0082 0E23     		movs	r3, #14
 2424 0084 FB18     		adds	r3, r7, r3
 2425 0086 1B88     		ldrh	r3, [r3]
1903:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2426              		.loc 1 1903 0
 2427 0088 1800     		movs	r0, r3
 2428 008a BD46     		mov	sp, r7
 2429 008c 04B0     		add	sp, sp, #16
 2430              		@ sp needed
 2431 008e B0BD     		pop	{r4, r5, r7, pc}
 2432              	.L144:
 2433              		.align	2
 2434              	.L143:
 2435 0090 00000000 		.word	CapSense_fingerThreshold
 2436 0094 00000000 		.word	CapSense_noiseThreshold
 2437              		.cfi_endproc
 2438              	.LFE61:
 2439              		.size	CapSense_GetCentroidPos, .-CapSense_GetCentroidPos
 2440              		.section	.text.CapSense_GetRadialCentroidPos,"ax",%progbits
 2441              		.align	2
 2442              		.global	CapSense_GetRadialCentroidPos
 2443              		.code	16
 2444              		.thumb_func
 2445              		.type	CapSense_GetRadialCentroidPos, %function
 2446              	CapSense_GetRadialCentroidPos:
 2447              	.LFB62:
1904:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1905:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1906:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1907:Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1908:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1909:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1910:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1911:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1912:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1913:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1914:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1915:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1916:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1917:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1918:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 78


1919:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1920:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1921:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__RS           5
1922:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1923:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1924:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the radial slider.
1925:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1926:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1927:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
1928:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1929:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1930:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1931:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1932:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1933:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1934:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1935:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1936:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1937:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1938:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1939:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1940:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1941:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1942:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1943:Generated_Source\PSoC4/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint32 widget)
1944:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2448              		.loc 1 1944 0
 2449              		.cfi_startproc
 2450              		@ args = 0, pretend = 0, frame = 16
 2451              		@ frame_needed = 1, uses_anonymous_args = 0
 2452 0000 B0B5     		push	{r4, r5, r7, lr}
 2453              		.cfi_def_cfa_offset 16
 2454              		.cfi_offset 4, -16
 2455              		.cfi_offset 5, -12
 2456              		.cfi_offset 7, -8
 2457              		.cfi_offset 14, -4
 2458 0002 86B0     		sub	sp, sp, #24
 2459              		.cfi_def_cfa_offset 40
 2460 0004 02AF     		add	r7, sp, #8
 2461              		.cfi_def_cfa 7, 32
 2462 0006 7860     		str	r0, [r7, #4]
1945:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1946:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1947:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1948:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1949:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1950:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1951:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1952:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1953:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1954:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1955:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1956:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1957:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1958:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1959:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1960:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 79


 2463              		.loc 1 1960 0
 2464 0008 0D23     		movs	r3, #13
 2465 000a FB18     		adds	r3, r7, r3
 2466 000c 0022     		movs	r2, #0
 2467 000e 1A70     		strb	r2, [r3]
1961:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
 2468              		.loc 1 1961 0
 2469 0010 0C23     		movs	r3, #12
 2470 0012 FB18     		adds	r3, r7, r3
 2471 0014 0522     		movs	r2, #5
 2472 0016 1A70     		strb	r2, [r3]
1962:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1963:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1964:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1965:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 
1966:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1967:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
 2473              		.loc 1 1967 0
 2474 0018 1D4A     		ldr	r2, .L149
 2475 001a 7B68     		ldr	r3, [r7, #4]
 2476 001c D318     		adds	r3, r2, r3
 2477 001e 1A78     		ldrb	r2, [r3]
 2478 0020 0B23     		movs	r3, #11
 2479 0022 FC18     		adds	r4, r7, r3
 2480 0024 0C23     		movs	r3, #12
 2481 0026 FB18     		adds	r3, r7, r3
 2482 0028 1978     		ldrb	r1, [r3]
 2483 002a 0D23     		movs	r3, #13
 2484 002c FB18     		adds	r3, r7, r3
 2485 002e 1B78     		ldrb	r3, [r3]
 2486 0030 1800     		movs	r0, r3
 2487 0032 FFF7FEFF 		bl	CapSense_FindMaximum
 2488 0036 0300     		movs	r3, r0
 2489 0038 2370     		strb	r3, [r4]
1968:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1969:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1970:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != CapSense_MAXIMUM_CENTROID)
 2490              		.loc 1 1970 0
 2491 003a 0B23     		movs	r3, #11
 2492 003c FB18     		adds	r3, r7, r3
 2493 003e 1B78     		ldrb	r3, [r3]
 2494 0040 FF2B     		cmp	r3, #255
 2495 0042 19D0     		beq	.L146
1971:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1972:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1973:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
 2496              		.loc 1 1973 0
 2497 0044 FF23     		movs	r3, #255
 2498 0046 9D01     		lsls	r5, r3, #6
 2499 0048 124A     		ldr	r2, .L149+4
 2500 004a 7B68     		ldr	r3, [r7, #4]
 2501 004c D318     		adds	r3, r2, r3
 2502 004e 1B78     		ldrb	r3, [r3]
 2503 0050 0C22     		movs	r2, #12
 2504 0052 BA18     		adds	r2, r7, r2
 2505 0054 1478     		ldrb	r4, [r2]
 2506 0056 0D22     		movs	r2, #13
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 80


 2507 0058 BA18     		adds	r2, r7, r2
 2508 005a 1178     		ldrb	r1, [r2]
 2509 005c 0B22     		movs	r2, #11
 2510 005e BA18     		adds	r2, r7, r2
 2511 0060 1078     		ldrb	r0, [r2]
 2512 0062 0093     		str	r3, [sp]
 2513 0064 2B00     		movs	r3, r5
 2514 0066 2200     		movs	r2, r4
 2515 0068 FFF7FEFF 		bl	CapSense_CalcCentroid
 2516 006c 0300     		movs	r3, r0
 2517 006e 1A00     		movs	r2, r3
 2518 0070 0E23     		movs	r3, #14
 2519 0072 FB18     		adds	r3, r7, r3
 2520 0074 1A80     		strh	r2, [r3]
 2521 0076 04E0     		b	.L147
 2522              	.L146:
1974:Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1975:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1976:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1977:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1978:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1979:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1980:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1981:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1982:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1983:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1984:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1985:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1986:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1987:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1988:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1989:Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1990:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1991:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1992:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  ||
1993:Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1994:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1995:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1996:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1997:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1998:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1999:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
2000:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2001:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2002:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2003:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
2004:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2005:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
2006:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2007:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
2008:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2009:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2010:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2011:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2012:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
2013:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2014:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 81


2015:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
2016:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
2017:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2018:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2019:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER &
2020:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2021:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2022:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2023:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
2024:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2025:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2026:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2027:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2028:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
2029:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2030:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2031:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
2032:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2033:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2034:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2035:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2036:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2037:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2038:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2039:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2040:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2041:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
2042:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2043:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2044:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2045:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER &
2046:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2047:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2048:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2049:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2050:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2051:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2052:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
2053:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2054:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2055:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2056:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER &
2057:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2058:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2059:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2060:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2061:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2062:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2063:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
2064:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
2065:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2066:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2067:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
2068:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2069:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2070:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2071:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 82


2072:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2073:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2074:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2075:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2076:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2077:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum was not found */
2078:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
 2523              		.loc 1 2078 0
 2524 0078 0E23     		movs	r3, #14
 2525 007a FB18     		adds	r3, r7, r3
 2526 007c 0122     		movs	r2, #1
 2527 007e 5242     		rsbs	r2, r2, #0
 2528 0080 1A80     		strh	r2, [r3]
 2529              	.L147:
2079:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2080:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
2081:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2082:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2083:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2084:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2085:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2086:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2087:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2088:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2089:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
 2530              		.loc 1 2089 0
 2531 0082 0E23     		movs	r3, #14
 2532 0084 FB18     		adds	r3, r7, r3
 2533 0086 1B88     		ldrh	r3, [r3]
2090:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2534              		.loc 1 2090 0
 2535 0088 1800     		movs	r0, r3
 2536 008a BD46     		mov	sp, r7
 2537 008c 04B0     		add	sp, sp, #16
 2538              		@ sp needed
 2539 008e B0BD     		pop	{r4, r5, r7, pc}
 2540              	.L150:
 2541              		.align	2
 2542              	.L149:
 2543 0090 00000000 		.word	CapSense_fingerThreshold
 2544 0094 00000000 		.word	CapSense_noiseThreshold
 2545              		.cfi_endproc
 2546              	.LFE62:
 2547              		.size	CapSense_GetRadialCentroidPos, .-CapSense_GetRadialCentroidPos
 2548              		.section	.text.CapSense_MedianFilter,"ax",%progbits
 2549              		.align	2
 2550              		.global	CapSense_MedianFilter
 2551              		.code	16
 2552              		.thumb_func
 2553              		.type	CapSense_MedianFilter, %function
 2554              	CapSense_MedianFilter:
 2555              	.LFB63:
2091:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
2092:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2093:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2094:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2095:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 83


2096:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
2097:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2098:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2099:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2100:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2101:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2102:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2103:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2104:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
2105:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2106:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  customizer.
2107:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2108:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2109:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
2110:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2111:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__TP            5
2112:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2113:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2114:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
2115:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[0u]  - position of X
2116:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
2117:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2118:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2119:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2120:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2121:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2122:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2123:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2124:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2125:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2126:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2127:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   calculations.
2128:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2129:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2130:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetTouchCentroidPos(uint32 widget, uint16* pos)
2131:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2132:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2133:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posXIndex;
2134:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posYIndex;
2135:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
2136:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
2137:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2138:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2139:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2140:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2141:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint16 tempPos;
2142:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2143:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2144:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
2145:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2146:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxX;
2147:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxY;
2148:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posX;
2149:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posY;
2150:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 touch = 0u;
2151:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
2152:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 84


2153:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2154:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
2155:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
2156:Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
2157:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
2158:Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
2159:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2160:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2161:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (MaxX != CapSense_MAXIMUM_CENTROID)
2162:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2163:Generated_Source\PSoC4/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
2164:Generated_Source\PSoC4/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
2165:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2166:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
2167:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
2168:Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
2169:Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
2170:Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
2171:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2172:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2173:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (MaxY != CapSense_MAXIMUM_CENTROID)
2174:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2175:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
2176:Generated_Source\PSoC4/CapSense_CSHL.c ****                 touch = 1u;
2177:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2178:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate Y centroid */
2179:Generated_Source\PSoC4/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(MaxY, offset, count,
2180:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
2181:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2182:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate X centroid */
2183:Generated_Source\PSoC4/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
2184:Generated_Source\PSoC4/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
2185:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2186:Generated_Source\PSoC4/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(MaxX, offset, count,
2187:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
2188:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2189:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2190:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
2191:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
2192:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2193:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Calculate position to store filters data */
2194:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2195:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
2196:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2197:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
2198:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2199:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Init filters */
2200:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
2201:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
2202:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2203:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
2204:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
2205:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
2206:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2207:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2208:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
2209:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 85


2210:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2211:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
2212:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
2213:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2214:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2215:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2216:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
2217:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2218:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2219:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2220:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
2221:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2222:Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
2223:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2224:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Do filtering */
2225:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2226:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2227:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2228:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2229:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
2230:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2231:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2232:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2233:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2234:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2235:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2236:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2237:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
2238:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2239:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2240:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2241:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2242:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2243:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2244:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2245:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
2246:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2247:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2248:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2249:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
2250:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2251:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2252:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2253:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
2254:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2255:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2256:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2257:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2258:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2259:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2260:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2261:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY,
2262:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2263:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2264:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2265:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2266:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 86


2267:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2268:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2269:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2270:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2271:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2272:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2273:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2274:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2275:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2276:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX,
2277:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
2278:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2279:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2280:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY,
2281:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2282:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2283:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2284:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2285:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
2286:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2287:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2288:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2289:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2290:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2291:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2292:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter((uint16)posX,
2293:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2294:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2295:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2296:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter((uint16)posY,
2297:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2298:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2299:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2300:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2301:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
2302:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2303:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2304:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2305:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2306:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2307:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     {
2308:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX,
2309:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2310:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
2311:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2312:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY,
2313:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2314:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
2315:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     }
2316:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
2317:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2318:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2319:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2320:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2321:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2322:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2323:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Save positions */
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 87


2324:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = posX;
2325:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = posY;
2326:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2327:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2328:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2329:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2330:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(touch == 0u)
2331:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2332:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2333:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2334:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2335:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2336:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2337:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2338:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2339:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2340:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (touch);
2341:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2342:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2343:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2344:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2345:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2346:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2347:Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) )
2348:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2349:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
2350:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2351:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2352:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2353:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Median filter function.
2354:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the
2355:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  median value.
2356:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2357:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2358:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2359:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2360:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2361:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2362:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2363:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2364:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2365:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2366:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2367:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2368:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2369:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2370:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2371:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2372:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2373:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2556              		.loc 1 2373 0
 2557              		.cfi_startproc
 2558              		@ args = 0, pretend = 0, frame = 16
 2559              		@ frame_needed = 1, uses_anonymous_args = 0
 2560 0000 90B5     		push	{r4, r7, lr}
 2561              		.cfi_def_cfa_offset 12
 2562              		.cfi_offset 4, -12
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 88


 2563              		.cfi_offset 7, -8
 2564              		.cfi_offset 14, -4
 2565 0002 85B0     		sub	sp, sp, #20
 2566              		.cfi_def_cfa_offset 32
 2567 0004 00AF     		add	r7, sp, #0
 2568              		.cfi_def_cfa_register 7
 2569 0006 0400     		movs	r4, r0
 2570 0008 0800     		movs	r0, r1
 2571 000a 1100     		movs	r1, r2
 2572 000c BB1D     		adds	r3, r7, #6
 2573 000e 221C     		adds	r2, r4, #0
 2574 0010 1A80     		strh	r2, [r3]
 2575 0012 3B1D     		adds	r3, r7, #4
 2576 0014 021C     		adds	r2, r0, #0
 2577 0016 1A80     		strh	r2, [r3]
 2578 0018 BB1C     		adds	r3, r7, #2
 2579 001a 0A1C     		adds	r2, r1, #0
 2580 001c 1A80     		strh	r2, [r3]
2374:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 tmp;
2375:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2376:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
 2581              		.loc 1 2376 0
 2582 001e BA1D     		adds	r2, r7, #6
 2583 0020 3B1D     		adds	r3, r7, #4
 2584 0022 1288     		ldrh	r2, [r2]
 2585 0024 1B88     		ldrh	r3, [r3]
 2586 0026 9A42     		cmp	r2, r3
 2587 0028 0DD9     		bls	.L152
2377:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2378:Generated_Source\PSoC4/CapSense_CSHL.c ****             tmp = x2;
 2588              		.loc 1 2378 0
 2589 002a 0E23     		movs	r3, #14
 2590 002c FB18     		adds	r3, r7, r3
 2591 002e 3A1D     		adds	r2, r7, #4
 2592 0030 1288     		ldrh	r2, [r2]
 2593 0032 1A80     		strh	r2, [r3]
2379:Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x1;
 2594              		.loc 1 2379 0
 2595 0034 3B1D     		adds	r3, r7, #4
 2596 0036 BA1D     		adds	r2, r7, #6
 2597 0038 1288     		ldrh	r2, [r2]
 2598 003a 1A80     		strh	r2, [r3]
2380:Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
 2599              		.loc 1 2380 0
 2600 003c BB1D     		adds	r3, r7, #6
 2601 003e 0E22     		movs	r2, #14
 2602 0040 BA18     		adds	r2, r7, r2
 2603 0042 1288     		ldrh	r2, [r2]
 2604 0044 1A80     		strh	r2, [r3]
 2605              	.L152:
2381:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2382:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2383:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x2 > x3)
 2606              		.loc 1 2383 0
 2607 0046 3A1D     		adds	r2, r7, #4
 2608 0048 BB1C     		adds	r3, r7, #2
 2609 004a 1288     		ldrh	r2, [r2]
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 89


 2610 004c 1B88     		ldrh	r3, [r3]
 2611 004e 9A42     		cmp	r2, r3
 2612 0050 03D9     		bls	.L153
2384:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2385:Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x3;
 2613              		.loc 1 2385 0
 2614 0052 3B1D     		adds	r3, r7, #4
 2615 0054 BA1C     		adds	r2, r7, #2
 2616 0056 1288     		ldrh	r2, [r2]
 2617 0058 1A80     		strh	r2, [r3]
 2618              	.L153:
2386:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2387:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2388:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
 2619              		.loc 1 2388 0
 2620 005a 3B1D     		adds	r3, r7, #4
 2621 005c BA1D     		adds	r2, r7, #6
 2622 005e 1088     		ldrh	r0, [r2]
 2623 0060 1B88     		ldrh	r3, [r3]
 2624 0062 99B2     		uxth	r1, r3
 2625 0064 82B2     		uxth	r2, r0
 2626 0066 9142     		cmp	r1, r2
 2627 0068 00D2     		bcs	.L154
 2628 006a 031C     		adds	r3, r0, #0
 2629              	.L154:
 2630 006c 9BB2     		uxth	r3, r3
2389:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2631              		.loc 1 2389 0
 2632 006e 1800     		movs	r0, r3
 2633 0070 BD46     		mov	sp, r7
 2634 0072 05B0     		add	sp, sp, #20
 2635              		@ sp needed
 2636 0074 90BD     		pop	{r4, r7, pc}
 2637              		.cfi_endproc
 2638              	.LFE63:
 2639              		.size	CapSense_MedianFilter, .-CapSense_MedianFilter
 2640              		.global	__aeabi_uidiv
 2641 0076 C046     		.section	.text.CapSense_AveragingFilter,"ax",%progbits
 2642              		.align	2
 2643              		.global	CapSense_AveragingFilter
 2644              		.code	16
 2645              		.thumb_func
 2646              		.type	CapSense_AveragingFilter, %function
 2647              	CapSense_AveragingFilter:
 2648              	.LFB64:
2390:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2391:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2392:Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) ) */
2393:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2394:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2395:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) || \
2396:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER)) )
2397:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2398:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
2399:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2400:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2401:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 90


2402:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Averaging filter function.
2403:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2404:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  reports the averaging value.
2405:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2406:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2407:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2408:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2409:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2410:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2411:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2412:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2413:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2414:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2415:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2416:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2417:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2418:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2419:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2420:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2421:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2422:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2649              		.loc 1 2422 0
 2650              		.cfi_startproc
 2651              		@ args = 0, pretend = 0, frame = 16
 2652              		@ frame_needed = 1, uses_anonymous_args = 0
 2653 0000 90B5     		push	{r4, r7, lr}
 2654              		.cfi_def_cfa_offset 12
 2655              		.cfi_offset 4, -12
 2656              		.cfi_offset 7, -8
 2657              		.cfi_offset 14, -4
 2658 0002 85B0     		sub	sp, sp, #20
 2659              		.cfi_def_cfa_offset 32
 2660 0004 00AF     		add	r7, sp, #0
 2661              		.cfi_def_cfa_register 7
 2662 0006 0400     		movs	r4, r0
 2663 0008 0800     		movs	r0, r1
 2664 000a 1100     		movs	r1, r2
 2665 000c BB1D     		adds	r3, r7, #6
 2666 000e 221C     		adds	r2, r4, #0
 2667 0010 1A80     		strh	r2, [r3]
 2668 0012 3B1D     		adds	r3, r7, #4
 2669 0014 021C     		adds	r2, r0, #0
 2670 0016 1A80     		strh	r2, [r3]
 2671 0018 BB1C     		adds	r3, r7, #2
 2672 001a 0A1C     		adds	r2, r1, #0
 2673 001c 1A80     		strh	r2, [r3]
2423:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
 2674              		.loc 1 2423 0
 2675 001e BB1D     		adds	r3, r7, #6
 2676 0020 1A88     		ldrh	r2, [r3]
 2677 0022 3B1D     		adds	r3, r7, #4
 2678 0024 1B88     		ldrh	r3, [r3]
 2679 0026 D218     		adds	r2, r2, r3
 2680 0028 BB1C     		adds	r3, r7, #2
 2681 002a 1B88     		ldrh	r3, [r3]
 2682 002c D318     		adds	r3, r2, r3
 2683 002e 0321     		movs	r1, #3
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 91


 2684 0030 1800     		movs	r0, r3
 2685 0032 FFF7FEFF 		bl	__aeabi_uidiv
 2686 0036 0300     		movs	r3, r0
 2687 0038 FB60     		str	r3, [r7, #12]
2424:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2425:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
 2688              		.loc 1 2425 0
 2689 003a FB68     		ldr	r3, [r7, #12]
 2690 003c 9BB2     		uxth	r3, r3
2426:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2691              		.loc 1 2426 0
 2692 003e 1800     		movs	r0, r3
 2693 0040 BD46     		mov	sp, r7
 2694 0042 05B0     		add	sp, sp, #20
 2695              		@ sp needed
 2696 0044 90BD     		pop	{r4, r7, pc}
 2697              		.cfi_endproc
 2698              	.LFE64:
 2699              		.size	CapSense_AveragingFilter, .-CapSense_AveragingFilter
 2700 0046 C046     		.section	.text.CapSense_GetWidgetNumber,"ax",%progbits
 2701              		.align	2
 2702              		.global	CapSense_GetWidgetNumber
 2703              		.code	16
 2704              		.thumb_func
 2705              		.type	CapSense_GetWidgetNumber, %function
 2706              	CapSense_GetWidgetNumber:
 2707              	.LFB65:
2427:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
2428:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) ) */
2429:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2430:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2431:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2432:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2433:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2434:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
2435:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2436:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2437:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2438:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2439:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2440:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2441:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2442:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2443:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2444:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2445:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2446:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2447:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2448:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2449:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2450:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2451:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2452:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2453:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2454:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
2455:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2456:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 92


2457:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2458:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2459:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2460:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 1u;
2461:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2462:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2463:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2464:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2465:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2466:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2467:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2468:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2469:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2470:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2471:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2472:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
2473:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2474:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2475:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2476:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2477:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2478:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2479:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2480:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2481:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2482:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2483:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a filtered value.
2484:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2485:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2486:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2487:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2488:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2489:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2490:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2491:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2492:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2)
2493:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2494:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2495:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2496:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2497:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2498:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
2499:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 2u;
2500:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2501:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2502:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2503:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2504:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2505:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2506:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2507:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2508:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2509:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) || \
2510:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)))
2511:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2512:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: uint16 CapSense_JitterFilter
2513:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 93


2514:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2515:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2516:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Jitter filter function.
2517:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2518:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2519:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2520:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2521:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2522:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2523:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2524:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2525:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2526:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2527:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2528:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2529:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2530:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2531:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2532:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_JitterFilter(uint16 x1, uint16 x2)
2533:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2534:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
2535:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2536:Generated_Source\PSoC4/CapSense_CSHL.c ****             x1--;
2537:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2538:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2539:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2540:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (x1 < x2)
2541:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2542:Generated_Source\PSoC4/CapSense_CSHL.c ****                 x1++;
2543:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2544:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2545:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2546:Generated_Source\PSoC4/CapSense_CSHL.c ****         return x1;
2547:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2548:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2549:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2550:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2551:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2552:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2553:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2554:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))
2555:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2556:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR8Filter
2557:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2558:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2559:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2560:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2561:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2562:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2563:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2564:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2565:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2566:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2567:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2568:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2569:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2570:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 94


2571:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2572:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2573:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2574:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2575:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2576:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2577:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR8Filter(uint16 x1, uint16 x2)
2578:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2579:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2580:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2581:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2582:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2583:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2584:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 3u;
2585:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2586:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2587:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2588:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)) */
2589:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2590:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2591:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
2592:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2593:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR16Filter
2594:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2595:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2596:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2597:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2598:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2599:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2600:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2601:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2602:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2603:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2604:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2605:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2606:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2607:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2608:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2609:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2610:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2611:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2612:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2613:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2614:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR16Filter(uint16 x1, uint16 x2)
2615:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2616:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2617:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2618:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2619:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2620:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2621:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 4u;
2622:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2623:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2624:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2625:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) */
2626:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2627:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 95


2628:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT))
2629:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2630:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2631:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetMatrixButtonPos
2632:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2633:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2634:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2635:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2636:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  button widget.
2637:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2638:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2639:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number;
2640:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be
2641:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           stored:
2642:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[0] - column position;
2643:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[1] - raw position.
2644:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2645:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2646:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2647:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  cases.
2648:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2649:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2650:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2651:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[ ] - used to store a difference between the current value of
2652:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  raw data and a previous value of the baseline.
2653:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2654:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2655:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2656:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2657:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2658:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetMatrixButtonPos(uint32 widget, uint8* pos)
2659:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2660:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
2661:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 retVal = 0u;
2662:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 row_sig_max = 0u;
2663:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 col_sig_max = 0u;
2664:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 row_ind = 0u;
2665:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 col_ind = 0u;
2666:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2667:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(widget) == 1u)
2668:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2669:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2670:Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget]; i < (CapSense_rawDataIndex[widget] + \
2671:Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget]); i++)
2672:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2673:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > col_sig_max)
2674:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2675:Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_ind = i;
2676:Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_sig_max = CapSense_sensorSignal[i];
2677:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2678:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2679:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2680:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2681:Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget+1u]; i < (CapSense_rawDataIndex[widget+1u] + \
2682:Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget+1u]); i++)
2683:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2684:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > row_sig_max)
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 96


2685:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2686:Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_ind = i;
2687:Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_sig_max = CapSense_sensorSignal[i];
2688:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2689:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2690:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2691:Generated_Source\PSoC4/CapSense_CSHL.c ****             if((col_sig_max >= CapSense_fingerThreshold[widget]) && \
2692:Generated_Source\PSoC4/CapSense_CSHL.c ****                (row_sig_max >= CapSense_fingerThreshold[widget+1u]))
2693:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2694:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = col_ind - CapSense_rawDataIndex[widget];
2695:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = row_ind - CapSense_rawDataIndex[widget+1u];
2696:Generated_Source\PSoC4/CapSense_CSHL.c ****                 retVal = 1u;
2697:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2698:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2699:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (retVal);
2700:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2701:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2702:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
2703:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2704:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2705:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetWidgetNumber
2706:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2707:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2708:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2709:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2710:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2711:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2712:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2713:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2714:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2715:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2716:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2717:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2718:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2719:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
2720:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2721:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2722:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2723:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2724:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2725:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_GetWidgetNumber(uint32 sensor)
2726:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2708              		.loc 1 2726 0
 2709              		.cfi_startproc
 2710              		@ args = 0, pretend = 0, frame = 8
 2711              		@ frame_needed = 1, uses_anonymous_args = 0
 2712 0000 80B5     		push	{r7, lr}
 2713              		.cfi_def_cfa_offset 8
 2714              		.cfi_offset 7, -8
 2715              		.cfi_offset 14, -4
 2716 0002 82B0     		sub	sp, sp, #8
 2717              		.cfi_def_cfa_offset 16
 2718 0004 00AF     		add	r7, sp, #0
 2719              		.cfi_def_cfa_register 7
 2720 0006 7860     		str	r0, [r7, #4]
2727:Generated_Source\PSoC4/CapSense_CSHL.c ****     return((uint32)CapSense_widgetNumber[sensor]);
 2721              		.loc 1 2727 0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 97


 2722 0008 034A     		ldr	r2, .L160
 2723 000a 7B68     		ldr	r3, [r7, #4]
 2724 000c D318     		adds	r3, r2, r3
 2725 000e 1B78     		ldrb	r3, [r3]
2728:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2726              		.loc 1 2728 0
 2727 0010 1800     		movs	r0, r3
 2728 0012 BD46     		mov	sp, r7
 2729 0014 02B0     		add	sp, sp, #8
 2730              		@ sp needed
 2731 0016 80BD     		pop	{r7, pc}
 2732              	.L161:
 2733              		.align	2
 2734              	.L160:
 2735 0018 00000000 		.word	CapSense_widgetNumber
 2736              		.cfi_endproc
 2737              	.LFE65:
 2738              		.size	CapSense_GetWidgetNumber, .-CapSense_GetWidgetNumber
 2739              		.section	.text.CapSense_GetLowBaselineReset,"ax",%progbits
 2740              		.align	2
 2741              		.global	CapSense_GetLowBaselineReset
 2742              		.code	16
 2743              		.thumb_func
 2744              		.type	CapSense_GetLowBaselineReset, %function
 2745              	CapSense_GetLowBaselineReset:
 2746              	.LFB66:
2729:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2730:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2731:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetLowBaselineReset
2732:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2733:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2734:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2735:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2736:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2737:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2738:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2739:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2740:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2741:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2742:Generated_Source\PSoC4/CapSense_CSHL.c **** *  low baseline reset threshold value a sensor.
2743:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2744:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2745:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_lowBaselineReset[]  - stores low baseline reset values.
2746:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2747:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2748:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2749:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2750:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2751:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetLowBaselineReset(uint32 sensor)
2752:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2747              		.loc 1 2752 0
 2748              		.cfi_startproc
 2749              		@ args = 0, pretend = 0, frame = 8
 2750              		@ frame_needed = 1, uses_anonymous_args = 0
 2751 0000 80B5     		push	{r7, lr}
 2752              		.cfi_def_cfa_offset 8
 2753              		.cfi_offset 7, -8
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 98


 2754              		.cfi_offset 14, -4
 2755 0002 82B0     		sub	sp, sp, #8
 2756              		.cfi_def_cfa_offset 16
 2757 0004 00AF     		add	r7, sp, #0
 2758              		.cfi_def_cfa_register 7
 2759 0006 7860     		str	r0, [r7, #4]
2753:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_lowBaselineReset[sensor]);
 2760              		.loc 1 2753 0
 2761 0008 034A     		ldr	r2, .L164
 2762 000a 7B68     		ldr	r3, [r7, #4]
 2763 000c D318     		adds	r3, r2, r3
 2764 000e 1B78     		ldrb	r3, [r3]
2754:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2765              		.loc 1 2754 0
 2766 0010 1800     		movs	r0, r3
 2767 0012 BD46     		mov	sp, r7
 2768 0014 02B0     		add	sp, sp, #8
 2769              		@ sp needed
 2770 0016 80BD     		pop	{r7, pc}
 2771              	.L165:
 2772              		.align	2
 2773              	.L164:
 2774 0018 00000000 		.word	CapSense_lowBaselineReset
 2775              		.cfi_endproc
 2776              	.LFE66:
 2777              		.size	CapSense_GetLowBaselineReset, .-CapSense_GetLowBaselineReset
 2778              		.section	.text.CapSense_GetDebounce,"ax",%progbits
 2779              		.align	2
 2780              		.global	CapSense_GetDebounce
 2781              		.code	16
 2782              		.thumb_func
 2783              		.type	CapSense_GetDebounce, %function
 2784              	CapSense_GetDebounce:
 2785              	.LFB67:
2755:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2756:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2757:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDebounce
2758:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2759:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2760:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2761:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns a debounce value.
2762:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2763:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2764:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2765:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2766:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2767:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2768:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Debounce value
2769:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2770:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2771:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounce[]  - stores the debounce value.
2772:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2773:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2774:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2775:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2776:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2777:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDebounce(uint32 widget)
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 99


2778:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2786              		.loc 1 2778 0
 2787              		.cfi_startproc
 2788              		@ args = 0, pretend = 0, frame = 8
 2789              		@ frame_needed = 1, uses_anonymous_args = 0
 2790 0000 80B5     		push	{r7, lr}
 2791              		.cfi_def_cfa_offset 8
 2792              		.cfi_offset 7, -8
 2793              		.cfi_offset 14, -4
 2794 0002 82B0     		sub	sp, sp, #8
 2795              		.cfi_def_cfa_offset 16
 2796 0004 00AF     		add	r7, sp, #0
 2797              		.cfi_def_cfa_register 7
 2798 0006 7860     		str	r0, [r7, #4]
2779:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_debounce[widget]);
 2799              		.loc 1 2779 0
 2800 0008 034A     		ldr	r2, .L168
 2801 000a 7B68     		ldr	r3, [r7, #4]
 2802 000c D318     		adds	r3, r2, r3
 2803 000e 1B78     		ldrb	r3, [r3]
2780:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2804              		.loc 1 2780 0
 2805 0010 1800     		movs	r0, r3
 2806 0012 BD46     		mov	sp, r7
 2807 0014 02B0     		add	sp, sp, #8
 2808              		@ sp needed
 2809 0016 80BD     		pop	{r7, pc}
 2810              	.L169:
 2811              		.align	2
 2812              	.L168:
 2813 0018 00000000 		.word	CapSense_debounce
 2814              		.cfi_endproc
 2815              	.LFE67:
 2816              		.size	CapSense_GetDebounce, .-CapSense_GetDebounce
 2817              		.section	.text.CapSense_EnableRawDataFilters,"ax",%progbits
 2818              		.align	2
 2819              		.global	CapSense_EnableRawDataFilters
 2820              		.code	16
 2821              		.thumb_func
 2822              		.type	CapSense_EnableRawDataFilters, %function
 2823              	CapSense_EnableRawDataFilters:
 2824              	.LFB68:
2781:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2782:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
2783:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2784:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_EnableRawDataFilters
2785:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2786:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2787:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2788:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Enables the rawdata filters for the sensor signals.
2789:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2790:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2791:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2792:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2793:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2794:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2795:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 100


2796:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2797:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2798:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2799:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2800:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2801:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2802:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2803:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_EnableRawDataFilters(void)
2804:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2825              		.loc 1 2804 0
 2826              		.cfi_startproc
 2827              		@ args = 0, pretend = 0, frame = 0
 2828              		@ frame_needed = 1, uses_anonymous_args = 0
 2829 0000 80B5     		push	{r7, lr}
 2830              		.cfi_def_cfa_offset 8
 2831              		.cfi_offset 7, -8
 2832              		.cfi_offset 14, -4
 2833 0002 00AF     		add	r7, sp, #0
 2834              		.cfi_def_cfa_register 7
2805:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
 2835              		.loc 1 2805 0
 2836 0004 024B     		ldr	r3, .L171
 2837 0006 0122     		movs	r2, #1
 2838 0008 1A70     		strb	r2, [r3]
2806:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2839              		.loc 1 2806 0
 2840 000a C046     		nop
 2841 000c BD46     		mov	sp, r7
 2842              		@ sp needed
 2843 000e 80BD     		pop	{r7, pc}
 2844              	.L172:
 2845              		.align	2
 2846              	.L171:
 2847 0010 00000000 		.word	CapSense_enableRawFilters
 2848              		.cfi_endproc
 2849              	.LFE68:
 2850              		.size	CapSense_EnableRawDataFilters, .-CapSense_EnableRawDataFilters
 2851              		.section	.text.CapSense_DisableRawDataFilters,"ax",%progbits
 2852              		.align	2
 2853              		.global	CapSense_DisableRawDataFilters
 2854              		.code	16
 2855              		.thumb_func
 2856              		.type	CapSense_DisableRawDataFilters, %function
 2857              	CapSense_DisableRawDataFilters:
 2858              	.LFB69:
2807:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2808:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2809:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_DisableRawDataFilters
2810:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2811:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2812:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2813:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Disables the rawdata filters for the sensor signals.
2814:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2815:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2816:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2817:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2818:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 101


2819:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2820:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2821:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2822:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2823:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2824:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2825:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2826:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2827:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2828:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_DisableRawDataFilters(void)
2829:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2859              		.loc 1 2829 0
 2860              		.cfi_startproc
 2861              		@ args = 0, pretend = 0, frame = 0
 2862              		@ frame_needed = 1, uses_anonymous_args = 0
 2863 0000 80B5     		push	{r7, lr}
 2864              		.cfi_def_cfa_offset 8
 2865              		.cfi_offset 7, -8
 2866              		.cfi_offset 14, -4
 2867 0002 00AF     		add	r7, sp, #0
 2868              		.cfi_def_cfa_register 7
2830:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_DISABLED;
 2869              		.loc 1 2830 0
 2870 0004 024B     		ldr	r3, .L174
 2871 0006 0022     		movs	r2, #0
 2872 0008 1A70     		strb	r2, [r3]
2831:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2873              		.loc 1 2831 0
 2874 000a C046     		nop
 2875 000c BD46     		mov	sp, r7
 2876              		@ sp needed
 2877 000e 80BD     		pop	{r7, pc}
 2878              	.L175:
 2879              		.align	2
 2880              	.L174:
 2881 0010 00000000 		.word	CapSense_enableRawFilters
 2882              		.cfi_endproc
 2883              	.LFE69:
 2884              		.size	CapSense_DisableRawDataFilters, .-CapSense_DisableRawDataFilters
 2885              		.bss
 2886 001d 000000   		.align	2
 2887              	CapSense_debounceCounter.5490:
 2888 0020 00       		.space	1
 2889 0021 000000   		.align	2
 2890              	CapSense_centroid.5542:
 2891 0024 000000   		.space	3
 2892              		.text
 2893              	.Letext0:
 2894              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2895              		.file 3 "Generated_Source\\PSoC4\\CapSense_PVT.h"
 2896              		.section	.debug_info,"",%progbits
 2897              	.Ldebug_info0:
 2898 0000 340E0000 		.4byte	0xe34
 2899 0004 0400     		.2byte	0x4
 2900 0006 00000000 		.4byte	.Ldebug_abbrev0
 2901 000a 04       		.byte	0x4
 2902 000b 01       		.uleb128 0x1
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 102


 2903 000c 56010000 		.4byte	.LASF142
 2904 0010 0C       		.byte	0xc
 2905 0011 CD090000 		.4byte	.LASF143
 2906 0015 85070000 		.4byte	.LASF144
 2907 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2908 001d 00000000 		.4byte	0
 2909 0021 00000000 		.4byte	.Ldebug_line0
 2910 0025 02       		.uleb128 0x2
 2911 0026 01       		.byte	0x1
 2912 0027 06       		.byte	0x6
 2913 0028 1E0A0000 		.4byte	.LASF0
 2914 002c 02       		.uleb128 0x2
 2915 002d 01       		.byte	0x1
 2916 002e 08       		.byte	0x8
 2917 002f 1E090000 		.4byte	.LASF1
 2918 0033 02       		.uleb128 0x2
 2919 0034 02       		.byte	0x2
 2920 0035 05       		.byte	0x5
 2921 0036 EF070000 		.4byte	.LASF2
 2922 003a 02       		.uleb128 0x2
 2923 003b 02       		.byte	0x2
 2924 003c 07       		.byte	0x7
 2925 003d 2A0A0000 		.4byte	.LASF3
 2926 0041 02       		.uleb128 0x2
 2927 0042 04       		.byte	0x4
 2928 0043 05       		.byte	0x5
 2929 0044 F9070000 		.4byte	.LASF4
 2930 0048 02       		.uleb128 0x2
 2931 0049 04       		.byte	0x4
 2932 004a 07       		.byte	0x7
 2933 004b B0080000 		.4byte	.LASF5
 2934 004f 02       		.uleb128 0x2
 2935 0050 08       		.byte	0x8
 2936 0051 05       		.byte	0x5
 2937 0052 00060000 		.4byte	.LASF6
 2938 0056 02       		.uleb128 0x2
 2939 0057 08       		.byte	0x8
 2940 0058 07       		.byte	0x7
 2941 0059 7B030000 		.4byte	.LASF7
 2942 005d 03       		.uleb128 0x3
 2943 005e 04       		.byte	0x4
 2944 005f 05       		.byte	0x5
 2945 0060 696E7400 		.ascii	"int\000"
 2946 0064 02       		.uleb128 0x2
 2947 0065 04       		.byte	0x4
 2948 0066 07       		.byte	0x7
 2949 0067 2B010000 		.4byte	.LASF8
 2950 006b 04       		.uleb128 0x4
 2951 006c BA0A0000 		.4byte	.LASF9
 2952 0070 02       		.byte	0x2
 2953 0071 FC01     		.2byte	0x1fc
 2954 0073 2C000000 		.4byte	0x2c
 2955 0077 04       		.uleb128 0x4
 2956 0078 BF050000 		.4byte	.LASF10
 2957 007c 02       		.byte	0x2
 2958 007d FD01     		.2byte	0x1fd
 2959 007f 3A000000 		.4byte	0x3a
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 103


 2960 0083 04       		.uleb128 0x4
 2961 0084 08070000 		.4byte	.LASF11
 2962 0088 02       		.byte	0x2
 2963 0089 FE01     		.2byte	0x1fe
 2964 008b 48000000 		.4byte	0x48
 2965 008f 04       		.uleb128 0x4
 2966 0090 50010000 		.4byte	.LASF12
 2967 0094 02       		.byte	0x2
 2968 0095 0002     		.2byte	0x200
 2969 0097 33000000 		.4byte	0x33
 2970 009b 04       		.uleb128 0x4
 2971 009c 30030000 		.4byte	.LASF13
 2972 00a0 02       		.byte	0x2
 2973 00a1 0102     		.2byte	0x201
 2974 00a3 41000000 		.4byte	0x41
 2975 00a7 02       		.uleb128 0x2
 2976 00a8 04       		.byte	0x4
 2977 00a9 04       		.byte	0x4
 2978 00aa 2A030000 		.4byte	.LASF14
 2979 00ae 02       		.uleb128 0x2
 2980 00af 08       		.byte	0x8
 2981 00b0 04       		.byte	0x4
 2982 00b1 C00A0000 		.4byte	.LASF15
 2983 00b5 02       		.uleb128 0x2
 2984 00b6 01       		.byte	0x1
 2985 00b7 08       		.byte	0x8
 2986 00b8 88050000 		.4byte	.LASF16
 2987 00bc 02       		.uleb128 0x2
 2988 00bd 04       		.byte	0x4
 2989 00be 07       		.byte	0x7
 2990 00bf A7080000 		.4byte	.LASF17
 2991 00c3 02       		.uleb128 0x2
 2992 00c4 08       		.byte	0x8
 2993 00c5 04       		.byte	0x4
 2994 00c6 60070000 		.4byte	.LASF18
 2995 00ca 05       		.uleb128 0x5
 2996 00cb 5C       		.byte	0x5c
 2997 00cc 03       		.byte	0x3
 2998 00cd 2F       		.byte	0x2f
 2999 00ce E7010000 		.4byte	0x1e7
 3000 00d2 06       		.uleb128 0x6
 3001 00d3 CB050000 		.4byte	.LASF19
 3002 00d7 03       		.byte	0x3
 3003 00d8 31       		.byte	0x31
 3004 00d9 E7010000 		.4byte	0x1e7
 3005 00dd 00       		.byte	0
 3006 00de 06       		.uleb128 0x6
 3007 00df E0070000 		.4byte	.LASF20
 3008 00e3 03       		.byte	0x3
 3009 00e4 32       		.byte	0x32
 3010 00e5 E7010000 		.4byte	0x1e7
 3011 00e9 04       		.byte	0x4
 3012 00ea 06       		.uleb128 0x6
 3013 00eb A8090000 		.4byte	.LASF21
 3014 00ef 03       		.byte	0x3
 3015 00f0 33       		.byte	0x33
 3016 00f1 E7010000 		.4byte	0x1e7
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 104


 3017 00f5 08       		.byte	0x8
 3018 00f6 06       		.uleb128 0x6
 3019 00f7 11090000 		.4byte	.LASF22
 3020 00fb 03       		.byte	0x3
 3021 00fc 34       		.byte	0x34
 3022 00fd E7010000 		.4byte	0x1e7
 3023 0101 0C       		.byte	0xc
 3024 0102 06       		.uleb128 0x6
 3025 0103 140A0000 		.4byte	.LASF23
 3026 0107 03       		.byte	0x3
 3027 0108 35       		.byte	0x35
 3028 0109 E7010000 		.4byte	0x1e7
 3029 010d 10       		.byte	0x10
 3030 010e 06       		.uleb128 0x6
 3031 010f 28080000 		.4byte	.LASF24
 3032 0113 03       		.byte	0x3
 3033 0114 36       		.byte	0x36
 3034 0115 ED010000 		.4byte	0x1ed
 3035 0119 14       		.byte	0x14
 3036 011a 06       		.uleb128 0x6
 3037 011b 3C030000 		.4byte	.LASF25
 3038 011f 03       		.byte	0x3
 3039 0120 37       		.byte	0x37
 3040 0121 F8010000 		.4byte	0x1f8
 3041 0125 18       		.byte	0x18
 3042 0126 06       		.uleb128 0x6
 3043 0127 9D040000 		.4byte	.LASF26
 3044 012b 03       		.byte	0x3
 3045 012c 38       		.byte	0x38
 3046 012d E7010000 		.4byte	0x1e7
 3047 0131 1C       		.byte	0x1c
 3048 0132 06       		.uleb128 0x6
 3049 0133 66030000 		.4byte	.LASF27
 3050 0137 03       		.byte	0x3
 3051 0138 39       		.byte	0x39
 3052 0139 E7010000 		.4byte	0x1e7
 3053 013d 20       		.byte	0x20
 3054 013e 06       		.uleb128 0x6
 3055 013f 15020000 		.4byte	.LASF28
 3056 0143 03       		.byte	0x3
 3057 0144 3A       		.byte	0x3a
 3058 0145 E7010000 		.4byte	0x1e7
 3059 0149 24       		.byte	0x24
 3060 014a 06       		.uleb128 0x6
 3061 014b A8060000 		.4byte	.LASF29
 3062 014f 03       		.byte	0x3
 3063 0150 3B       		.byte	0x3b
 3064 0151 FE010000 		.4byte	0x1fe
 3065 0155 28       		.byte	0x28
 3066 0156 06       		.uleb128 0x6
 3067 0157 E4010000 		.4byte	.LASF30
 3068 015b 03       		.byte	0x3
 3069 015c 3C       		.byte	0x3c
 3070 015d FE010000 		.4byte	0x1fe
 3071 0161 2C       		.byte	0x2c
 3072 0162 06       		.uleb128 0x6
 3073 0163 DA080000 		.4byte	.LASF31
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 105


 3074 0167 03       		.byte	0x3
 3075 0168 3D       		.byte	0x3d
 3076 0169 FE010000 		.4byte	0x1fe
 3077 016d 30       		.byte	0x30
 3078 016e 06       		.uleb128 0x6
 3079 016f 7D080000 		.4byte	.LASF32
 3080 0173 03       		.byte	0x3
 3081 0174 3E       		.byte	0x3e
 3082 0175 E7010000 		.4byte	0x1e7
 3083 0179 34       		.byte	0x34
 3084 017a 06       		.uleb128 0x6
 3085 017b 34000000 		.4byte	.LASF33
 3086 017f 03       		.byte	0x3
 3087 0180 3F       		.byte	0x3f
 3088 0181 E7010000 		.4byte	0x1e7
 3089 0185 38       		.byte	0x38
 3090 0186 06       		.uleb128 0x6
 3091 0187 B0050000 		.4byte	.LASF34
 3092 018b 03       		.byte	0x3
 3093 018c 40       		.byte	0x40
 3094 018d ED010000 		.4byte	0x1ed
 3095 0191 3C       		.byte	0x3c
 3096 0192 06       		.uleb128 0x6
 3097 0193 7A020000 		.4byte	.LASF35
 3098 0197 03       		.byte	0x3
 3099 0198 41       		.byte	0x41
 3100 0199 ED010000 		.4byte	0x1ed
 3101 019d 40       		.byte	0x40
 3102 019e 06       		.uleb128 0x6
 3103 019f 81000000 		.4byte	.LASF36
 3104 01a3 03       		.byte	0x3
 3105 01a4 42       		.byte	0x42
 3106 01a5 ED010000 		.4byte	0x1ed
 3107 01a9 44       		.byte	0x44
 3108 01aa 06       		.uleb128 0x6
 3109 01ab 58060000 		.4byte	.LASF37
 3110 01af 03       		.byte	0x3
 3111 01b0 43       		.byte	0x43
 3112 01b1 13020000 		.4byte	0x213
 3113 01b5 48       		.byte	0x48
 3114 01b6 06       		.uleb128 0x6
 3115 01b7 30060000 		.4byte	.LASF38
 3116 01bb 03       		.byte	0x3
 3117 01bc 44       		.byte	0x44
 3118 01bd 24020000 		.4byte	0x224
 3119 01c1 4C       		.byte	0x4c
 3120 01c2 06       		.uleb128 0x6
 3121 01c3 B3040000 		.4byte	.LASF39
 3122 01c7 03       		.byte	0x3
 3123 01c8 45       		.byte	0x45
 3124 01c9 13020000 		.4byte	0x213
 3125 01cd 50       		.byte	0x50
 3126 01ce 06       		.uleb128 0x6
 3127 01cf 91000000 		.4byte	.LASF40
 3128 01d3 03       		.byte	0x3
 3129 01d4 46       		.byte	0x46
 3130 01d5 3E020000 		.4byte	0x23e
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 106


 3131 01d9 54       		.byte	0x54
 3132 01da 06       		.uleb128 0x6
 3133 01db 5B0A0000 		.4byte	.LASF41
 3134 01df 03       		.byte	0x3
 3135 01e0 47       		.byte	0x47
 3136 01e1 59020000 		.4byte	0x259
 3137 01e5 58       		.byte	0x58
 3138 01e6 00       		.byte	0
 3139 01e7 07       		.uleb128 0x7
 3140 01e8 04       		.byte	0x4
 3141 01e9 6B000000 		.4byte	0x6b
 3142 01ed 07       		.uleb128 0x7
 3143 01ee 04       		.byte	0x4
 3144 01ef F3010000 		.4byte	0x1f3
 3145 01f3 08       		.uleb128 0x8
 3146 01f4 6B000000 		.4byte	0x6b
 3147 01f8 07       		.uleb128 0x7
 3148 01f9 04       		.byte	0x4
 3149 01fa 83000000 		.4byte	0x83
 3150 01fe 07       		.uleb128 0x7
 3151 01ff 04       		.byte	0x4
 3152 0200 77000000 		.4byte	0x77
 3153 0204 09       		.uleb128 0x9
 3154 0205 77000000 		.4byte	0x77
 3155 0209 13020000 		.4byte	0x213
 3156 020d 0A       		.uleb128 0xa
 3157 020e 83000000 		.4byte	0x83
 3158 0212 00       		.byte	0
 3159 0213 07       		.uleb128 0x7
 3160 0214 04       		.byte	0x4
 3161 0215 04020000 		.4byte	0x204
 3162 0219 0B       		.uleb128 0xb
 3163 021a 24020000 		.4byte	0x224
 3164 021e 0A       		.uleb128 0xa
 3165 021f 83000000 		.4byte	0x83
 3166 0223 00       		.byte	0
 3167 0224 07       		.uleb128 0x7
 3168 0225 04       		.byte	0x4
 3169 0226 19020000 		.4byte	0x219
 3170 022a 09       		.uleb128 0x9
 3171 022b 83000000 		.4byte	0x83
 3172 022f 3E020000 		.4byte	0x23e
 3173 0233 0A       		.uleb128 0xa
 3174 0234 ED010000 		.4byte	0x1ed
 3175 0238 0A       		.uleb128 0xa
 3176 0239 83000000 		.4byte	0x83
 3177 023d 00       		.byte	0
 3178 023e 07       		.uleb128 0x7
 3179 023f 04       		.byte	0x4
 3180 0240 2A020000 		.4byte	0x22a
 3181 0244 0B       		.uleb128 0xb
 3182 0245 59020000 		.4byte	0x259
 3183 0249 0A       		.uleb128 0xa
 3184 024a E7010000 		.4byte	0x1e7
 3185 024e 0A       		.uleb128 0xa
 3186 024f 83000000 		.4byte	0x83
 3187 0253 0A       		.uleb128 0xa
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 107


 3188 0254 83000000 		.4byte	0x83
 3189 0258 00       		.byte	0
 3190 0259 07       		.uleb128 0x7
 3191 025a 04       		.byte	0x4
 3192 025b 44020000 		.4byte	0x244
 3193 025f 0C       		.uleb128 0xc
 3194 0260 04010000 		.4byte	.LASF42
 3195 0264 03       		.byte	0x3
 3196 0265 48       		.byte	0x48
 3197 0266 CA000000 		.4byte	0xca
 3198 026a 05       		.uleb128 0x5
 3199 026b 0C       		.byte	0xc
 3200 026c 03       		.byte	0x3
 3201 026d 4A       		.byte	0x4a
 3202 026e BB020000 		.4byte	0x2bb
 3203 0272 06       		.uleb128 0x6
 3204 0273 49050000 		.4byte	.LASF43
 3205 0277 03       		.byte	0x3
 3206 0278 4C       		.byte	0x4c
 3207 0279 6B000000 		.4byte	0x6b
 3208 027d 00       		.byte	0
 3209 027e 06       		.uleb128 0x6
 3210 027f 87020000 		.4byte	.LASF44
 3211 0283 03       		.byte	0x3
 3212 0284 4D       		.byte	0x4d
 3213 0285 6B000000 		.4byte	0x6b
 3214 0289 01       		.byte	0x1
 3215 028a 06       		.uleb128 0x6
 3216 028b 38010000 		.4byte	.LASF45
 3217 028f 03       		.byte	0x3
 3218 0290 4E       		.byte	0x4e
 3219 0291 6B000000 		.4byte	0x6b
 3220 0295 02       		.byte	0x2
 3221 0296 06       		.uleb128 0x6
 3222 0297 62050000 		.4byte	.LASF46
 3223 029b 03       		.byte	0x3
 3224 029c 4F       		.byte	0x4f
 3225 029d 77000000 		.4byte	0x77
 3226 02a1 04       		.byte	0x4
 3227 02a2 06       		.uleb128 0x6
 3228 02a3 77070000 		.4byte	.LASF47
 3229 02a7 03       		.byte	0x3
 3230 02a8 50       		.byte	0x50
 3231 02a9 77000000 		.4byte	0x77
 3232 02ad 06       		.byte	0x6
 3233 02ae 06       		.uleb128 0x6
 3234 02af C2080000 		.4byte	.LASF48
 3235 02b3 03       		.byte	0x3
 3236 02b4 51       		.byte	0x51
 3237 02b5 BB020000 		.4byte	0x2bb
 3238 02b9 08       		.byte	0x8
 3239 02ba 00       		.byte	0
 3240 02bb 07       		.uleb128 0x7
 3241 02bc 04       		.byte	0x4
 3242 02bd C1020000 		.4byte	0x2c1
 3243 02c1 08       		.uleb128 0x8
 3244 02c2 5F020000 		.4byte	0x25f
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 108


 3245 02c6 0C       		.uleb128 0xc
 3246 02c7 E5030000 		.4byte	.LASF49
 3247 02cb 03       		.byte	0x3
 3248 02cc 52       		.byte	0x52
 3249 02cd 6A020000 		.4byte	0x26a
 3250 02d1 0D       		.uleb128 0xd
 3251 02d2 80060000 		.4byte	.LASF50
 3252 02d6 01       		.byte	0x1
 3253 02d7 86       		.byte	0x86
 3254 02d8 00000000 		.4byte	.LFB32
 3255 02dc 6C000000 		.4byte	.LFE32-.LFB32
 3256 02e0 01       		.uleb128 0x1
 3257 02e1 9C       		.byte	0x9c
 3258 02e2 F5020000 		.4byte	0x2f5
 3259 02e6 0E       		.uleb128 0xe
 3260 02e7 5B050000 		.4byte	.LASF52
 3261 02eb 01       		.byte	0x1
 3262 02ec 86       		.byte	0x86
 3263 02ed 83000000 		.4byte	0x83
 3264 02f1 02       		.uleb128 0x2
 3265 02f2 91       		.byte	0x91
 3266 02f3 74       		.sleb128 -12
 3267 02f4 00       		.byte	0
 3268 02f5 0F       		.uleb128 0xf
 3269 02f6 37020000 		.4byte	.LASF51
 3270 02fa 01       		.byte	0x1
 3271 02fb D1       		.byte	0xd1
 3272 02fc 00000000 		.4byte	.LFB33
 3273 0300 2A000000 		.4byte	.LFE33-.LFB33
 3274 0304 01       		.uleb128 0x1
 3275 0305 9C       		.byte	0x9c
 3276 0306 19030000 		.4byte	0x319
 3277 030a 0E       		.uleb128 0xe
 3278 030b 5B050000 		.4byte	.LASF52
 3279 030f 01       		.byte	0x1
 3280 0310 D1       		.byte	0xd1
 3281 0311 83000000 		.4byte	0x83
 3282 0315 02       		.uleb128 0x2
 3283 0316 91       		.byte	0x91
 3284 0317 74       		.sleb128 -12
 3285 0318 00       		.byte	0
 3286 0319 0F       		.uleb128 0xf
 3287 031a 52090000 		.4byte	.LASF53
 3288 031e 01       		.byte	0x1
 3289 031f F6       		.byte	0xf6
 3290 0320 00000000 		.4byte	.LFB34
 3291 0324 28000000 		.4byte	.LFE34-.LFB34
 3292 0328 01       		.uleb128 0x1
 3293 0329 9C       		.byte	0x9c
 3294 032a 3B030000 		.4byte	0x33b
 3295 032e 10       		.uleb128 0x10
 3296 032f 6900     		.ascii	"i\000"
 3297 0331 01       		.byte	0x1
 3298 0332 F8       		.byte	0xf8
 3299 0333 83000000 		.4byte	0x83
 3300 0337 02       		.uleb128 0x2
 3301 0338 91       		.byte	0x91
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 109


 3302 0339 74       		.sleb128 -12
 3303 033a 00       		.byte	0
 3304 033b 11       		.uleb128 0x11
 3305 033c F1010000 		.4byte	.LASF54
 3306 0340 01       		.byte	0x1
 3307 0341 1901     		.2byte	0x119
 3308 0343 00000000 		.4byte	.LFB35
 3309 0347 50000000 		.4byte	.LFE35-.LFB35
 3310 034b 01       		.uleb128 0x1
 3311 034c 9C       		.byte	0x9c
 3312 034d 6E030000 		.4byte	0x36e
 3313 0351 12       		.uleb128 0x12
 3314 0352 6900     		.ascii	"i\000"
 3315 0354 01       		.byte	0x1
 3316 0355 1B01     		.2byte	0x11b
 3317 0357 83000000 		.4byte	0x83
 3318 035b 02       		.uleb128 0x2
 3319 035c 91       		.byte	0x91
 3320 035d 74       		.sleb128 -12
 3321 035e 13       		.uleb128 0x13
 3322 035f E7000000 		.4byte	.LASF55
 3323 0363 01       		.byte	0x1
 3324 0364 1C01     		.2byte	0x11c
 3325 0366 83000000 		.4byte	0x83
 3326 036a 02       		.uleb128 0x2
 3327 036b 91       		.byte	0x91
 3328 036c 70       		.sleb128 -16
 3329 036d 00       		.byte	0
 3330 036e 11       		.uleb128 0x11
 3331 036f 5E000000 		.4byte	.LASF56
 3332 0373 01       		.byte	0x1
 3333 0374 5A01     		.2byte	0x15a
 3334 0376 00000000 		.4byte	.LFB36
 3335 037a 5C020000 		.4byte	.LFE36-.LFB36
 3336 037e 01       		.uleb128 0x1
 3337 037f 9C       		.byte	0x9c
 3338 0380 EE030000 		.4byte	0x3ee
 3339 0384 14       		.uleb128 0x14
 3340 0385 5B050000 		.4byte	.LASF52
 3341 0389 01       		.byte	0x1
 3342 038a 5A01     		.2byte	0x15a
 3343 038c 83000000 		.4byte	0x83
 3344 0390 02       		.uleb128 0x2
 3345 0391 91       		.byte	0x91
 3346 0392 5C       		.sleb128 -36
 3347 0393 13       		.uleb128 0x13
 3348 0394 AE040000 		.4byte	.LASF57
 3349 0398 01       		.byte	0x1
 3350 0399 5C01     		.2byte	0x15c
 3351 039b 83000000 		.4byte	0x83
 3352 039f 02       		.uleb128 0x2
 3353 03a0 91       		.byte	0x91
 3354 03a1 60       		.sleb128 -32
 3355 03a2 13       		.uleb128 0x13
 3356 03a3 91040000 		.4byte	.LASF58
 3357 03a7 01       		.byte	0x1
 3358 03a8 5D01     		.2byte	0x15d
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 110


 3359 03aa 83000000 		.4byte	0x83
 3360 03ae 02       		.uleb128 0x2
 3361 03af 91       		.byte	0x91
 3362 03b0 6C       		.sleb128 -20
 3363 03b1 13       		.uleb128 0x13
 3364 03b2 800A0000 		.4byte	.LASF59
 3365 03b6 01       		.byte	0x1
 3366 03b7 5E01     		.2byte	0x15e
 3367 03b9 77000000 		.4byte	0x77
 3368 03bd 02       		.uleb128 0x2
 3369 03be 91       		.byte	0x91
 3370 03bf 6A       		.sleb128 -22
 3371 03c0 13       		.uleb128 0x13
 3372 03c1 CF040000 		.4byte	.LASF60
 3373 03c5 01       		.byte	0x1
 3374 03c6 5F01     		.2byte	0x15f
 3375 03c8 77000000 		.4byte	0x77
 3376 03cc 02       		.uleb128 0x2
 3377 03cd 91       		.byte	0x91
 3378 03ce 68       		.sleb128 -24
 3379 03cf 13       		.uleb128 0x13
 3380 03d0 AC030000 		.4byte	.LASF61
 3381 03d4 01       		.byte	0x1
 3382 03d5 6001     		.2byte	0x160
 3383 03d7 6B000000 		.4byte	0x6b
 3384 03db 02       		.uleb128 0x2
 3385 03dc 91       		.byte	0x91
 3386 03dd 67       		.sleb128 -25
 3387 03de 13       		.uleb128 0x13
 3388 03df CB080000 		.4byte	.LASF62
 3389 03e3 01       		.byte	0x1
 3390 03e4 6101     		.2byte	0x161
 3391 03e6 6B000000 		.4byte	0x6b
 3392 03ea 02       		.uleb128 0x2
 3393 03eb 91       		.byte	0x91
 3394 03ec 66       		.sleb128 -26
 3395 03ed 00       		.byte	0
 3396 03ee 11       		.uleb128 0x11
 3397 03ef 62060000 		.4byte	.LASF63
 3398 03f3 01       		.byte	0x1
 3399 03f4 1A02     		.2byte	0x21a
 3400 03f6 00000000 		.4byte	.LFB37
 3401 03fa 20000000 		.4byte	.LFE37-.LFB37
 3402 03fe 01       		.uleb128 0x1
 3403 03ff 9C       		.byte	0x9c
 3404 0400 14040000 		.4byte	0x414
 3405 0404 14       		.uleb128 0x14
 3406 0405 5B050000 		.4byte	.LASF52
 3407 0409 01       		.byte	0x1
 3408 040a 1A02     		.2byte	0x21a
 3409 040c 83000000 		.4byte	0x83
 3410 0410 02       		.uleb128 0x2
 3411 0411 91       		.byte	0x91
 3412 0412 74       		.sleb128 -12
 3413 0413 00       		.byte	0
 3414 0414 11       		.uleb128 0x11
 3415 0415 B7000000 		.4byte	.LASF64
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 111


 3416 0419 01       		.byte	0x1
 3417 041a 5002     		.2byte	0x250
 3418 041c 00000000 		.4byte	.LFB38
 3419 0420 44000000 		.4byte	.LFE38-.LFB38
 3420 0424 01       		.uleb128 0x1
 3421 0425 9C       		.byte	0x9c
 3422 0426 47040000 		.4byte	0x447
 3423 042a 12       		.uleb128 0x12
 3424 042b 6900     		.ascii	"i\000"
 3425 042d 01       		.byte	0x1
 3426 042e 5202     		.2byte	0x252
 3427 0430 83000000 		.4byte	0x83
 3428 0434 02       		.uleb128 0x2
 3429 0435 91       		.byte	0x91
 3430 0436 74       		.sleb128 -12
 3431 0437 13       		.uleb128 0x13
 3432 0438 E7000000 		.4byte	.LASF55
 3433 043c 01       		.byte	0x1
 3434 043d 5302     		.2byte	0x253
 3435 043f 83000000 		.4byte	0x83
 3436 0443 02       		.uleb128 0x2
 3437 0444 91       		.byte	0x91
 3438 0445 70       		.sleb128 -16
 3439 0446 00       		.byte	0
 3440 0447 11       		.uleb128 0x11
 3441 0448 F8020000 		.4byte	.LASF65
 3442 044c 01       		.byte	0x1
 3443 044d 7D02     		.2byte	0x27d
 3444 044f 00000000 		.4byte	.LFB39
 3445 0453 58000000 		.4byte	.LFE39-.LFB39
 3446 0457 01       		.uleb128 0x1
 3447 0458 9C       		.byte	0x9c
 3448 0459 B6040000 		.4byte	0x4b6
 3449 045d 14       		.uleb128 0x14
 3450 045e AC030000 		.4byte	.LASF61
 3451 0462 01       		.byte	0x1
 3452 0463 7D02     		.2byte	0x27d
 3453 0465 83000000 		.4byte	0x83
 3454 0469 02       		.uleb128 0x2
 3455 046a 91       		.byte	0x91
 3456 046b 5C       		.sleb128 -36
 3457 046c 13       		.uleb128 0x13
 3458 046d DF040000 		.4byte	.LASF66
 3459 0471 01       		.byte	0x1
 3460 0472 7F02     		.2byte	0x27f
 3461 0474 83000000 		.4byte	0x83
 3462 0478 02       		.uleb128 0x2
 3463 0479 91       		.byte	0x91
 3464 047a 70       		.sleb128 -16
 3465 047b 13       		.uleb128 0x13
 3466 047c 02080000 		.4byte	.LASF67
 3467 0480 01       		.byte	0x1
 3468 0481 8002     		.2byte	0x280
 3469 0483 83000000 		.4byte	0x83
 3470 0487 02       		.uleb128 0x2
 3471 0488 91       		.byte	0x91
 3472 0489 6C       		.sleb128 -20
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 112


 3473 048a 13       		.uleb128 0x13
 3474 048b 6C070000 		.4byte	.LASF68
 3475 048f 01       		.byte	0x1
 3476 0490 8102     		.2byte	0x281
 3477 0492 83000000 		.4byte	0x83
 3478 0496 02       		.uleb128 0x2
 3479 0497 91       		.byte	0x91
 3480 0498 68       		.sleb128 -24
 3481 0499 12       		.uleb128 0x12
 3482 049a 6900     		.ascii	"i\000"
 3483 049c 01       		.byte	0x1
 3484 049d 8202     		.2byte	0x282
 3485 049f 83000000 		.4byte	0x83
 3486 04a3 02       		.uleb128 0x2
 3487 04a4 91       		.byte	0x91
 3488 04a5 74       		.sleb128 -12
 3489 04a6 13       		.uleb128 0x13
 3490 04a7 E7000000 		.4byte	.LASF55
 3491 04ab 01       		.byte	0x1
 3492 04ac 8302     		.2byte	0x283
 3493 04ae 83000000 		.4byte	0x83
 3494 04b2 02       		.uleb128 0x2
 3495 04b3 91       		.byte	0x91
 3496 04b4 64       		.sleb128 -28
 3497 04b5 00       		.byte	0
 3498 04b6 15       		.uleb128 0x15
 3499 04b7 72090000 		.4byte	.LASF71
 3500 04bb 01       		.byte	0x1
 3501 04bc AE02     		.2byte	0x2ae
 3502 04be 77000000 		.4byte	0x77
 3503 04c2 00000000 		.4byte	.LFB40
 3504 04c6 1C000000 		.4byte	.LFE40-.LFB40
 3505 04ca 01       		.uleb128 0x1
 3506 04cb 9C       		.byte	0x9c
 3507 04cc E0040000 		.4byte	0x4e0
 3508 04d0 14       		.uleb128 0x14
 3509 04d1 5B050000 		.4byte	.LASF52
 3510 04d5 01       		.byte	0x1
 3511 04d6 AE02     		.2byte	0x2ae
 3512 04d8 83000000 		.4byte	0x83
 3513 04dc 02       		.uleb128 0x2
 3514 04dd 91       		.byte	0x91
 3515 04de 74       		.sleb128 -12
 3516 04df 00       		.byte	0
 3517 04e0 16       		.uleb128 0x16
 3518 04e1 61020000 		.4byte	.LASF69
 3519 04e5 01       		.byte	0x1
 3520 04e6 C902     		.2byte	0x2c9
 3521 04e8 00000000 		.4byte	.LFB41
 3522 04ec 28000000 		.4byte	.LFE41-.LFB41
 3523 04f0 01       		.uleb128 0x1
 3524 04f1 9C       		.byte	0x9c
 3525 04f2 15050000 		.4byte	0x515
 3526 04f6 14       		.uleb128 0x14
 3527 04f7 5B050000 		.4byte	.LASF52
 3528 04fb 01       		.byte	0x1
 3529 04fc C902     		.2byte	0x2c9
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 113


 3530 04fe 83000000 		.4byte	0x83
 3531 0502 02       		.uleb128 0x2
 3532 0503 91       		.byte	0x91
 3533 0504 74       		.sleb128 -12
 3534 0505 14       		.uleb128 0x14
 3535 0506 C6050000 		.4byte	.LASF70
 3536 050a 01       		.byte	0x1
 3537 050b C902     		.2byte	0x2c9
 3538 050d 77000000 		.4byte	0x77
 3539 0511 02       		.uleb128 0x2
 3540 0512 91       		.byte	0x91
 3541 0513 72       		.sleb128 -14
 3542 0514 00       		.byte	0
 3543 0515 15       		.uleb128 0x15
 3544 0516 77040000 		.4byte	.LASF72
 3545 051a 01       		.byte	0x1
 3546 051b E402     		.2byte	0x2e4
 3547 051d 6B000000 		.4byte	0x6b
 3548 0521 00000000 		.4byte	.LFB42
 3549 0525 1C000000 		.4byte	.LFE42-.LFB42
 3550 0529 01       		.uleb128 0x1
 3551 052a 9C       		.byte	0x9c
 3552 052b 3F050000 		.4byte	0x53f
 3553 052f 14       		.uleb128 0x14
 3554 0530 5B050000 		.4byte	.LASF52
 3555 0534 01       		.byte	0x1
 3556 0535 E402     		.2byte	0x2e4
 3557 0537 83000000 		.4byte	0x83
 3558 053b 02       		.uleb128 0x2
 3559 053c 91       		.byte	0x91
 3560 053d 74       		.sleb128 -12
 3561 053e 00       		.byte	0
 3562 053f 16       		.uleb128 0x16
 3563 0540 97020000 		.4byte	.LASF73
 3564 0544 01       		.byte	0x1
 3565 0545 FF02     		.2byte	0x2ff
 3566 0547 00000000 		.4byte	.LFB43
 3567 054b 28000000 		.4byte	.LFE43-.LFB43
 3568 054f 01       		.uleb128 0x1
 3569 0550 9C       		.byte	0x9c
 3570 0551 74050000 		.4byte	0x574
 3571 0555 14       		.uleb128 0x14
 3572 0556 5B050000 		.4byte	.LASF52
 3573 055a 01       		.byte	0x1
 3574 055b FF02     		.2byte	0x2ff
 3575 055d 83000000 		.4byte	0x83
 3576 0561 02       		.uleb128 0x2
 3577 0562 91       		.byte	0x91
 3578 0563 74       		.sleb128 -12
 3579 0564 14       		.uleb128 0x14
 3580 0565 54040000 		.4byte	.LASF74
 3581 0569 01       		.byte	0x1
 3582 056a FF02     		.2byte	0x2ff
 3583 056c 6B000000 		.4byte	0x6b
 3584 0570 02       		.uleb128 0x2
 3585 0571 91       		.byte	0x91
 3586 0572 73       		.sleb128 -13
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 114


 3587 0573 00       		.byte	0
 3588 0574 15       		.uleb128 0x15
 3589 0575 3A070000 		.4byte	.LASF75
 3590 0579 01       		.byte	0x1
 3591 057a 1A03     		.2byte	0x31a
 3592 057c 6B000000 		.4byte	0x6b
 3593 0580 00000000 		.4byte	.LFB44
 3594 0584 1C000000 		.4byte	.LFE44-.LFB44
 3595 0588 01       		.uleb128 0x1
 3596 0589 9C       		.byte	0x9c
 3597 058a 9E050000 		.4byte	0x59e
 3598 058e 14       		.uleb128 0x14
 3599 058f AC030000 		.4byte	.LASF61
 3600 0593 01       		.byte	0x1
 3601 0594 1A03     		.2byte	0x31a
 3602 0596 83000000 		.4byte	0x83
 3603 059a 02       		.uleb128 0x2
 3604 059b 91       		.byte	0x91
 3605 059c 74       		.sleb128 -12
 3606 059d 00       		.byte	0
 3607 059e 15       		.uleb128 0x15
 3608 059f 4B030000 		.4byte	.LASF76
 3609 05a3 01       		.byte	0x1
 3610 05a4 3503     		.2byte	0x335
 3611 05a6 6B000000 		.4byte	0x6b
 3612 05aa 00000000 		.4byte	.LFB45
 3613 05ae 1C000000 		.4byte	.LFE45-.LFB45
 3614 05b2 01       		.uleb128 0x1
 3615 05b3 9C       		.byte	0x9c
 3616 05b4 C8050000 		.4byte	0x5c8
 3617 05b8 14       		.uleb128 0x14
 3618 05b9 AC030000 		.4byte	.LASF61
 3619 05bd 01       		.byte	0x1
 3620 05be 3503     		.2byte	0x335
 3621 05c0 83000000 		.4byte	0x83
 3622 05c4 02       		.uleb128 0x2
 3623 05c5 91       		.byte	0x91
 3624 05c6 74       		.sleb128 -12
 3625 05c7 00       		.byte	0
 3626 05c8 15       		.uleb128 0x15
 3627 05c9 5A040000 		.4byte	.LASF77
 3628 05cd 01       		.byte	0x1
 3629 05ce 5103     		.2byte	0x351
 3630 05d0 6B000000 		.4byte	0x6b
 3631 05d4 00000000 		.4byte	.LFB46
 3632 05d8 1C000000 		.4byte	.LFE46-.LFB46
 3633 05dc 01       		.uleb128 0x1
 3634 05dd 9C       		.byte	0x9c
 3635 05de F2050000 		.4byte	0x5f2
 3636 05e2 14       		.uleb128 0x14
 3637 05e3 AC030000 		.4byte	.LASF61
 3638 05e7 01       		.byte	0x1
 3639 05e8 5103     		.2byte	0x351
 3640 05ea 83000000 		.4byte	0x83
 3641 05ee 02       		.uleb128 0x2
 3642 05ef 91       		.byte	0x91
 3643 05f0 74       		.sleb128 -12
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 115


 3644 05f1 00       		.byte	0
 3645 05f2 15       		.uleb128 0x15
 3646 05f3 8D050000 		.4byte	.LASF78
 3647 05f7 01       		.byte	0x1
 3648 05f8 6D03     		.2byte	0x36d
 3649 05fa 6B000000 		.4byte	0x6b
 3650 05fe 00000000 		.4byte	.LFB47
 3651 0602 1C000000 		.4byte	.LFE47-.LFB47
 3652 0606 01       		.uleb128 0x1
 3653 0607 9C       		.byte	0x9c
 3654 0608 1C060000 		.4byte	0x61c
 3655 060c 14       		.uleb128 0x14
 3656 060d AC030000 		.4byte	.LASF61
 3657 0611 01       		.byte	0x1
 3658 0612 6D03     		.2byte	0x36d
 3659 0614 83000000 		.4byte	0x83
 3660 0618 02       		.uleb128 0x2
 3661 0619 91       		.byte	0x91
 3662 061a 74       		.sleb128 -12
 3663 061b 00       		.byte	0
 3664 061c 16       		.uleb128 0x16
 3665 061d 19040000 		.4byte	.LASF79
 3666 0621 01       		.byte	0x1
 3667 0622 8E03     		.2byte	0x38e
 3668 0624 00000000 		.4byte	.LFB48
 3669 0628 28000000 		.4byte	.LFE48-.LFB48
 3670 062c 01       		.uleb128 0x1
 3671 062d 9C       		.byte	0x9c
 3672 062e 51060000 		.4byte	0x651
 3673 0632 14       		.uleb128 0x14
 3674 0633 AC030000 		.4byte	.LASF61
 3675 0637 01       		.byte	0x1
 3676 0638 8E03     		.2byte	0x38e
 3677 063a 83000000 		.4byte	0x83
 3678 063e 02       		.uleb128 0x2
 3679 063f 91       		.byte	0x91
 3680 0640 74       		.sleb128 -12
 3681 0641 14       		.uleb128 0x14
 3682 0642 54040000 		.4byte	.LASF74
 3683 0646 01       		.byte	0x1
 3684 0647 8E03     		.2byte	0x38e
 3685 0649 6B000000 		.4byte	0x6b
 3686 064d 02       		.uleb128 0x2
 3687 064e 91       		.byte	0x91
 3688 064f 73       		.sleb128 -13
 3689 0650 00       		.byte	0
 3690 0651 16       		.uleb128 0x16
 3691 0652 DD020000 		.4byte	.LASF80
 3692 0656 01       		.byte	0x1
 3693 0657 AA03     		.2byte	0x3aa
 3694 0659 00000000 		.4byte	.LFB49
 3695 065d 28000000 		.4byte	.LFE49-.LFB49
 3696 0661 01       		.uleb128 0x1
 3697 0662 9C       		.byte	0x9c
 3698 0663 86060000 		.4byte	0x686
 3699 0667 14       		.uleb128 0x14
 3700 0668 AC030000 		.4byte	.LASF61
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 116


 3701 066c 01       		.byte	0x1
 3702 066d AA03     		.2byte	0x3aa
 3703 066f 83000000 		.4byte	0x83
 3704 0673 02       		.uleb128 0x2
 3705 0674 91       		.byte	0x91
 3706 0675 74       		.sleb128 -12
 3707 0676 14       		.uleb128 0x14
 3708 0677 54040000 		.4byte	.LASF74
 3709 067b 01       		.byte	0x1
 3710 067c AA03     		.2byte	0x3aa
 3711 067e 6B000000 		.4byte	0x6b
 3712 0682 02       		.uleb128 0x2
 3713 0683 91       		.byte	0x91
 3714 0684 73       		.sleb128 -13
 3715 0685 00       		.byte	0
 3716 0686 16       		.uleb128 0x16
 3717 0687 1D070000 		.4byte	.LASF81
 3718 068b 01       		.byte	0x1
 3719 068c C603     		.2byte	0x3c6
 3720 068e 00000000 		.4byte	.LFB50
 3721 0692 28000000 		.4byte	.LFE50-.LFB50
 3722 0696 01       		.uleb128 0x1
 3723 0697 9C       		.byte	0x9c
 3724 0698 BB060000 		.4byte	0x6bb
 3725 069c 14       		.uleb128 0x14
 3726 069d AC030000 		.4byte	.LASF61
 3727 06a1 01       		.byte	0x1
 3728 06a2 C603     		.2byte	0x3c6
 3729 06a4 83000000 		.4byte	0x83
 3730 06a8 02       		.uleb128 0x2
 3731 06a9 91       		.byte	0x91
 3732 06aa 74       		.sleb128 -12
 3733 06ab 14       		.uleb128 0x14
 3734 06ac 54040000 		.4byte	.LASF74
 3735 06b0 01       		.byte	0x1
 3736 06b1 C603     		.2byte	0x3c6
 3737 06b3 6B000000 		.4byte	0x6b
 3738 06b7 02       		.uleb128 0x2
 3739 06b8 91       		.byte	0x91
 3740 06b9 73       		.sleb128 -13
 3741 06ba 00       		.byte	0
 3742 06bb 16       		.uleb128 0x16
 3743 06bc E5060000 		.4byte	.LASF82
 3744 06c0 01       		.byte	0x1
 3745 06c1 E303     		.2byte	0x3e3
 3746 06c3 00000000 		.4byte	.LFB51
 3747 06c7 28000000 		.4byte	.LFE51-.LFB51
 3748 06cb 01       		.uleb128 0x1
 3749 06cc 9C       		.byte	0x9c
 3750 06cd F0060000 		.4byte	0x6f0
 3751 06d1 14       		.uleb128 0x14
 3752 06d2 AC030000 		.4byte	.LASF61
 3753 06d6 01       		.byte	0x1
 3754 06d7 E303     		.2byte	0x3e3
 3755 06d9 83000000 		.4byte	0x83
 3756 06dd 02       		.uleb128 0x2
 3757 06de 91       		.byte	0x91
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 117


 3758 06df 74       		.sleb128 -12
 3759 06e0 14       		.uleb128 0x14
 3760 06e1 54040000 		.4byte	.LASF74
 3761 06e5 01       		.byte	0x1
 3762 06e6 E303     		.2byte	0x3e3
 3763 06e8 6B000000 		.4byte	0x6b
 3764 06ec 02       		.uleb128 0x2
 3765 06ed 91       		.byte	0x91
 3766 06ee 73       		.sleb128 -13
 3767 06ef 00       		.byte	0
 3768 06f0 16       		.uleb128 0x16
 3769 06f1 EC080000 		.4byte	.LASF83
 3770 06f5 01       		.byte	0x1
 3771 06f6 FF03     		.2byte	0x3ff
 3772 06f8 00000000 		.4byte	.LFB52
 3773 06fc 28000000 		.4byte	.LFE52-.LFB52
 3774 0700 01       		.uleb128 0x1
 3775 0701 9C       		.byte	0x9c
 3776 0702 25070000 		.4byte	0x725
 3777 0706 14       		.uleb128 0x14
 3778 0707 AC030000 		.4byte	.LASF61
 3779 070b 01       		.byte	0x1
 3780 070c FF03     		.2byte	0x3ff
 3781 070e 83000000 		.4byte	0x83
 3782 0712 02       		.uleb128 0x2
 3783 0713 91       		.byte	0x91
 3784 0714 74       		.sleb128 -12
 3785 0715 14       		.uleb128 0x14
 3786 0716 54040000 		.4byte	.LASF74
 3787 071a 01       		.byte	0x1
 3788 071b FF03     		.2byte	0x3ff
 3789 071d 6B000000 		.4byte	0x6b
 3790 0721 02       		.uleb128 0x2
 3791 0722 91       		.byte	0x91
 3792 0723 73       		.sleb128 -13
 3793 0724 00       		.byte	0
 3794 0725 16       		.uleb128 0x16
 3795 0726 8B090000 		.4byte	.LASF84
 3796 072a 01       		.byte	0x1
 3797 072b 1B04     		.2byte	0x41b
 3798 072d 00000000 		.4byte	.LFB53
 3799 0731 28000000 		.4byte	.LFE53-.LFB53
 3800 0735 01       		.uleb128 0x1
 3801 0736 9C       		.byte	0x9c
 3802 0737 5A070000 		.4byte	0x75a
 3803 073b 14       		.uleb128 0x14
 3804 073c 5B050000 		.4byte	.LASF52
 3805 0740 01       		.byte	0x1
 3806 0741 1B04     		.2byte	0x41b
 3807 0743 83000000 		.4byte	0x83
 3808 0747 02       		.uleb128 0x2
 3809 0748 91       		.byte	0x91
 3810 0749 74       		.sleb128 -12
 3811 074a 14       		.uleb128 0x14
 3812 074b 54040000 		.4byte	.LASF74
 3813 074f 01       		.byte	0x1
 3814 0750 1B04     		.2byte	0x41b
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 118


 3815 0752 6B000000 		.4byte	0x6b
 3816 0756 02       		.uleb128 0x2
 3817 0757 91       		.byte	0x91
 3818 0758 73       		.sleb128 -13
 3819 0759 00       		.byte	0
 3820 075a 17       		.uleb128 0x17
 3821 075b 3B060000 		.4byte	.LASF85
 3822 075f 01       		.byte	0x1
 3823 0760 4904     		.2byte	0x449
 3824 0762 83000000 		.4byte	0x83
 3825 0766 00000000 		.4byte	.LFB54
 3826 076a 38010000 		.4byte	.LFE54-.LFB54
 3827 076e 01       		.uleb128 0x1
 3828 076f 9C       		.byte	0x9c
 3829 0770 E1070000 		.4byte	0x7e1
 3830 0774 14       		.uleb128 0x14
 3831 0775 5B050000 		.4byte	.LASF52
 3832 0779 01       		.byte	0x1
 3833 077a 4904     		.2byte	0x449
 3834 077c 83000000 		.4byte	0x83
 3835 0780 02       		.uleb128 0x2
 3836 0781 91       		.byte	0x91
 3837 0782 6C       		.sleb128 -20
 3838 0783 13       		.uleb128 0x13
 3839 0784 AC030000 		.4byte	.LASF61
 3840 0788 01       		.byte	0x1
 3841 0789 4B04     		.2byte	0x44b
 3842 078b 6B000000 		.4byte	0x6b
 3843 078f 02       		.uleb128 0x2
 3844 0790 91       		.byte	0x91
 3845 0791 77       		.sleb128 -9
 3846 0792 13       		.uleb128 0x13
 3847 0793 27060000 		.4byte	.LASF86
 3848 0797 01       		.byte	0x1
 3849 0798 4C04     		.2byte	0x44c
 3850 079a 6B000000 		.4byte	0x6b
 3851 079e 02       		.uleb128 0x2
 3852 079f 91       		.byte	0x91
 3853 07a0 74       		.sleb128 -12
 3854 07a1 13       		.uleb128 0x13
 3855 07a2 44090000 		.4byte	.LASF87
 3856 07a6 01       		.byte	0x1
 3857 07a7 4D04     		.2byte	0x44d
 3858 07a9 6B000000 		.4byte	0x6b
 3859 07ad 02       		.uleb128 0x2
 3860 07ae 91       		.byte	0x91
 3861 07af 73       		.sleb128 -13
 3862 07b0 13       		.uleb128 0x13
 3863 07b1 01090000 		.4byte	.LASF88
 3864 07b5 01       		.byte	0x1
 3865 07b6 4F04     		.2byte	0x44f
 3866 07b8 6B000000 		.4byte	0x6b
 3867 07bc 02       		.uleb128 0x2
 3868 07bd 91       		.byte	0x91
 3869 07be 76       		.sleb128 -10
 3870 07bf 13       		.uleb128 0x13
 3871 07c0 C4040000 		.4byte	.LASF89
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 119


 3872 07c4 01       		.byte	0x1
 3873 07c5 5004     		.2byte	0x450
 3874 07c7 6B000000 		.4byte	0x6b
 3875 07cb 02       		.uleb128 0x2
 3876 07cc 91       		.byte	0x91
 3877 07cd 75       		.sleb128 -11
 3878 07ce 13       		.uleb128 0x13
 3879 07cf 1B000000 		.4byte	.LASF90
 3880 07d3 01       		.byte	0x1
 3881 07d4 5104     		.2byte	0x451
 3882 07d6 E1070000 		.4byte	0x7e1
 3883 07da 05       		.uleb128 0x5
 3884 07db 03       		.byte	0x3
 3885 07dc 20000000 		.4byte	CapSense_debounceCounter.5490
 3886 07e0 00       		.byte	0
 3887 07e1 18       		.uleb128 0x18
 3888 07e2 6B000000 		.4byte	0x6b
 3889 07e6 F1070000 		.4byte	0x7f1
 3890 07ea 19       		.uleb128 0x19
 3891 07eb BC000000 		.4byte	0xbc
 3892 07ef 00       		.byte	0
 3893 07f0 00       		.byte	0
 3894 07f1 17       		.uleb128 0x17
 3895 07f2 9D0A0000 		.4byte	.LASF91
 3896 07f6 01       		.byte	0x1
 3897 07f7 A004     		.2byte	0x4a0
 3898 07f9 83000000 		.4byte	0x83
 3899 07fd 00000000 		.4byte	.LFB55
 3900 0801 42000000 		.4byte	.LFE55-.LFB55
 3901 0805 01       		.uleb128 0x1
 3902 0806 9C       		.byte	0x9c
 3903 0807 48080000 		.4byte	0x848
 3904 080b 14       		.uleb128 0x14
 3905 080c AC030000 		.4byte	.LASF61
 3906 0810 01       		.byte	0x1
 3907 0811 A004     		.2byte	0x4a0
 3908 0813 83000000 		.4byte	0x83
 3909 0817 02       		.uleb128 0x2
 3910 0818 91       		.byte	0x91
 3911 0819 64       		.sleb128 -28
 3912 081a 13       		.uleb128 0x13
 3913 081b E5050000 		.4byte	.LASF92
 3914 081f 01       		.byte	0x1
 3915 0820 A204     		.2byte	0x4a2
 3916 0822 83000000 		.4byte	0x83
 3917 0826 02       		.uleb128 0x2
 3918 0827 91       		.byte	0x91
 3919 0828 74       		.sleb128 -12
 3920 0829 13       		.uleb128 0x13
 3921 082a F7000000 		.4byte	.LASF93
 3922 082e 01       		.byte	0x1
 3923 082f A304     		.2byte	0x4a3
 3924 0831 83000000 		.4byte	0x83
 3925 0835 02       		.uleb128 0x2
 3926 0836 91       		.byte	0x91
 3927 0837 6C       		.sleb128 -20
 3928 0838 13       		.uleb128 0x13
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 120


 3929 0839 F4090000 		.4byte	.LASF94
 3930 083d 01       		.byte	0x1
 3931 083e A404     		.2byte	0x4a4
 3932 0840 83000000 		.4byte	0x83
 3933 0844 02       		.uleb128 0x2
 3934 0845 91       		.byte	0x91
 3935 0846 70       		.sleb128 -16
 3936 0847 00       		.byte	0
 3937 0848 17       		.uleb128 0x17
 3938 0849 F0040000 		.4byte	.LASF95
 3939 084d 01       		.byte	0x1
 3940 084e CE04     		.2byte	0x4ce
 3941 0850 83000000 		.4byte	0x83
 3942 0854 00000000 		.4byte	.LFB56
 3943 0858 36000000 		.4byte	.LFE56-.LFB56
 3944 085c 01       		.uleb128 0x1
 3945 085d 9C       		.byte	0x9c
 3946 085e 7F080000 		.4byte	0x87f
 3947 0862 12       		.uleb128 0x12
 3948 0863 6900     		.ascii	"i\000"
 3949 0865 01       		.byte	0x1
 3950 0866 D104     		.2byte	0x4d1
 3951 0868 83000000 		.4byte	0x83
 3952 086c 02       		.uleb128 0x2
 3953 086d 91       		.byte	0x91
 3954 086e 74       		.sleb128 -12
 3955 086f 13       		.uleb128 0x13
 3956 0870 F4090000 		.4byte	.LASF94
 3957 0874 01       		.byte	0x1
 3958 0875 D204     		.2byte	0x4d2
 3959 0877 83000000 		.4byte	0x83
 3960 087b 02       		.uleb128 0x2
 3961 087c 91       		.byte	0x91
 3962 087d 70       		.sleb128 -16
 3963 087e 00       		.byte	0
 3964 087f 11       		.uleb128 0x11
 3965 0880 72050000 		.4byte	.LASF96
 3966 0884 01       		.byte	0x1
 3967 0885 FD04     		.2byte	0x4fd
 3968 0887 00000000 		.4byte	.LFB57
 3969 088b 5C000000 		.4byte	.LFE57-.LFB57
 3970 088f 01       		.uleb128 0x1
 3971 0890 9C       		.byte	0x9c
 3972 0891 C3080000 		.4byte	0x8c3
 3973 0895 14       		.uleb128 0x14
 3974 0896 AC030000 		.4byte	.LASF61
 3975 089a 01       		.byte	0x1
 3976 089b FD04     		.2byte	0x4fd
 3977 089d 83000000 		.4byte	0x83
 3978 08a1 02       		.uleb128 0x2
 3979 08a2 91       		.byte	0x91
 3980 08a3 6C       		.sleb128 -20
 3981 08a4 13       		.uleb128 0x13
 3982 08a5 E5050000 		.4byte	.LASF92
 3983 08a9 01       		.byte	0x1
 3984 08aa 0005     		.2byte	0x500
 3985 08ac 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 121


 3986 08b0 02       		.uleb128 0x2
 3987 08b1 91       		.byte	0x91
 3988 08b2 77       		.sleb128 -9
 3989 08b3 13       		.uleb128 0x13
 3990 08b4 F7000000 		.4byte	.LASF93
 3991 08b8 01       		.byte	0x1
 3992 08b9 0105     		.2byte	0x501
 3993 08bb 6B000000 		.4byte	0x6b
 3994 08bf 02       		.uleb128 0x2
 3995 08c0 91       		.byte	0x91
 3996 08c1 76       		.sleb128 -10
 3997 08c2 00       		.byte	0
 3998 08c3 11       		.uleb128 0x11
 3999 08c4 A0000000 		.4byte	.LASF97
 4000 08c8 01       		.byte	0x1
 4001 08c9 2805     		.2byte	0x528
 4002 08cb 00000000 		.4byte	.LFB58
 4003 08cf 5C000000 		.4byte	.LFE58-.LFB58
 4004 08d3 01       		.uleb128 0x1
 4005 08d4 9C       		.byte	0x9c
 4006 08d5 07090000 		.4byte	0x907
 4007 08d9 14       		.uleb128 0x14
 4008 08da AC030000 		.4byte	.LASF61
 4009 08de 01       		.byte	0x1
 4010 08df 2805     		.2byte	0x528
 4011 08e1 83000000 		.4byte	0x83
 4012 08e5 02       		.uleb128 0x2
 4013 08e6 91       		.byte	0x91
 4014 08e7 6C       		.sleb128 -20
 4015 08e8 13       		.uleb128 0x13
 4016 08e9 E5050000 		.4byte	.LASF92
 4017 08ed 01       		.byte	0x1
 4018 08ee 2A05     		.2byte	0x52a
 4019 08f0 6B000000 		.4byte	0x6b
 4020 08f4 02       		.uleb128 0x2
 4021 08f5 91       		.byte	0x91
 4022 08f6 77       		.sleb128 -9
 4023 08f7 13       		.uleb128 0x13
 4024 08f8 F7000000 		.4byte	.LASF93
 4025 08fc 01       		.byte	0x1
 4026 08fd 2B05     		.2byte	0x52b
 4027 08ff 6B000000 		.4byte	0x6b
 4028 0903 02       		.uleb128 0x2
 4029 0904 91       		.byte	0x91
 4030 0905 76       		.sleb128 -10
 4031 0906 00       		.byte	0
 4032 0907 15       		.uleb128 0x15
 4033 0908 13080000 		.4byte	.LASF98
 4034 090c 01       		.byte	0x1
 4035 090d 5A05     		.2byte	0x55a
 4036 090f 6B000000 		.4byte	0x6b
 4037 0913 00000000 		.4byte	.LFB59
 4038 0917 B8000000 		.4byte	.LFE59-.LFB59
 4039 091b 01       		.uleb128 0x1
 4040 091c 9C       		.byte	0x9c
 4041 091d 89090000 		.4byte	0x989
 4042 0921 14       		.uleb128 0x14
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 122


 4043 0922 96040000 		.4byte	.LASF99
 4044 0926 01       		.byte	0x1
 4045 0927 5A05     		.2byte	0x55a
 4046 0929 6B000000 		.4byte	0x6b
 4047 092d 02       		.uleb128 0x2
 4048 092e 91       		.byte	0x91
 4049 092f 67       		.sleb128 -25
 4050 0930 14       		.uleb128 0x14
 4051 0931 36030000 		.4byte	.LASF100
 4052 0935 01       		.byte	0x1
 4053 0936 5A05     		.2byte	0x55a
 4054 0938 6B000000 		.4byte	0x6b
 4055 093c 02       		.uleb128 0x2
 4056 093d 91       		.byte	0x91
 4057 093e 66       		.sleb128 -26
 4058 093f 14       		.uleb128 0x14
 4059 0940 01090000 		.4byte	.LASF88
 4060 0944 01       		.byte	0x1
 4061 0945 5A05     		.2byte	0x55a
 4062 0947 6B000000 		.4byte	0x6b
 4063 094b 02       		.uleb128 0x2
 4064 094c 91       		.byte	0x91
 4065 094d 65       		.sleb128 -27
 4066 094e 12       		.uleb128 0x12
 4067 094f 6900     		.ascii	"i\000"
 4068 0951 01       		.byte	0x1
 4069 0952 5D05     		.2byte	0x55d
 4070 0954 6B000000 		.4byte	0x6b
 4071 0958 02       		.uleb128 0x2
 4072 0959 91       		.byte	0x91
 4073 095a 6F       		.sleb128 -17
 4074 095b 13       		.uleb128 0x13
 4075 095c 9F080000 		.4byte	.LASF101
 4076 0960 01       		.byte	0x1
 4077 0961 6705     		.2byte	0x567
 4078 0963 6B000000 		.4byte	0x6b
 4079 0967 02       		.uleb128 0x2
 4080 0968 91       		.byte	0x91
 4081 0969 6E       		.sleb128 -18
 4082 096a 13       		.uleb128 0x13
 4083 096b 0E080000 		.4byte	.LASF102
 4084 096f 01       		.byte	0x1
 4085 0970 6905     		.2byte	0x569
 4086 0972 6B000000 		.4byte	0x6b
 4087 0976 02       		.uleb128 0x2
 4088 0977 91       		.byte	0x91
 4089 0978 6D       		.sleb128 -19
 4090 0979 13       		.uleb128 0x13
 4091 097a 0F070000 		.4byte	.LASF103
 4092 097e 01       		.byte	0x1
 4093 097f 6A05     		.2byte	0x56a
 4094 0981 E7010000 		.4byte	0x1e7
 4095 0985 02       		.uleb128 0x2
 4096 0986 91       		.byte	0x91
 4097 0987 68       		.sleb128 -24
 4098 0988 00       		.byte	0
 4099 0989 17       		.uleb128 0x17
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 123


 4100 098a 92060000 		.4byte	.LASF104
 4101 098e 01       		.byte	0x1
 4102 098f F905     		.2byte	0x5f9
 4103 0991 6B000000 		.4byte	0x6b
 4104 0995 00000000 		.4byte	.LFB60
 4105 0999 A0010000 		.4byte	.LFE60-.LFB60
 4106 099d 01       		.uleb128 0x1
 4107 099e 9C       		.byte	0x9c
 4108 099f 5B0A0000 		.4byte	0xa5b
 4109 09a3 14       		.uleb128 0x14
 4110 09a4 9F080000 		.4byte	.LASF101
 4111 09a8 01       		.byte	0x1
 4112 09a9 F905     		.2byte	0x5f9
 4113 09ab 6B000000 		.4byte	0x6b
 4114 09af 02       		.uleb128 0x2
 4115 09b0 91       		.byte	0x91
 4116 09b1 57       		.sleb128 -41
 4117 09b2 14       		.uleb128 0x14
 4118 09b3 96040000 		.4byte	.LASF99
 4119 09b7 01       		.byte	0x1
 4120 09b8 F905     		.2byte	0x5f9
 4121 09ba 6B000000 		.4byte	0x6b
 4122 09be 02       		.uleb128 0x2
 4123 09bf 91       		.byte	0x91
 4124 09c0 56       		.sleb128 -42
 4125 09c1 14       		.uleb128 0x14
 4126 09c2 36030000 		.4byte	.LASF100
 4127 09c6 01       		.byte	0x1
 4128 09c7 FA05     		.2byte	0x5fa
 4129 09c9 6B000000 		.4byte	0x6b
 4130 09cd 02       		.uleb128 0x2
 4131 09ce 91       		.byte	0x91
 4132 09cf 55       		.sleb128 -43
 4133 09d0 14       		.uleb128 0x14
 4134 09d1 DA050000 		.4byte	.LASF105
 4135 09d5 01       		.byte	0x1
 4136 09d6 FA05     		.2byte	0x5fa
 4137 09d8 77000000 		.4byte	0x77
 4138 09dc 02       		.uleb128 0x2
 4139 09dd 91       		.byte	0x91
 4140 09de 52       		.sleb128 -46
 4141 09df 14       		.uleb128 0x14
 4142 09e0 CB080000 		.4byte	.LASF62
 4143 09e4 01       		.byte	0x1
 4144 09e5 FA05     		.2byte	0x5fa
 4145 09e7 6B000000 		.4byte	0x6b
 4146 09eb 02       		.uleb128 0x2
 4147 09ec 91       		.byte	0x91
 4148 09ed 00       		.sleb128 0
 4149 09ee 13       		.uleb128 0x13
 4150 09ef 59020000 		.4byte	.LASF106
 4151 09f3 01       		.byte	0x1
 4152 09f4 FE05     		.2byte	0x5fe
 4153 09f6 6B000000 		.4byte	0x6b
 4154 09fa 02       		.uleb128 0x2
 4155 09fb 91       		.byte	0x91
 4156 09fc 6F       		.sleb128 -17
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 124


 4157 09fd 13       		.uleb128 0x13
 4158 09fe 48010000 		.4byte	.LASF107
 4159 0a02 01       		.byte	0x1
 4160 0a03 FF05     		.2byte	0x5ff
 4161 0a05 6B000000 		.4byte	0x6b
 4162 0a09 02       		.uleb128 0x2
 4163 0a0a 91       		.byte	0x91
 4164 0a0b 67       		.sleb128 -25
 4165 0a0c 13       		.uleb128 0x13
 4166 0a0d EE050000 		.4byte	.LASF108
 4167 0a11 01       		.byte	0x1
 4168 0a12 0406     		.2byte	0x604
 4169 0a14 5B0A0000 		.4byte	0xa5b
 4170 0a18 05       		.uleb128 0x5
 4171 0a19 03       		.byte	0x3
 4172 0a1a 24000000 		.4byte	CapSense_centroid.5542
 4173 0a1e 13       		.uleb128 0x13
 4174 0a1f F70A0000 		.4byte	.LASF109
 4175 0a23 01       		.byte	0x1
 4176 0a24 0B06     		.2byte	0x60b
 4177 0a26 6B000000 		.4byte	0x6b
 4178 0a2a 02       		.uleb128 0x2
 4179 0a2b 91       		.byte	0x91
 4180 0a2c 5B       		.sleb128 -37
 4181 0a2d 13       		.uleb128 0x13
 4182 0a2e 56070000 		.4byte	.LASF110
 4183 0a32 01       		.byte	0x1
 4184 0a33 0C06     		.2byte	0x60c
 4185 0a35 83000000 		.4byte	0x83
 4186 0a39 02       		.uleb128 0x2
 4187 0a3a 91       		.byte	0x91
 4188 0a3b 60       		.sleb128 -32
 4189 0a3c 13       		.uleb128 0x13
 4190 0a3d 71080000 		.4byte	.LASF111
 4191 0a41 01       		.byte	0x1
 4192 0a42 0D06     		.2byte	0x60d
 4193 0a44 9B000000 		.4byte	0x9b
 4194 0a48 02       		.uleb128 0x2
 4195 0a49 91       		.byte	0x91
 4196 0a4a 5C       		.sleb128 -36
 4197 0a4b 13       		.uleb128 0x13
 4198 0a4c 0F070000 		.4byte	.LASF103
 4199 0a50 01       		.byte	0x1
 4200 0a51 0F06     		.2byte	0x60f
 4201 0a53 E7010000 		.4byte	0x1e7
 4202 0a57 02       		.uleb128 0x2
 4203 0a58 91       		.byte	0x91
 4204 0a59 68       		.sleb128 -24
 4205 0a5a 00       		.byte	0
 4206 0a5b 18       		.uleb128 0x18
 4207 0a5c 6B000000 		.4byte	0x6b
 4208 0a60 6B0A0000 		.4byte	0xa6b
 4209 0a64 19       		.uleb128 0x19
 4210 0a65 BC000000 		.4byte	0xbc
 4211 0a69 02       		.byte	0x2
 4212 0a6a 00       		.byte	0
 4213 0a6b 17       		.uleb128 0x17
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 125


 4214 0a6c C8070000 		.4byte	.LASF112
 4215 0a70 01       		.byte	0x1
 4216 0a71 CC06     		.2byte	0x6cc
 4217 0a73 77000000 		.4byte	0x77
 4218 0a77 00000000 		.4byte	.LFB61
 4219 0a7b 98000000 		.4byte	.LFE61-.LFB61
 4220 0a7f 01       		.uleb128 0x1
 4221 0a80 9C       		.byte	0x9c
 4222 0a81 D10A0000 		.4byte	0xad1
 4223 0a85 14       		.uleb128 0x14
 4224 0a86 AC030000 		.4byte	.LASF61
 4225 0a8a 01       		.byte	0x1
 4226 0a8b CC06     		.2byte	0x6cc
 4227 0a8d 83000000 		.4byte	0x83
 4228 0a91 02       		.uleb128 0x2
 4229 0a92 91       		.byte	0x91
 4230 0a93 64       		.sleb128 -28
 4231 0a94 13       		.uleb128 0x13
 4232 0a95 9F080000 		.4byte	.LASF101
 4233 0a99 01       		.byte	0x1
 4234 0a9a DF06     		.2byte	0x6df
 4235 0a9c 6B000000 		.4byte	0x6b
 4236 0aa0 02       		.uleb128 0x2
 4237 0aa1 91       		.byte	0x91
 4238 0aa2 6B       		.sleb128 -21
 4239 0aa3 13       		.uleb128 0x13
 4240 0aa4 F70A0000 		.4byte	.LASF109
 4241 0aa8 01       		.byte	0x1
 4242 0aa9 E006     		.2byte	0x6e0
 4243 0aab 77000000 		.4byte	0x77
 4244 0aaf 02       		.uleb128 0x2
 4245 0ab0 91       		.byte	0x91
 4246 0ab1 6E       		.sleb128 -18
 4247 0ab2 13       		.uleb128 0x13
 4248 0ab3 96040000 		.4byte	.LASF99
 4249 0ab7 01       		.byte	0x1
 4250 0ab8 E106     		.2byte	0x6e1
 4251 0aba 6B000000 		.4byte	0x6b
 4252 0abe 02       		.uleb128 0x2
 4253 0abf 91       		.byte	0x91
 4254 0ac0 6D       		.sleb128 -19
 4255 0ac1 13       		.uleb128 0x13
 4256 0ac2 36030000 		.4byte	.LASF100
 4257 0ac6 01       		.byte	0x1
 4258 0ac7 E206     		.2byte	0x6e2
 4259 0ac9 6B000000 		.4byte	0x6b
 4260 0acd 02       		.uleb128 0x2
 4261 0ace 91       		.byte	0x91
 4262 0acf 6C       		.sleb128 -20
 4263 0ad0 00       		.byte	0
 4264 0ad1 17       		.uleb128 0x17
 4265 0ad2 3D0A0000 		.4byte	.LASF113
 4266 0ad6 01       		.byte	0x1
 4267 0ad7 9707     		.2byte	0x797
 4268 0ad9 77000000 		.4byte	0x77
 4269 0add 00000000 		.4byte	.LFB62
 4270 0ae1 98000000 		.4byte	.LFE62-.LFB62
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 126


 4271 0ae5 01       		.uleb128 0x1
 4272 0ae6 9C       		.byte	0x9c
 4273 0ae7 370B0000 		.4byte	0xb37
 4274 0aeb 14       		.uleb128 0x14
 4275 0aec AC030000 		.4byte	.LASF61
 4276 0af0 01       		.byte	0x1
 4277 0af1 9707     		.2byte	0x797
 4278 0af3 83000000 		.4byte	0x83
 4279 0af7 02       		.uleb128 0x2
 4280 0af8 91       		.byte	0x91
 4281 0af9 64       		.sleb128 -28
 4282 0afa 13       		.uleb128 0x13
 4283 0afb 9F080000 		.4byte	.LASF101
 4284 0aff 01       		.byte	0x1
 4285 0b00 A607     		.2byte	0x7a6
 4286 0b02 6B000000 		.4byte	0x6b
 4287 0b06 02       		.uleb128 0x2
 4288 0b07 91       		.byte	0x91
 4289 0b08 6B       		.sleb128 -21
 4290 0b09 13       		.uleb128 0x13
 4291 0b0a F70A0000 		.4byte	.LASF109
 4292 0b0e 01       		.byte	0x1
 4293 0b0f A707     		.2byte	0x7a7
 4294 0b11 77000000 		.4byte	0x77
 4295 0b15 02       		.uleb128 0x2
 4296 0b16 91       		.byte	0x91
 4297 0b17 6E       		.sleb128 -18
 4298 0b18 13       		.uleb128 0x13
 4299 0b19 96040000 		.4byte	.LASF99
 4300 0b1d 01       		.byte	0x1
 4301 0b1e A807     		.2byte	0x7a8
 4302 0b20 6B000000 		.4byte	0x6b
 4303 0b24 02       		.uleb128 0x2
 4304 0b25 91       		.byte	0x91
 4305 0b26 6D       		.sleb128 -19
 4306 0b27 13       		.uleb128 0x13
 4307 0b28 36030000 		.4byte	.LASF100
 4308 0b2c 01       		.byte	0x1
 4309 0b2d A907     		.2byte	0x7a9
 4310 0b2f 6B000000 		.4byte	0x6b
 4311 0b33 02       		.uleb128 0x2
 4312 0b34 91       		.byte	0x91
 4313 0b35 6C       		.sleb128 -20
 4314 0b36 00       		.byte	0
 4315 0b37 15       		.uleb128 0x15
 4316 0b38 6A0A0000 		.4byte	.LASF114
 4317 0b3c 01       		.byte	0x1
 4318 0b3d 4409     		.2byte	0x944
 4319 0b3f 77000000 		.4byte	0x77
 4320 0b43 00000000 		.4byte	.LFB63
 4321 0b47 76000000 		.4byte	.LFE63-.LFB63
 4322 0b4b 01       		.uleb128 0x1
 4323 0b4c 9C       		.byte	0x9c
 4324 0b4d 8B0B0000 		.4byte	0xb8b
 4325 0b51 1A       		.uleb128 0x1a
 4326 0b52 783100   		.ascii	"x1\000"
 4327 0b55 01       		.byte	0x1
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 127


 4328 0b56 4409     		.2byte	0x944
 4329 0b58 77000000 		.4byte	0x77
 4330 0b5c 02       		.uleb128 0x2
 4331 0b5d 91       		.byte	0x91
 4332 0b5e 66       		.sleb128 -26
 4333 0b5f 1A       		.uleb128 0x1a
 4334 0b60 783200   		.ascii	"x2\000"
 4335 0b63 01       		.byte	0x1
 4336 0b64 4409     		.2byte	0x944
 4337 0b66 77000000 		.4byte	0x77
 4338 0b6a 02       		.uleb128 0x2
 4339 0b6b 91       		.byte	0x91
 4340 0b6c 64       		.sleb128 -28
 4341 0b6d 1A       		.uleb128 0x1a
 4342 0b6e 783300   		.ascii	"x3\000"
 4343 0b71 01       		.byte	0x1
 4344 0b72 4409     		.2byte	0x944
 4345 0b74 77000000 		.4byte	0x77
 4346 0b78 02       		.uleb128 0x2
 4347 0b79 91       		.byte	0x91
 4348 0b7a 62       		.sleb128 -30
 4349 0b7b 12       		.uleb128 0x12
 4350 0b7c 746D7000 		.ascii	"tmp\000"
 4351 0b80 01       		.byte	0x1
 4352 0b81 4609     		.2byte	0x946
 4353 0b83 77000000 		.4byte	0x77
 4354 0b87 02       		.uleb128 0x2
 4355 0b88 91       		.byte	0x91
 4356 0b89 6E       		.sleb128 -18
 4357 0b8a 00       		.byte	0
 4358 0b8b 17       		.uleb128 0x17
 4359 0b8c CC030000 		.4byte	.LASF115
 4360 0b90 01       		.byte	0x1
 4361 0b91 7509     		.2byte	0x975
 4362 0b93 77000000 		.4byte	0x77
 4363 0b97 00000000 		.4byte	.LFB64
 4364 0b9b 46000000 		.4byte	.LFE64-.LFB64
 4365 0b9f 01       		.uleb128 0x1
 4366 0ba0 9C       		.byte	0x9c
 4367 0ba1 DF0B0000 		.4byte	0xbdf
 4368 0ba5 1A       		.uleb128 0x1a
 4369 0ba6 783100   		.ascii	"x1\000"
 4370 0ba9 01       		.byte	0x1
 4371 0baa 7509     		.2byte	0x975
 4372 0bac 77000000 		.4byte	0x77
 4373 0bb0 02       		.uleb128 0x2
 4374 0bb1 91       		.byte	0x91
 4375 0bb2 66       		.sleb128 -26
 4376 0bb3 1A       		.uleb128 0x1a
 4377 0bb4 783200   		.ascii	"x2\000"
 4378 0bb7 01       		.byte	0x1
 4379 0bb8 7509     		.2byte	0x975
 4380 0bba 77000000 		.4byte	0x77
 4381 0bbe 02       		.uleb128 0x2
 4382 0bbf 91       		.byte	0x91
 4383 0bc0 64       		.sleb128 -28
 4384 0bc1 1A       		.uleb128 0x1a
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 128


 4385 0bc2 783300   		.ascii	"x3\000"
 4386 0bc5 01       		.byte	0x1
 4387 0bc6 7509     		.2byte	0x975
 4388 0bc8 77000000 		.4byte	0x77
 4389 0bcc 02       		.uleb128 0x2
 4390 0bcd 91       		.byte	0x91
 4391 0bce 62       		.sleb128 -30
 4392 0bcf 12       		.uleb128 0x12
 4393 0bd0 746D7000 		.ascii	"tmp\000"
 4394 0bd4 01       		.byte	0x1
 4395 0bd5 7709     		.2byte	0x977
 4396 0bd7 83000000 		.4byte	0x83
 4397 0bdb 02       		.uleb128 0x2
 4398 0bdc 91       		.byte	0x91
 4399 0bdd 6C       		.sleb128 -20
 4400 0bde 00       		.byte	0
 4401 0bdf 15       		.uleb128 0x15
 4402 0be0 0E060000 		.4byte	.LASF116
 4403 0be4 01       		.byte	0x1
 4404 0be5 A50A     		.2byte	0xaa5
 4405 0be7 83000000 		.4byte	0x83
 4406 0beb 00000000 		.4byte	.LFB65
 4407 0bef 1C000000 		.4byte	.LFE65-.LFB65
 4408 0bf3 01       		.uleb128 0x1
 4409 0bf4 9C       		.byte	0x9c
 4410 0bf5 090C0000 		.4byte	0xc09
 4411 0bf9 14       		.uleb128 0x14
 4412 0bfa 5B050000 		.4byte	.LASF52
 4413 0bfe 01       		.byte	0x1
 4414 0bff A50A     		.2byte	0xaa5
 4415 0c01 83000000 		.4byte	0x83
 4416 0c05 02       		.uleb128 0x2
 4417 0c06 91       		.byte	0x91
 4418 0c07 74       		.sleb128 -12
 4419 0c08 00       		.byte	0
 4420 0c09 15       		.uleb128 0x15
 4421 0c0a C8060000 		.4byte	.LASF117
 4422 0c0e 01       		.byte	0x1
 4423 0c0f BF0A     		.2byte	0xabf
 4424 0c11 6B000000 		.4byte	0x6b
 4425 0c15 00000000 		.4byte	.LFB66
 4426 0c19 1C000000 		.4byte	.LFE66-.LFB66
 4427 0c1d 01       		.uleb128 0x1
 4428 0c1e 9C       		.byte	0x9c
 4429 0c1f 330C0000 		.4byte	0xc33
 4430 0c23 14       		.uleb128 0x14
 4431 0c24 5B050000 		.4byte	.LASF52
 4432 0c28 01       		.byte	0x1
 4433 0c29 BF0A     		.2byte	0xabf
 4434 0c2b 83000000 		.4byte	0x83
 4435 0c2f 02       		.uleb128 0x2
 4436 0c30 91       		.byte	0x91
 4437 0c31 74       		.sleb128 -12
 4438 0c32 00       		.byte	0
 4439 0c33 15       		.uleb128 0x15
 4440 0c34 880A0000 		.4byte	.LASF118
 4441 0c38 01       		.byte	0x1
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 129


 4442 0c39 D90A     		.2byte	0xad9
 4443 0c3b 6B000000 		.4byte	0x6b
 4444 0c3f 00000000 		.4byte	.LFB67
 4445 0c43 1C000000 		.4byte	.LFE67-.LFB67
 4446 0c47 01       		.uleb128 0x1
 4447 0c48 9C       		.byte	0x9c
 4448 0c49 5D0C0000 		.4byte	0xc5d
 4449 0c4d 14       		.uleb128 0x14
 4450 0c4e AC030000 		.4byte	.LASF61
 4451 0c52 01       		.byte	0x1
 4452 0c53 D90A     		.2byte	0xad9
 4453 0c55 83000000 		.4byte	0x83
 4454 0c59 02       		.uleb128 0x2
 4455 0c5a 91       		.byte	0x91
 4456 0c5b 74       		.sleb128 -12
 4457 0c5c 00       		.byte	0
 4458 0c5d 1B       		.uleb128 0x1b
 4459 0c5e 39080000 		.4byte	.LASF119
 4460 0c62 01       		.byte	0x1
 4461 0c63 F30A     		.2byte	0xaf3
 4462 0c65 00000000 		.4byte	.LFB68
 4463 0c69 14000000 		.4byte	.LFE68-.LFB68
 4464 0c6d 01       		.uleb128 0x1
 4465 0c6e 9C       		.byte	0x9c
 4466 0c6f 1B       		.uleb128 0x1b
 4467 0c70 35040000 		.4byte	.LASF120
 4468 0c74 01       		.byte	0x1
 4469 0c75 0C0B     		.2byte	0xb0c
 4470 0c77 00000000 		.4byte	.LFB69
 4471 0c7b 14000000 		.4byte	.LFE69-.LFB69
 4472 0c7f 01       		.uleb128 0x1
 4473 0c80 9C       		.byte	0x9c
 4474 0c81 18       		.uleb128 0x18
 4475 0c82 910C0000 		.4byte	0xc91
 4476 0c86 910C0000 		.4byte	0xc91
 4477 0c8a 19       		.uleb128 0x19
 4478 0c8b BC000000 		.4byte	0xbc
 4479 0c8f 00       		.byte	0
 4480 0c90 00       		.byte	0
 4481 0c91 08       		.uleb128 0x8
 4482 0c92 77000000 		.4byte	0x77
 4483 0c96 1C       		.uleb128 0x1c
 4484 0c97 B7090000 		.4byte	.LASF121
 4485 0c9b 01       		.byte	0x1
 4486 0c9c 5D       		.byte	0x5d
 4487 0c9d A70C0000 		.4byte	0xca7
 4488 0ca1 05       		.uleb128 0x5
 4489 0ca2 03       		.byte	0x3
 4490 0ca3 08000000 		.4byte	CapSense_centroidMult
 4491 0ca7 08       		.uleb128 0x8
 4492 0ca8 810C0000 		.4byte	0xc81
 4493 0cac 18       		.uleb128 0x18
 4494 0cad 77000000 		.4byte	0x77
 4495 0cb1 BC0C0000 		.4byte	0xcbc
 4496 0cb5 19       		.uleb128 0x19
 4497 0cb6 BC000000 		.4byte	0xbc
 4498 0cba 04       		.byte	0x4
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 130


 4499 0cbb 00       		.byte	0
 4500 0cbc 1D       		.uleb128 0x1d
 4501 0cbd B5060000 		.4byte	.LASF122
 4502 0cc1 01       		.byte	0x1
 4503 0cc2 2C       		.byte	0x2c
 4504 0cc3 AC0C0000 		.4byte	0xcac
 4505 0cc7 1D       		.uleb128 0x1d
 4506 0cc8 92030000 		.4byte	.LASF123
 4507 0ccc 01       		.byte	0x1
 4508 0ccd 2D       		.byte	0x2d
 4509 0cce E1070000 		.4byte	0x7e1
 4510 0cd2 18       		.uleb128 0x18
 4511 0cd3 F3010000 		.4byte	0x1f3
 4512 0cd7 E20C0000 		.4byte	0xce2
 4513 0cdb 19       		.uleb128 0x19
 4514 0cdc BC000000 		.4byte	0xbc
 4515 0ce0 04       		.byte	0x4
 4516 0ce1 00       		.byte	0
 4517 0ce2 1D       		.uleb128 0x1d
 4518 0ce3 03040000 		.4byte	.LASF124
 4519 0ce7 01       		.byte	0x1
 4520 0ce8 2E       		.byte	0x2e
 4521 0ce9 ED0C0000 		.4byte	0xced
 4522 0ced 08       		.uleb128 0x8
 4523 0cee D20C0000 		.4byte	0xcd2
 4524 0cf2 1E       		.uleb128 0x1e
 4525 0cf3 87080000 		.4byte	.LASF125
 4526 0cf7 01       		.byte	0x1
 4527 0cf8 34       		.byte	0x34
 4528 0cf9 AC0C0000 		.4byte	0xcac
 4529 0cfd 05       		.uleb128 0x5
 4530 0cfe 03       		.byte	0x3
 4531 0cff 00000000 		.4byte	CapSense_sensorBaseline
 4532 0d03 18       		.uleb128 0x18
 4533 0d04 6B000000 		.4byte	0x6b
 4534 0d08 130D0000 		.4byte	0xd13
 4535 0d0c 19       		.uleb128 0x19
 4536 0d0d BC000000 		.4byte	0xbc
 4537 0d11 04       		.byte	0x4
 4538 0d12 00       		.byte	0
 4539 0d13 1E       		.uleb128 0x1e
 4540 0d14 00000000 		.4byte	.LASF126
 4541 0d18 01       		.byte	0x1
 4542 0d19 35       		.byte	0x35
 4543 0d1a 030D0000 		.4byte	0xd03
 4544 0d1e 05       		.uleb128 0x5
 4545 0d1f 03       		.byte	0x3
 4546 0d20 00000000 		.4byte	CapSense_sensorBaselineLow
 4547 0d24 1E       		.uleb128 0x1e
 4548 0d25 B1020000 		.4byte	.LASF127
 4549 0d29 01       		.byte	0x1
 4550 0d2a 36       		.byte	0x36
 4551 0d2b 030D0000 		.4byte	0xd03
 4552 0d2f 05       		.uleb128 0x5
 4553 0d30 03       		.byte	0x3
 4554 0d31 00000000 		.4byte	CapSense_sensorSignal
 4555 0d35 1E       		.uleb128 0x1e
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 131


 4556 0d36 000B0000 		.4byte	.LASF128
 4557 0d3a 01       		.byte	0x1
 4558 0d3b 37       		.byte	0x37
 4559 0d3c E1070000 		.4byte	0x7e1
 4560 0d40 05       		.uleb128 0x5
 4561 0d41 03       		.byte	0x3
 4562 0d42 00000000 		.4byte	CapSense_sensorOnMask
 4563 0d46 1E       		.uleb128 0x1e
 4564 0d47 41000000 		.4byte	.LASF129
 4565 0d4b 01       		.byte	0x1
 4566 0d4c 39       		.byte	0x39
 4567 0d4d 030D0000 		.4byte	0xd03
 4568 0d51 05       		.uleb128 0x5
 4569 0d52 03       		.byte	0x3
 4570 0d53 00000000 		.4byte	CapSense_lowBaselineResetCnt
 4571 0d57 1E       		.uleb128 0x1e
 4572 0d58 57080000 		.4byte	.LASF130
 4573 0d5c 01       		.byte	0x1
 4574 0d5d 3A       		.byte	0x3a
 4575 0d5e 030D0000 		.4byte	0xd03
 4576 0d62 05       		.uleb128 0x5
 4577 0d63 03       		.byte	0x3
 4578 0d64 00000000 		.4byte	CapSense_lowBaselineReset
 4579 0d68 1E       		.uleb128 0x1e
 4580 0d69 B3030000 		.4byte	.LASF131
 4581 0d6d 01       		.byte	0x1
 4582 0d6e 49       		.byte	0x49
 4583 0d6f E1070000 		.4byte	0x7e1
 4584 0d73 05       		.uleb128 0x5
 4585 0d74 03       		.byte	0x3
 4586 0d75 00000000 		.4byte	CapSense_fingerThreshold
 4587 0d79 1E       		.uleb128 0x1e
 4588 0d7a 2C090000 		.4byte	.LASF132
 4589 0d7e 01       		.byte	0x1
 4590 0d7f 4B       		.byte	0x4b
 4591 0d80 E1070000 		.4byte	0x7e1
 4592 0d84 05       		.uleb128 0x5
 4593 0d85 03       		.byte	0x3
 4594 0d86 00000000 		.4byte	CapSense_noiseThreshold
 4595 0d8a 1E       		.uleb128 0x1e
 4596 0d8b 29050000 		.4byte	.LASF133
 4597 0d8f 01       		.byte	0x1
 4598 0d90 4D       		.byte	0x4d
 4599 0d91 E1070000 		.4byte	0x7e1
 4600 0d95 05       		.uleb128 0x5
 4601 0d96 03       		.byte	0x3
 4602 0d97 00000000 		.4byte	CapSense_negativeNoiseThreshold
 4603 0d9b 1E       		.uleb128 0x1e
 4604 0d9c 16030000 		.4byte	.LASF134
 4605 0da0 01       		.byte	0x1
 4606 0da1 4F       		.byte	0x4f
 4607 0da2 E1070000 		.4byte	0x7e1
 4608 0da6 05       		.uleb128 0x5
 4609 0da7 03       		.byte	0x3
 4610 0da8 00000000 		.4byte	CapSense_hysteresis
 4611 0dac 1E       		.uleb128 0x1e
 4612 0dad 25020000 		.4byte	.LASF135
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 132


 4613 0db1 01       		.byte	0x1
 4614 0db2 51       		.byte	0x51
 4615 0db3 E1070000 		.4byte	0x7e1
 4616 0db7 05       		.uleb128 0x5
 4617 0db8 03       		.byte	0x3
 4618 0db9 00000000 		.4byte	CapSense_debounce
 4619 0dbd 18       		.uleb128 0x18
 4620 0dbe F3010000 		.4byte	0x1f3
 4621 0dc2 CD0D0000 		.4byte	0xdcd
 4622 0dc6 19       		.uleb128 0x19
 4623 0dc7 BC000000 		.4byte	0xbc
 4624 0dcb 00       		.byte	0
 4625 0dcc 00       		.byte	0
 4626 0dcd 1E       		.uleb128 0x1e
 4627 0dce C7020000 		.4byte	.LASF136
 4628 0dd2 01       		.byte	0x1
 4629 0dd3 55       		.byte	0x55
 4630 0dd4 DE0D0000 		.4byte	0xdde
 4631 0dd8 05       		.uleb128 0x5
 4632 0dd9 03       		.byte	0x3
 4633 0dda 00000000 		.4byte	CapSense_rawDataIndex
 4634 0dde 08       		.uleb128 0x8
 4635 0ddf BD0D0000 		.4byte	0xdbd
 4636 0de3 1E       		.uleb128 0x1e
 4637 0de4 10050000 		.4byte	.LASF137
 4638 0de8 01       		.byte	0x1
 4639 0de9 59       		.byte	0x59
 4640 0dea F40D0000 		.4byte	0xdf4
 4641 0dee 05       		.uleb128 0x5
 4642 0def 03       		.byte	0x3
 4643 0df0 00000000 		.4byte	CapSense_numberOfSensors
 4644 0df4 08       		.uleb128 0x8
 4645 0df5 BD0D0000 		.4byte	0xdbd
 4646 0df9 1E       		.uleb128 0x1e
 4647 0dfa C70A0000 		.4byte	.LASF138
 4648 0dfe 01       		.byte	0x1
 4649 0dff 1E       		.byte	0x1e
 4650 0e00 AC0C0000 		.4byte	0xcac
 4651 0e04 05       		.uleb128 0x5
 4652 0e05 03       		.byte	0x3
 4653 0e06 00000000 		.4byte	CapSense_rawFilterData1
 4654 0e0a 1E       		.uleb128 0x1e
 4655 0e0b DF0A0000 		.4byte	.LASF139
 4656 0e0f 01       		.byte	0x1
 4657 0e10 1F       		.byte	0x1f
 4658 0e11 AC0C0000 		.4byte	0xcac
 4659 0e15 05       		.uleb128 0x5
 4660 0e16 03       		.byte	0x3
 4661 0e17 00000000 		.4byte	CapSense_rawFilterData2
 4662 0e1b 1D       		.uleb128 0x1d
 4663 0e1c D7000000 		.4byte	.LASF140
 4664 0e20 01       		.byte	0x1
 4665 0e21 41       		.byte	0x41
 4666 0e22 C6020000 		.4byte	0x2c6
 4667 0e26 1E       		.uleb128 0x1e
 4668 0e27 FA090000 		.4byte	.LASF141
 4669 0e2b 01       		.byte	0x1
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 133


 4670 0e2c 45       		.byte	0x45
 4671 0e2d 6B000000 		.4byte	0x6b
 4672 0e31 05       		.uleb128 0x5
 4673 0e32 03       		.byte	0x3
 4674 0e33 00000000 		.4byte	CapSense_enableRawFilters
 4675 0e37 00       		.byte	0
 4676              		.section	.debug_abbrev,"",%progbits
 4677              	.Ldebug_abbrev0:
 4678 0000 01       		.uleb128 0x1
 4679 0001 11       		.uleb128 0x11
 4680 0002 01       		.byte	0x1
 4681 0003 25       		.uleb128 0x25
 4682 0004 0E       		.uleb128 0xe
 4683 0005 13       		.uleb128 0x13
 4684 0006 0B       		.uleb128 0xb
 4685 0007 03       		.uleb128 0x3
 4686 0008 0E       		.uleb128 0xe
 4687 0009 1B       		.uleb128 0x1b
 4688 000a 0E       		.uleb128 0xe
 4689 000b 55       		.uleb128 0x55
 4690 000c 17       		.uleb128 0x17
 4691 000d 11       		.uleb128 0x11
 4692 000e 01       		.uleb128 0x1
 4693 000f 10       		.uleb128 0x10
 4694 0010 17       		.uleb128 0x17
 4695 0011 00       		.byte	0
 4696 0012 00       		.byte	0
 4697 0013 02       		.uleb128 0x2
 4698 0014 24       		.uleb128 0x24
 4699 0015 00       		.byte	0
 4700 0016 0B       		.uleb128 0xb
 4701 0017 0B       		.uleb128 0xb
 4702 0018 3E       		.uleb128 0x3e
 4703 0019 0B       		.uleb128 0xb
 4704 001a 03       		.uleb128 0x3
 4705 001b 0E       		.uleb128 0xe
 4706 001c 00       		.byte	0
 4707 001d 00       		.byte	0
 4708 001e 03       		.uleb128 0x3
 4709 001f 24       		.uleb128 0x24
 4710 0020 00       		.byte	0
 4711 0021 0B       		.uleb128 0xb
 4712 0022 0B       		.uleb128 0xb
 4713 0023 3E       		.uleb128 0x3e
 4714 0024 0B       		.uleb128 0xb
 4715 0025 03       		.uleb128 0x3
 4716 0026 08       		.uleb128 0x8
 4717 0027 00       		.byte	0
 4718 0028 00       		.byte	0
 4719 0029 04       		.uleb128 0x4
 4720 002a 16       		.uleb128 0x16
 4721 002b 00       		.byte	0
 4722 002c 03       		.uleb128 0x3
 4723 002d 0E       		.uleb128 0xe
 4724 002e 3A       		.uleb128 0x3a
 4725 002f 0B       		.uleb128 0xb
 4726 0030 3B       		.uleb128 0x3b
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 134


 4727 0031 05       		.uleb128 0x5
 4728 0032 49       		.uleb128 0x49
 4729 0033 13       		.uleb128 0x13
 4730 0034 00       		.byte	0
 4731 0035 00       		.byte	0
 4732 0036 05       		.uleb128 0x5
 4733 0037 13       		.uleb128 0x13
 4734 0038 01       		.byte	0x1
 4735 0039 0B       		.uleb128 0xb
 4736 003a 0B       		.uleb128 0xb
 4737 003b 3A       		.uleb128 0x3a
 4738 003c 0B       		.uleb128 0xb
 4739 003d 3B       		.uleb128 0x3b
 4740 003e 0B       		.uleb128 0xb
 4741 003f 01       		.uleb128 0x1
 4742 0040 13       		.uleb128 0x13
 4743 0041 00       		.byte	0
 4744 0042 00       		.byte	0
 4745 0043 06       		.uleb128 0x6
 4746 0044 0D       		.uleb128 0xd
 4747 0045 00       		.byte	0
 4748 0046 03       		.uleb128 0x3
 4749 0047 0E       		.uleb128 0xe
 4750 0048 3A       		.uleb128 0x3a
 4751 0049 0B       		.uleb128 0xb
 4752 004a 3B       		.uleb128 0x3b
 4753 004b 0B       		.uleb128 0xb
 4754 004c 49       		.uleb128 0x49
 4755 004d 13       		.uleb128 0x13
 4756 004e 38       		.uleb128 0x38
 4757 004f 0B       		.uleb128 0xb
 4758 0050 00       		.byte	0
 4759 0051 00       		.byte	0
 4760 0052 07       		.uleb128 0x7
 4761 0053 0F       		.uleb128 0xf
 4762 0054 00       		.byte	0
 4763 0055 0B       		.uleb128 0xb
 4764 0056 0B       		.uleb128 0xb
 4765 0057 49       		.uleb128 0x49
 4766 0058 13       		.uleb128 0x13
 4767 0059 00       		.byte	0
 4768 005a 00       		.byte	0
 4769 005b 08       		.uleb128 0x8
 4770 005c 26       		.uleb128 0x26
 4771 005d 00       		.byte	0
 4772 005e 49       		.uleb128 0x49
 4773 005f 13       		.uleb128 0x13
 4774 0060 00       		.byte	0
 4775 0061 00       		.byte	0
 4776 0062 09       		.uleb128 0x9
 4777 0063 15       		.uleb128 0x15
 4778 0064 01       		.byte	0x1
 4779 0065 27       		.uleb128 0x27
 4780 0066 19       		.uleb128 0x19
 4781 0067 49       		.uleb128 0x49
 4782 0068 13       		.uleb128 0x13
 4783 0069 01       		.uleb128 0x1
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 135


 4784 006a 13       		.uleb128 0x13
 4785 006b 00       		.byte	0
 4786 006c 00       		.byte	0
 4787 006d 0A       		.uleb128 0xa
 4788 006e 05       		.uleb128 0x5
 4789 006f 00       		.byte	0
 4790 0070 49       		.uleb128 0x49
 4791 0071 13       		.uleb128 0x13
 4792 0072 00       		.byte	0
 4793 0073 00       		.byte	0
 4794 0074 0B       		.uleb128 0xb
 4795 0075 15       		.uleb128 0x15
 4796 0076 01       		.byte	0x1
 4797 0077 27       		.uleb128 0x27
 4798 0078 19       		.uleb128 0x19
 4799 0079 01       		.uleb128 0x1
 4800 007a 13       		.uleb128 0x13
 4801 007b 00       		.byte	0
 4802 007c 00       		.byte	0
 4803 007d 0C       		.uleb128 0xc
 4804 007e 16       		.uleb128 0x16
 4805 007f 00       		.byte	0
 4806 0080 03       		.uleb128 0x3
 4807 0081 0E       		.uleb128 0xe
 4808 0082 3A       		.uleb128 0x3a
 4809 0083 0B       		.uleb128 0xb
 4810 0084 3B       		.uleb128 0x3b
 4811 0085 0B       		.uleb128 0xb
 4812 0086 49       		.uleb128 0x49
 4813 0087 13       		.uleb128 0x13
 4814 0088 00       		.byte	0
 4815 0089 00       		.byte	0
 4816 008a 0D       		.uleb128 0xd
 4817 008b 2E       		.uleb128 0x2e
 4818 008c 01       		.byte	0x1
 4819 008d 3F       		.uleb128 0x3f
 4820 008e 19       		.uleb128 0x19
 4821 008f 03       		.uleb128 0x3
 4822 0090 0E       		.uleb128 0xe
 4823 0091 3A       		.uleb128 0x3a
 4824 0092 0B       		.uleb128 0xb
 4825 0093 3B       		.uleb128 0x3b
 4826 0094 0B       		.uleb128 0xb
 4827 0095 27       		.uleb128 0x27
 4828 0096 19       		.uleb128 0x19
 4829 0097 11       		.uleb128 0x11
 4830 0098 01       		.uleb128 0x1
 4831 0099 12       		.uleb128 0x12
 4832 009a 06       		.uleb128 0x6
 4833 009b 40       		.uleb128 0x40
 4834 009c 18       		.uleb128 0x18
 4835 009d 9742     		.uleb128 0x2117
 4836 009f 19       		.uleb128 0x19
 4837 00a0 01       		.uleb128 0x1
 4838 00a1 13       		.uleb128 0x13
 4839 00a2 00       		.byte	0
 4840 00a3 00       		.byte	0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 136


 4841 00a4 0E       		.uleb128 0xe
 4842 00a5 05       		.uleb128 0x5
 4843 00a6 00       		.byte	0
 4844 00a7 03       		.uleb128 0x3
 4845 00a8 0E       		.uleb128 0xe
 4846 00a9 3A       		.uleb128 0x3a
 4847 00aa 0B       		.uleb128 0xb
 4848 00ab 3B       		.uleb128 0x3b
 4849 00ac 0B       		.uleb128 0xb
 4850 00ad 49       		.uleb128 0x49
 4851 00ae 13       		.uleb128 0x13
 4852 00af 02       		.uleb128 0x2
 4853 00b0 18       		.uleb128 0x18
 4854 00b1 00       		.byte	0
 4855 00b2 00       		.byte	0
 4856 00b3 0F       		.uleb128 0xf
 4857 00b4 2E       		.uleb128 0x2e
 4858 00b5 01       		.byte	0x1
 4859 00b6 3F       		.uleb128 0x3f
 4860 00b7 19       		.uleb128 0x19
 4861 00b8 03       		.uleb128 0x3
 4862 00b9 0E       		.uleb128 0xe
 4863 00ba 3A       		.uleb128 0x3a
 4864 00bb 0B       		.uleb128 0xb
 4865 00bc 3B       		.uleb128 0x3b
 4866 00bd 0B       		.uleb128 0xb
 4867 00be 27       		.uleb128 0x27
 4868 00bf 19       		.uleb128 0x19
 4869 00c0 11       		.uleb128 0x11
 4870 00c1 01       		.uleb128 0x1
 4871 00c2 12       		.uleb128 0x12
 4872 00c3 06       		.uleb128 0x6
 4873 00c4 40       		.uleb128 0x40
 4874 00c5 18       		.uleb128 0x18
 4875 00c6 9642     		.uleb128 0x2116
 4876 00c8 19       		.uleb128 0x19
 4877 00c9 01       		.uleb128 0x1
 4878 00ca 13       		.uleb128 0x13
 4879 00cb 00       		.byte	0
 4880 00cc 00       		.byte	0
 4881 00cd 10       		.uleb128 0x10
 4882 00ce 34       		.uleb128 0x34
 4883 00cf 00       		.byte	0
 4884 00d0 03       		.uleb128 0x3
 4885 00d1 08       		.uleb128 0x8
 4886 00d2 3A       		.uleb128 0x3a
 4887 00d3 0B       		.uleb128 0xb
 4888 00d4 3B       		.uleb128 0x3b
 4889 00d5 0B       		.uleb128 0xb
 4890 00d6 49       		.uleb128 0x49
 4891 00d7 13       		.uleb128 0x13
 4892 00d8 02       		.uleb128 0x2
 4893 00d9 18       		.uleb128 0x18
 4894 00da 00       		.byte	0
 4895 00db 00       		.byte	0
 4896 00dc 11       		.uleb128 0x11
 4897 00dd 2E       		.uleb128 0x2e
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 137


 4898 00de 01       		.byte	0x1
 4899 00df 3F       		.uleb128 0x3f
 4900 00e0 19       		.uleb128 0x19
 4901 00e1 03       		.uleb128 0x3
 4902 00e2 0E       		.uleb128 0xe
 4903 00e3 3A       		.uleb128 0x3a
 4904 00e4 0B       		.uleb128 0xb
 4905 00e5 3B       		.uleb128 0x3b
 4906 00e6 05       		.uleb128 0x5
 4907 00e7 27       		.uleb128 0x27
 4908 00e8 19       		.uleb128 0x19
 4909 00e9 11       		.uleb128 0x11
 4910 00ea 01       		.uleb128 0x1
 4911 00eb 12       		.uleb128 0x12
 4912 00ec 06       		.uleb128 0x6
 4913 00ed 40       		.uleb128 0x40
 4914 00ee 18       		.uleb128 0x18
 4915 00ef 9642     		.uleb128 0x2116
 4916 00f1 19       		.uleb128 0x19
 4917 00f2 01       		.uleb128 0x1
 4918 00f3 13       		.uleb128 0x13
 4919 00f4 00       		.byte	0
 4920 00f5 00       		.byte	0
 4921 00f6 12       		.uleb128 0x12
 4922 00f7 34       		.uleb128 0x34
 4923 00f8 00       		.byte	0
 4924 00f9 03       		.uleb128 0x3
 4925 00fa 08       		.uleb128 0x8
 4926 00fb 3A       		.uleb128 0x3a
 4927 00fc 0B       		.uleb128 0xb
 4928 00fd 3B       		.uleb128 0x3b
 4929 00fe 05       		.uleb128 0x5
 4930 00ff 49       		.uleb128 0x49
 4931 0100 13       		.uleb128 0x13
 4932 0101 02       		.uleb128 0x2
 4933 0102 18       		.uleb128 0x18
 4934 0103 00       		.byte	0
 4935 0104 00       		.byte	0
 4936 0105 13       		.uleb128 0x13
 4937 0106 34       		.uleb128 0x34
 4938 0107 00       		.byte	0
 4939 0108 03       		.uleb128 0x3
 4940 0109 0E       		.uleb128 0xe
 4941 010a 3A       		.uleb128 0x3a
 4942 010b 0B       		.uleb128 0xb
 4943 010c 3B       		.uleb128 0x3b
 4944 010d 05       		.uleb128 0x5
 4945 010e 49       		.uleb128 0x49
 4946 010f 13       		.uleb128 0x13
 4947 0110 02       		.uleb128 0x2
 4948 0111 18       		.uleb128 0x18
 4949 0112 00       		.byte	0
 4950 0113 00       		.byte	0
 4951 0114 14       		.uleb128 0x14
 4952 0115 05       		.uleb128 0x5
 4953 0116 00       		.byte	0
 4954 0117 03       		.uleb128 0x3
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 138


 4955 0118 0E       		.uleb128 0xe
 4956 0119 3A       		.uleb128 0x3a
 4957 011a 0B       		.uleb128 0xb
 4958 011b 3B       		.uleb128 0x3b
 4959 011c 05       		.uleb128 0x5
 4960 011d 49       		.uleb128 0x49
 4961 011e 13       		.uleb128 0x13
 4962 011f 02       		.uleb128 0x2
 4963 0120 18       		.uleb128 0x18
 4964 0121 00       		.byte	0
 4965 0122 00       		.byte	0
 4966 0123 15       		.uleb128 0x15
 4967 0124 2E       		.uleb128 0x2e
 4968 0125 01       		.byte	0x1
 4969 0126 3F       		.uleb128 0x3f
 4970 0127 19       		.uleb128 0x19
 4971 0128 03       		.uleb128 0x3
 4972 0129 0E       		.uleb128 0xe
 4973 012a 3A       		.uleb128 0x3a
 4974 012b 0B       		.uleb128 0xb
 4975 012c 3B       		.uleb128 0x3b
 4976 012d 05       		.uleb128 0x5
 4977 012e 27       		.uleb128 0x27
 4978 012f 19       		.uleb128 0x19
 4979 0130 49       		.uleb128 0x49
 4980 0131 13       		.uleb128 0x13
 4981 0132 11       		.uleb128 0x11
 4982 0133 01       		.uleb128 0x1
 4983 0134 12       		.uleb128 0x12
 4984 0135 06       		.uleb128 0x6
 4985 0136 40       		.uleb128 0x40
 4986 0137 18       		.uleb128 0x18
 4987 0138 9742     		.uleb128 0x2117
 4988 013a 19       		.uleb128 0x19
 4989 013b 01       		.uleb128 0x1
 4990 013c 13       		.uleb128 0x13
 4991 013d 00       		.byte	0
 4992 013e 00       		.byte	0
 4993 013f 16       		.uleb128 0x16
 4994 0140 2E       		.uleb128 0x2e
 4995 0141 01       		.byte	0x1
 4996 0142 3F       		.uleb128 0x3f
 4997 0143 19       		.uleb128 0x19
 4998 0144 03       		.uleb128 0x3
 4999 0145 0E       		.uleb128 0xe
 5000 0146 3A       		.uleb128 0x3a
 5001 0147 0B       		.uleb128 0xb
 5002 0148 3B       		.uleb128 0x3b
 5003 0149 05       		.uleb128 0x5
 5004 014a 27       		.uleb128 0x27
 5005 014b 19       		.uleb128 0x19
 5006 014c 11       		.uleb128 0x11
 5007 014d 01       		.uleb128 0x1
 5008 014e 12       		.uleb128 0x12
 5009 014f 06       		.uleb128 0x6
 5010 0150 40       		.uleb128 0x40
 5011 0151 18       		.uleb128 0x18
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 139


 5012 0152 9742     		.uleb128 0x2117
 5013 0154 19       		.uleb128 0x19
 5014 0155 01       		.uleb128 0x1
 5015 0156 13       		.uleb128 0x13
 5016 0157 00       		.byte	0
 5017 0158 00       		.byte	0
 5018 0159 17       		.uleb128 0x17
 5019 015a 2E       		.uleb128 0x2e
 5020 015b 01       		.byte	0x1
 5021 015c 3F       		.uleb128 0x3f
 5022 015d 19       		.uleb128 0x19
 5023 015e 03       		.uleb128 0x3
 5024 015f 0E       		.uleb128 0xe
 5025 0160 3A       		.uleb128 0x3a
 5026 0161 0B       		.uleb128 0xb
 5027 0162 3B       		.uleb128 0x3b
 5028 0163 05       		.uleb128 0x5
 5029 0164 27       		.uleb128 0x27
 5030 0165 19       		.uleb128 0x19
 5031 0166 49       		.uleb128 0x49
 5032 0167 13       		.uleb128 0x13
 5033 0168 11       		.uleb128 0x11
 5034 0169 01       		.uleb128 0x1
 5035 016a 12       		.uleb128 0x12
 5036 016b 06       		.uleb128 0x6
 5037 016c 40       		.uleb128 0x40
 5038 016d 18       		.uleb128 0x18
 5039 016e 9642     		.uleb128 0x2116
 5040 0170 19       		.uleb128 0x19
 5041 0171 01       		.uleb128 0x1
 5042 0172 13       		.uleb128 0x13
 5043 0173 00       		.byte	0
 5044 0174 00       		.byte	0
 5045 0175 18       		.uleb128 0x18
 5046 0176 01       		.uleb128 0x1
 5047 0177 01       		.byte	0x1
 5048 0178 49       		.uleb128 0x49
 5049 0179 13       		.uleb128 0x13
 5050 017a 01       		.uleb128 0x1
 5051 017b 13       		.uleb128 0x13
 5052 017c 00       		.byte	0
 5053 017d 00       		.byte	0
 5054 017e 19       		.uleb128 0x19
 5055 017f 21       		.uleb128 0x21
 5056 0180 00       		.byte	0
 5057 0181 49       		.uleb128 0x49
 5058 0182 13       		.uleb128 0x13
 5059 0183 2F       		.uleb128 0x2f
 5060 0184 0B       		.uleb128 0xb
 5061 0185 00       		.byte	0
 5062 0186 00       		.byte	0
 5063 0187 1A       		.uleb128 0x1a
 5064 0188 05       		.uleb128 0x5
 5065 0189 00       		.byte	0
 5066 018a 03       		.uleb128 0x3
 5067 018b 08       		.uleb128 0x8
 5068 018c 3A       		.uleb128 0x3a
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 140


 5069 018d 0B       		.uleb128 0xb
 5070 018e 3B       		.uleb128 0x3b
 5071 018f 05       		.uleb128 0x5
 5072 0190 49       		.uleb128 0x49
 5073 0191 13       		.uleb128 0x13
 5074 0192 02       		.uleb128 0x2
 5075 0193 18       		.uleb128 0x18
 5076 0194 00       		.byte	0
 5077 0195 00       		.byte	0
 5078 0196 1B       		.uleb128 0x1b
 5079 0197 2E       		.uleb128 0x2e
 5080 0198 00       		.byte	0
 5081 0199 3F       		.uleb128 0x3f
 5082 019a 19       		.uleb128 0x19
 5083 019b 03       		.uleb128 0x3
 5084 019c 0E       		.uleb128 0xe
 5085 019d 3A       		.uleb128 0x3a
 5086 019e 0B       		.uleb128 0xb
 5087 019f 3B       		.uleb128 0x3b
 5088 01a0 05       		.uleb128 0x5
 5089 01a1 27       		.uleb128 0x27
 5090 01a2 19       		.uleb128 0x19
 5091 01a3 11       		.uleb128 0x11
 5092 01a4 01       		.uleb128 0x1
 5093 01a5 12       		.uleb128 0x12
 5094 01a6 06       		.uleb128 0x6
 5095 01a7 40       		.uleb128 0x40
 5096 01a8 18       		.uleb128 0x18
 5097 01a9 9742     		.uleb128 0x2117
 5098 01ab 19       		.uleb128 0x19
 5099 01ac 00       		.byte	0
 5100 01ad 00       		.byte	0
 5101 01ae 1C       		.uleb128 0x1c
 5102 01af 34       		.uleb128 0x34
 5103 01b0 00       		.byte	0
 5104 01b1 03       		.uleb128 0x3
 5105 01b2 0E       		.uleb128 0xe
 5106 01b3 3A       		.uleb128 0x3a
 5107 01b4 0B       		.uleb128 0xb
 5108 01b5 3B       		.uleb128 0x3b
 5109 01b6 0B       		.uleb128 0xb
 5110 01b7 49       		.uleb128 0x49
 5111 01b8 13       		.uleb128 0x13
 5112 01b9 02       		.uleb128 0x2
 5113 01ba 18       		.uleb128 0x18
 5114 01bb 00       		.byte	0
 5115 01bc 00       		.byte	0
 5116 01bd 1D       		.uleb128 0x1d
 5117 01be 34       		.uleb128 0x34
 5118 01bf 00       		.byte	0
 5119 01c0 03       		.uleb128 0x3
 5120 01c1 0E       		.uleb128 0xe
 5121 01c2 3A       		.uleb128 0x3a
 5122 01c3 0B       		.uleb128 0xb
 5123 01c4 3B       		.uleb128 0x3b
 5124 01c5 0B       		.uleb128 0xb
 5125 01c6 49       		.uleb128 0x49
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 141


 5126 01c7 13       		.uleb128 0x13
 5127 01c8 3F       		.uleb128 0x3f
 5128 01c9 19       		.uleb128 0x19
 5129 01ca 3C       		.uleb128 0x3c
 5130 01cb 19       		.uleb128 0x19
 5131 01cc 00       		.byte	0
 5132 01cd 00       		.byte	0
 5133 01ce 1E       		.uleb128 0x1e
 5134 01cf 34       		.uleb128 0x34
 5135 01d0 00       		.byte	0
 5136 01d1 03       		.uleb128 0x3
 5137 01d2 0E       		.uleb128 0xe
 5138 01d3 3A       		.uleb128 0x3a
 5139 01d4 0B       		.uleb128 0xb
 5140 01d5 3B       		.uleb128 0x3b
 5141 01d6 0B       		.uleb128 0xb
 5142 01d7 49       		.uleb128 0x49
 5143 01d8 13       		.uleb128 0x13
 5144 01d9 3F       		.uleb128 0x3f
 5145 01da 19       		.uleb128 0x19
 5146 01db 02       		.uleb128 0x2
 5147 01dc 18       		.uleb128 0x18
 5148 01dd 00       		.byte	0
 5149 01de 00       		.byte	0
 5150 01df 00       		.byte	0
 5151              		.section	.debug_aranges,"",%progbits
 5152 0000 44010000 		.4byte	0x144
 5153 0004 0200     		.2byte	0x2
 5154 0006 00000000 		.4byte	.Ldebug_info0
 5155 000a 04       		.byte	0x4
 5156 000b 00       		.byte	0
 5157 000c 0000     		.2byte	0
 5158 000e 0000     		.2byte	0
 5159 0010 00000000 		.4byte	.LFB32
 5160 0014 6C000000 		.4byte	.LFE32-.LFB32
 5161 0018 00000000 		.4byte	.LFB33
 5162 001c 2A000000 		.4byte	.LFE33-.LFB33
 5163 0020 00000000 		.4byte	.LFB34
 5164 0024 28000000 		.4byte	.LFE34-.LFB34
 5165 0028 00000000 		.4byte	.LFB35
 5166 002c 50000000 		.4byte	.LFE35-.LFB35
 5167 0030 00000000 		.4byte	.LFB36
 5168 0034 5C020000 		.4byte	.LFE36-.LFB36
 5169 0038 00000000 		.4byte	.LFB37
 5170 003c 20000000 		.4byte	.LFE37-.LFB37
 5171 0040 00000000 		.4byte	.LFB38
 5172 0044 44000000 		.4byte	.LFE38-.LFB38
 5173 0048 00000000 		.4byte	.LFB39
 5174 004c 58000000 		.4byte	.LFE39-.LFB39
 5175 0050 00000000 		.4byte	.LFB40
 5176 0054 1C000000 		.4byte	.LFE40-.LFB40
 5177 0058 00000000 		.4byte	.LFB41
 5178 005c 28000000 		.4byte	.LFE41-.LFB41
 5179 0060 00000000 		.4byte	.LFB42
 5180 0064 1C000000 		.4byte	.LFE42-.LFB42
 5181 0068 00000000 		.4byte	.LFB43
 5182 006c 28000000 		.4byte	.LFE43-.LFB43
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 142


 5183 0070 00000000 		.4byte	.LFB44
 5184 0074 1C000000 		.4byte	.LFE44-.LFB44
 5185 0078 00000000 		.4byte	.LFB45
 5186 007c 1C000000 		.4byte	.LFE45-.LFB45
 5187 0080 00000000 		.4byte	.LFB46
 5188 0084 1C000000 		.4byte	.LFE46-.LFB46
 5189 0088 00000000 		.4byte	.LFB47
 5190 008c 1C000000 		.4byte	.LFE47-.LFB47
 5191 0090 00000000 		.4byte	.LFB48
 5192 0094 28000000 		.4byte	.LFE48-.LFB48
 5193 0098 00000000 		.4byte	.LFB49
 5194 009c 28000000 		.4byte	.LFE49-.LFB49
 5195 00a0 00000000 		.4byte	.LFB50
 5196 00a4 28000000 		.4byte	.LFE50-.LFB50
 5197 00a8 00000000 		.4byte	.LFB51
 5198 00ac 28000000 		.4byte	.LFE51-.LFB51
 5199 00b0 00000000 		.4byte	.LFB52
 5200 00b4 28000000 		.4byte	.LFE52-.LFB52
 5201 00b8 00000000 		.4byte	.LFB53
 5202 00bc 28000000 		.4byte	.LFE53-.LFB53
 5203 00c0 00000000 		.4byte	.LFB54
 5204 00c4 38010000 		.4byte	.LFE54-.LFB54
 5205 00c8 00000000 		.4byte	.LFB55
 5206 00cc 42000000 		.4byte	.LFE55-.LFB55
 5207 00d0 00000000 		.4byte	.LFB56
 5208 00d4 36000000 		.4byte	.LFE56-.LFB56
 5209 00d8 00000000 		.4byte	.LFB57
 5210 00dc 5C000000 		.4byte	.LFE57-.LFB57
 5211 00e0 00000000 		.4byte	.LFB58
 5212 00e4 5C000000 		.4byte	.LFE58-.LFB58
 5213 00e8 00000000 		.4byte	.LFB59
 5214 00ec B8000000 		.4byte	.LFE59-.LFB59
 5215 00f0 00000000 		.4byte	.LFB60
 5216 00f4 A0010000 		.4byte	.LFE60-.LFB60
 5217 00f8 00000000 		.4byte	.LFB61
 5218 00fc 98000000 		.4byte	.LFE61-.LFB61
 5219 0100 00000000 		.4byte	.LFB62
 5220 0104 98000000 		.4byte	.LFE62-.LFB62
 5221 0108 00000000 		.4byte	.LFB63
 5222 010c 76000000 		.4byte	.LFE63-.LFB63
 5223 0110 00000000 		.4byte	.LFB64
 5224 0114 46000000 		.4byte	.LFE64-.LFB64
 5225 0118 00000000 		.4byte	.LFB65
 5226 011c 1C000000 		.4byte	.LFE65-.LFB65
 5227 0120 00000000 		.4byte	.LFB66
 5228 0124 1C000000 		.4byte	.LFE66-.LFB66
 5229 0128 00000000 		.4byte	.LFB67
 5230 012c 1C000000 		.4byte	.LFE67-.LFB67
 5231 0130 00000000 		.4byte	.LFB68
 5232 0134 14000000 		.4byte	.LFE68-.LFB68
 5233 0138 00000000 		.4byte	.LFB69
 5234 013c 14000000 		.4byte	.LFE69-.LFB69
 5235 0140 00000000 		.4byte	0
 5236 0144 00000000 		.4byte	0
 5237              		.section	.debug_ranges,"",%progbits
 5238              	.Ldebug_ranges0:
 5239 0000 00000000 		.4byte	.LFB32
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 143


 5240 0004 6C000000 		.4byte	.LFE32
 5241 0008 00000000 		.4byte	.LFB33
 5242 000c 2A000000 		.4byte	.LFE33
 5243 0010 00000000 		.4byte	.LFB34
 5244 0014 28000000 		.4byte	.LFE34
 5245 0018 00000000 		.4byte	.LFB35
 5246 001c 50000000 		.4byte	.LFE35
 5247 0020 00000000 		.4byte	.LFB36
 5248 0024 5C020000 		.4byte	.LFE36
 5249 0028 00000000 		.4byte	.LFB37
 5250 002c 20000000 		.4byte	.LFE37
 5251 0030 00000000 		.4byte	.LFB38
 5252 0034 44000000 		.4byte	.LFE38
 5253 0038 00000000 		.4byte	.LFB39
 5254 003c 58000000 		.4byte	.LFE39
 5255 0040 00000000 		.4byte	.LFB40
 5256 0044 1C000000 		.4byte	.LFE40
 5257 0048 00000000 		.4byte	.LFB41
 5258 004c 28000000 		.4byte	.LFE41
 5259 0050 00000000 		.4byte	.LFB42
 5260 0054 1C000000 		.4byte	.LFE42
 5261 0058 00000000 		.4byte	.LFB43
 5262 005c 28000000 		.4byte	.LFE43
 5263 0060 00000000 		.4byte	.LFB44
 5264 0064 1C000000 		.4byte	.LFE44
 5265 0068 00000000 		.4byte	.LFB45
 5266 006c 1C000000 		.4byte	.LFE45
 5267 0070 00000000 		.4byte	.LFB46
 5268 0074 1C000000 		.4byte	.LFE46
 5269 0078 00000000 		.4byte	.LFB47
 5270 007c 1C000000 		.4byte	.LFE47
 5271 0080 00000000 		.4byte	.LFB48
 5272 0084 28000000 		.4byte	.LFE48
 5273 0088 00000000 		.4byte	.LFB49
 5274 008c 28000000 		.4byte	.LFE49
 5275 0090 00000000 		.4byte	.LFB50
 5276 0094 28000000 		.4byte	.LFE50
 5277 0098 00000000 		.4byte	.LFB51
 5278 009c 28000000 		.4byte	.LFE51
 5279 00a0 00000000 		.4byte	.LFB52
 5280 00a4 28000000 		.4byte	.LFE52
 5281 00a8 00000000 		.4byte	.LFB53
 5282 00ac 28000000 		.4byte	.LFE53
 5283 00b0 00000000 		.4byte	.LFB54
 5284 00b4 38010000 		.4byte	.LFE54
 5285 00b8 00000000 		.4byte	.LFB55
 5286 00bc 42000000 		.4byte	.LFE55
 5287 00c0 00000000 		.4byte	.LFB56
 5288 00c4 36000000 		.4byte	.LFE56
 5289 00c8 00000000 		.4byte	.LFB57
 5290 00cc 5C000000 		.4byte	.LFE57
 5291 00d0 00000000 		.4byte	.LFB58
 5292 00d4 5C000000 		.4byte	.LFE58
 5293 00d8 00000000 		.4byte	.LFB59
 5294 00dc B8000000 		.4byte	.LFE59
 5295 00e0 00000000 		.4byte	.LFB60
 5296 00e4 A0010000 		.4byte	.LFE60
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 144


 5297 00e8 00000000 		.4byte	.LFB61
 5298 00ec 98000000 		.4byte	.LFE61
 5299 00f0 00000000 		.4byte	.LFB62
 5300 00f4 98000000 		.4byte	.LFE62
 5301 00f8 00000000 		.4byte	.LFB63
 5302 00fc 76000000 		.4byte	.LFE63
 5303 0100 00000000 		.4byte	.LFB64
 5304 0104 46000000 		.4byte	.LFE64
 5305 0108 00000000 		.4byte	.LFB65
 5306 010c 1C000000 		.4byte	.LFE65
 5307 0110 00000000 		.4byte	.LFB66
 5308 0114 1C000000 		.4byte	.LFE66
 5309 0118 00000000 		.4byte	.LFB67
 5310 011c 1C000000 		.4byte	.LFE67
 5311 0120 00000000 		.4byte	.LFB68
 5312 0124 14000000 		.4byte	.LFE68
 5313 0128 00000000 		.4byte	.LFB69
 5314 012c 14000000 		.4byte	.LFE69
 5315 0130 00000000 		.4byte	0
 5316 0134 00000000 		.4byte	0
 5317              		.section	.debug_line,"",%progbits
 5318              	.Ldebug_line0:
 5319 0000 8D040000 		.section	.debug_str,"MS",%progbits,1
 5319      02005C00 
 5319      00000201 
 5319      FB0E0D00 
 5319      01010101 
 5320              	.LASF126:
 5321 0000 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 5321      656E7365 
 5321      5F73656E 
 5321      736F7242 
 5321      6173656C 
 5322              	.LASF90:
 5323 001b 43617053 		.ascii	"CapSense_debounceCounter\000"
 5323      656E7365 
 5323      5F646562 
 5323      6F756E63 
 5323      65436F75 
 5324              	.LASF33:
 5325 0034 7363616E 		.ascii	"scanSpeedTbl\000"
 5325      53706565 
 5325      6454626C 
 5325      00
 5326              	.LASF129:
 5327 0041 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 5327      656E7365 
 5327      5F6C6F77 
 5327      42617365 
 5327      6C696E65 
 5328              	.LASF56:
 5329 005e 43617053 		.ascii	"CapSense_UpdateBaselineNoThreshold\000"
 5329      656E7365 
 5329      5F557064 
 5329      61746542 
 5329      6173656C 
 5330              	.LASF36:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 145


 5331 0081 6E756D62 		.ascii	"numberOfSensors\000"
 5331      65724F66 
 5331      53656E73 
 5331      6F727300 
 5332              	.LASF40:
 5333 0091 70747247 		.ascii	"ptrGetBitValue\000"
 5333      65744269 
 5333      7456616C 
 5333      756500
 5334              	.LASF97:
 5335 00a0 43617053 		.ascii	"CapSense_DisableWidget\000"
 5335      656E7365 
 5335      5F446973 
 5335      61626C65 
 5335      57696467 
 5336              	.LASF64:
 5337 00b7 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 5337      656E7365 
 5337      5F557064 
 5337      61746545 
 5337      6E61626C 
 5338              	.LASF140:
 5339 00d7 43617053 		.ascii	"CapSense_config\000"
 5339      656E7365 
 5339      5F636F6E 
 5339      66696700 
 5340              	.LASF55:
 5341 00e7 69735365 		.ascii	"isSensorEnabled\000"
 5341      6E736F72 
 5341      456E6162 
 5341      6C656400 
 5342              	.LASF93:
 5343 00f7 6E756D4F 		.ascii	"numOfSensors\000"
 5343      6653656E 
 5343      736F7273 
 5343      00
 5344              	.LASF42:
 5345 0104 43617053 		.ascii	"CapSense_CONFIG_TYPE_POINTERS_P4_v2_60\000"
 5345      656E7365 
 5345      5F434F4E 
 5345      4649475F 
 5345      54595045 
 5346              	.LASF8:
 5347 012b 756E7369 		.ascii	"unsigned int\000"
 5347      676E6564 
 5347      20696E74 
 5347      00
 5348              	.LASF45:
 5349 0138 746F7461 		.ascii	"totalSensorsNum\000"
 5349      6C53656E 
 5349      736F7273 
 5349      4E756D00 
 5350              	.LASF107:
 5351 0148 706F734E 		.ascii	"posNext\000"
 5351      65787400 
 5352              	.LASF12:
 5353 0150 696E7431 		.ascii	"int16\000"
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 146


 5353      3600
 5354              	.LASF142:
 5355 0156 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5355      43313120 
 5355      352E342E 
 5355      31203230 
 5355      31363036 
 5356 0189 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 5356      20726576 
 5356      6973696F 
 5356      6E203233 
 5356      37373135 
 5357 01bc 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5357      66756E63 
 5357      74696F6E 
 5357      2D736563 
 5357      74696F6E 
 5358              	.LASF30:
 5359 01e4 73616D70 		.ascii	"sampleMaxTbl\000"
 5359      6C654D61 
 5359      7854626C 
 5359      00
 5360              	.LASF54:
 5361 01f1 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 5361      656E7365 
 5361      5F496E69 
 5361      7469616C 
 5361      697A6545 
 5362              	.LASF28:
 5363 0215 7369676E 		.ascii	"signRegisterTbl\000"
 5363      52656769 
 5363      73746572 
 5363      54626C00 
 5364              	.LASF135:
 5365 0225 43617053 		.ascii	"CapSense_debounce\000"
 5365      656E7365 
 5365      5F646562 
 5365      6F756E63 
 5365      6500
 5366              	.LASF51:
 5367 0237 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 5367      656E7365 
 5367      5F496E69 
 5367      7469616C 
 5367      697A6553 
 5368              	.LASF106:
 5369 0259 706F7350 		.ascii	"posPrev\000"
 5369      72657600 
 5370              	.LASF69:
 5371 0261 43617053 		.ascii	"CapSense_SetBaselineData\000"
 5371      656E7365 
 5371      5F536574 
 5371      42617365 
 5371      6C696E65 
 5372              	.LASF35:
 5373 027a 72617744 		.ascii	"rawDataIndex\000"
 5373      61746149 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 147


 5373      6E646578 
 5373      00
 5374              	.LASF44:
 5375 0287 746F7461 		.ascii	"totalWidgetsNum\000"
 5375      6C576964 
 5375      67657473 
 5375      4E756D00 
 5376              	.LASF73:
 5377 0297 43617053 		.ascii	"CapSense_SetDiffCountData\000"
 5377      656E7365 
 5377      5F536574 
 5377      44696666 
 5377      436F756E 
 5378              	.LASF127:
 5379 02b1 43617053 		.ascii	"CapSense_sensorSignal\000"
 5379      656E7365 
 5379      5F73656E 
 5379      736F7253 
 5379      69676E61 
 5380              	.LASF136:
 5381 02c7 43617053 		.ascii	"CapSense_rawDataIndex\000"
 5381      656E7365 
 5381      5F726177 
 5381      44617461 
 5381      496E6465 
 5382              	.LASF80:
 5383 02dd 43617053 		.ascii	"CapSense_SetNoiseThreshold\000"
 5383      656E7365 
 5383      5F536574 
 5383      4E6F6973 
 5383      65546872 
 5384              	.LASF65:
 5385 02f8 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 5385      656E7365 
 5385      5F557064 
 5385      61746557 
 5385      69646765 
 5386              	.LASF134:
 5387 0316 43617053 		.ascii	"CapSense_hysteresis\000"
 5387      656E7365 
 5387      5F687973 
 5387      74657265 
 5387      73697300 
 5388              	.LASF14:
 5389 032a 666C6F61 		.ascii	"float\000"
 5389      7400
 5390              	.LASF13:
 5391 0330 696E7433 		.ascii	"int32\000"
 5391      3200
 5392              	.LASF100:
 5393 0336 636F756E 		.ascii	"count\000"
 5393      7400
 5394              	.LASF25:
 5395 033c 7265736F 		.ascii	"resolutionsTbl\000"
 5395      6C757469 
 5395      6F6E7354 
 5395      626C00
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 148


 5396              	.LASF76:
 5397 034b 43617053 		.ascii	"CapSense_GetNoiseThreshold\000"
 5397      656E7365 
 5397      5F476574 
 5397      4E6F6973 
 5397      65546872 
 5398              	.LASF27:
 5399 0366 72756E6E 		.ascii	"runningDifferenceTbl\000"
 5399      696E6744 
 5399      69666665 
 5399      72656E63 
 5399      6554626C 
 5400              	.LASF7:
 5401 037b 6C6F6E67 		.ascii	"long long unsigned int\000"
 5401      206C6F6E 
 5401      6720756E 
 5401      7369676E 
 5401      65642069 
 5402              	.LASF123:
 5403 0392 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 5403      656E7365 
 5403      5F73656E 
 5403      736F7245 
 5403      6E61626C 
 5404              	.LASF61:
 5405 03ac 77696467 		.ascii	"widget\000"
 5405      657400
 5406              	.LASF131:
 5407 03b3 43617053 		.ascii	"CapSense_fingerThreshold\000"
 5407      656E7365 
 5407      5F66696E 
 5407      67657254 
 5407      68726573 
 5408              	.LASF115:
 5409 03cc 43617053 		.ascii	"CapSense_AveragingFilter\000"
 5409      656E7365 
 5409      5F417665 
 5409      72616769 
 5409      6E674669 
 5410              	.LASF49:
 5411 03e5 43617053 		.ascii	"CapSense_CONFIG_TYPE_P4_v2_60\000"
 5411      656E7365 
 5411      5F434F4E 
 5411      4649475F 
 5411      54595045 
 5412              	.LASF124:
 5413 0403 43617053 		.ascii	"CapSense_widgetNumber\000"
 5413      656E7365 
 5413      5F776964 
 5413      6765744E 
 5413      756D6265 
 5414              	.LASF79:
 5415 0419 43617053 		.ascii	"CapSense_SetFingerThreshold\000"
 5415      656E7365 
 5415      5F536574 
 5415      46696E67 
 5415      65725468 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 149


 5416              	.LASF120:
 5417 0435 43617053 		.ascii	"CapSense_DisableRawDataFilters\000"
 5417      656E7365 
 5417      5F446973 
 5417      61626C65 
 5417      52617744 
 5418              	.LASF74:
 5419 0454 76616C75 		.ascii	"value\000"
 5419      6500
 5420              	.LASF77:
 5421 045a 43617053 		.ascii	"CapSense_GetFingerHysteresis\000"
 5421      656E7365 
 5421      5F476574 
 5421      46696E67 
 5421      65724879 
 5422              	.LASF72:
 5423 0477 43617053 		.ascii	"CapSense_GetDiffCountData\000"
 5423      656E7365 
 5423      5F476574 
 5423      44696666 
 5423      436F756E 
 5424              	.LASF58:
 5425 0491 7369676E 		.ascii	"sign\000"
 5425      00
 5426              	.LASF99:
 5427 0496 6F666673 		.ascii	"offset\000"
 5427      657400
 5428              	.LASF26:
 5429 049d 6E6F6973 		.ascii	"noiseEnvelopeTbl\000"
 5429      65456E76 
 5429      656C6F70 
 5429      6554626C 
 5429      00
 5430              	.LASF57:
 5431 04ae 63616C63 		.ascii	"calc\000"
 5431      00
 5432              	.LASF39:
 5433 04b3 70747252 		.ascii	"ptrReadSensorRaw\000"
 5433      65616453 
 5433      656E736F 
 5433      72526177 
 5433      00
 5434              	.LASF89:
 5435 04c4 68797374 		.ascii	"hysteresis\000"
 5435      65726573 
 5435      697300
 5436              	.LASF60:
 5437 04cf 66696C74 		.ascii	"filteredRawData\000"
 5437      65726564 
 5437      52617744 
 5437      61746100 
 5438              	.LASF66:
 5439 04df 73656E73 		.ascii	"sensorsPerWidget\000"
 5439      6F727350 
 5439      65725769 
 5439      64676574 
 5439      00
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 150


 5440              	.LASF95:
 5441 04f0 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 5441      656E7365 
 5441      5F436865 
 5441      636B4973 
 5441      416E7957 
 5442              	.LASF137:
 5443 0510 43617053 		.ascii	"CapSense_numberOfSensors\000"
 5443      656E7365 
 5443      5F6E756D 
 5443      6265724F 
 5443      6653656E 
 5444              	.LASF133:
 5445 0529 43617053 		.ascii	"CapSense_negativeNoiseThreshold\000"
 5445      656E7365 
 5445      5F6E6567 
 5445      61746976 
 5445      654E6F69 
 5446              	.LASF43:
 5447 0549 746F7461 		.ascii	"totalScanslotsNum\000"
 5447      6C536361 
 5447      6E736C6F 
 5447      74734E75 
 5447      6D00
 5448              	.LASF52:
 5449 055b 73656E73 		.ascii	"sensor\000"
 5449      6F7200
 5450              	.LASF46:
 5451 0562 73656E73 		.ascii	"sensetivitySeed\000"
 5451      65746976 
 5451      69747953 
 5451      65656400 
 5452              	.LASF96:
 5453 0572 43617053 		.ascii	"CapSense_EnableWidget\000"
 5453      656E7365 
 5453      5F456E61 
 5453      626C6557 
 5453      69646765 
 5454              	.LASF16:
 5455 0588 63686172 		.ascii	"char\000"
 5455      00
 5456              	.LASF78:
 5457 058d 43617053 		.ascii	"CapSense_GetNegativeNoiseThreshold\000"
 5457      656E7365 
 5457      5F476574 
 5457      4E656761 
 5457      74697665 
 5458              	.LASF34:
 5459 05b0 70726573 		.ascii	"prescalerTable\000"
 5459      63616C65 
 5459      72546162 
 5459      6C6500
 5460              	.LASF10:
 5461 05bf 75696E74 		.ascii	"uint16\000"
 5461      313600
 5462              	.LASF70:
 5463 05c6 64617461 		.ascii	"data\000"
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 151


 5463      00
 5464              	.LASF19:
 5465 05cb 69646163 		.ascii	"idac1LevelsTbl\000"
 5465      314C6576 
 5465      656C7354 
 5465      626C00
 5466              	.LASF105:
 5467 05da 7265736F 		.ascii	"resolution\000"
 5467      6C757469 
 5467      6F6E00
 5468              	.LASF92:
 5469 05e5 72617749 		.ascii	"rawIndex\000"
 5469      6E646578 
 5469      00
 5470              	.LASF108:
 5471 05ee 43617053 		.ascii	"CapSense_centroid\000"
 5471      656E7365 
 5471      5F63656E 
 5471      74726F69 
 5471      6400
 5472              	.LASF6:
 5473 0600 6C6F6E67 		.ascii	"long long int\000"
 5473      206C6F6E 
 5473      6720696E 
 5473      7400
 5474              	.LASF116:
 5475 060e 43617053 		.ascii	"CapSense_GetWidgetNumber\000"
 5475      656E7365 
 5475      5F476574 
 5475      57696467 
 5475      65744E75 
 5476              	.LASF86:
 5477 0627 6465626F 		.ascii	"debounce\000"
 5477      756E6365 
 5477      00
 5478              	.LASF38:
 5479 0630 70747250 		.ascii	"ptrPreScan\000"
 5479      72655363 
 5479      616E00
 5480              	.LASF85:
 5481 063b 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 5481      656E7365 
 5481      5F436865 
 5481      636B4973 
 5481      53656E73 
 5482              	.LASF37:
 5483 0658 70747247 		.ascii	"ptrGetRaw\000"
 5483      65745261 
 5483      7700
 5484              	.LASF63:
 5485 0662 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 5485      656E7365 
 5485      5F557064 
 5485      61746553 
 5485      656E736F 
 5486              	.LASF50:
 5487 0680 43617053 		.ascii	"CapSense_BaseInit\000"
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 152


 5487      656E7365 
 5487      5F426173 
 5487      65496E69 
 5487      7400
 5488              	.LASF104:
 5489 0692 43617053 		.ascii	"CapSense_CalcCentroid\000"
 5489      656E7365 
 5489      5F43616C 
 5489      6343656E 
 5489      74726F69 
 5490              	.LASF29:
 5491 06a8 73616D70 		.ascii	"sampleMinTbl\000"
 5491      6C654D69 
 5491      6E54626C 
 5491      00
 5492              	.LASF122:
 5493 06b5 43617053 		.ascii	"CapSense_sensorRaw\000"
 5493      656E7365 
 5493      5F73656E 
 5493      736F7252 
 5493      617700
 5494              	.LASF117:
 5495 06c8 43617053 		.ascii	"CapSense_GetLowBaselineReset\000"
 5495      656E7365 
 5495      5F476574 
 5495      4C6F7742 
 5495      6173656C 
 5496              	.LASF82:
 5497 06e5 43617053 		.ascii	"CapSense_SetNegativeNoiseThreshold\000"
 5497      656E7365 
 5497      5F536574 
 5497      4E656761 
 5497      74697665 
 5498              	.LASF11:
 5499 0708 75696E74 		.ascii	"uint32\000"
 5499      333200
 5500              	.LASF103:
 5501 070f 73746172 		.ascii	"startOfSlider\000"
 5501      744F6653 
 5501      6C696465 
 5501      7200
 5502              	.LASF81:
 5503 071d 43617053 		.ascii	"CapSense_SetFingerHysteresis\000"
 5503      656E7365 
 5503      5F536574 
 5503      46696E67 
 5503      65724879 
 5504              	.LASF75:
 5505 073a 43617053 		.ascii	"CapSense_GetFingerThreshold\000"
 5505      656E7365 
 5505      5F476574 
 5505      46696E67 
 5505      65725468 
 5506              	.LASF110:
 5507 0756 6E756D65 		.ascii	"numerator\000"
 5507      7261746F 
 5507      7200
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 153


 5508              	.LASF18:
 5509 0760 6C6F6E67 		.ascii	"long double\000"
 5509      20646F75 
 5509      626C6500 
 5510              	.LASF68:
 5511 076c 6C617374 		.ascii	"lastSensor\000"
 5511      53656E73 
 5511      6F7200
 5512              	.LASF47:
 5513 0777 6866636C 		.ascii	"hfclkFreq_MHz\000"
 5513      6B467265 
 5513      715F4D48 
 5513      7A00
 5514              	.LASF144:
 5515 0785 433A5C55 		.ascii	"C:\\Users\\jon\\Documents\\PSoC Creator\\servo_test"
 5515      73657273 
 5515      5C6A6F6E 
 5515      5C446F63 
 5515      756D656E 
 5516 07b3 65725C53 		.ascii	"er\\ServoTester.cydsn\000"
 5516      6572766F 
 5516      54657374 
 5516      65722E63 
 5516      7964736E 
 5517              	.LASF112:
 5518 07c8 43617053 		.ascii	"CapSense_GetCentroidPos\000"
 5518      656E7365 
 5518      5F476574 
 5518      43656E74 
 5518      726F6964 
 5519              	.LASF20:
 5520 07e0 69646163 		.ascii	"idac2LevelsTbl\000"
 5520      324C6576 
 5520      656C7354 
 5520      626C00
 5521              	.LASF2:
 5522 07ef 73686F72 		.ascii	"short int\000"
 5522      7420696E 
 5522      7400
 5523              	.LASF4:
 5524 07f9 6C6F6E67 		.ascii	"long int\000"
 5524      20696E74 
 5524      00
 5525              	.LASF67:
 5526 0802 66697273 		.ascii	"firstSensor\000"
 5526      7453656E 
 5526      736F7200 
 5527              	.LASF102:
 5528 080e 74656D70 		.ascii	"temp\000"
 5528      00
 5529              	.LASF98:
 5530 0813 43617053 		.ascii	"CapSense_FindMaximum\000"
 5530      656E7365 
 5530      5F46696E 
 5530      644D6178 
 5530      696D756D 
 5531              	.LASF24:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 154


 5532 0828 77696467 		.ascii	"widgetNubmersTbl\000"
 5532      65744E75 
 5532      626D6572 
 5532      7354626C 
 5532      00
 5533              	.LASF119:
 5534 0839 43617053 		.ascii	"CapSense_EnableRawDataFilters\000"
 5534      656E7365 
 5534      5F456E61 
 5534      626C6552 
 5534      61774461 
 5535              	.LASF130:
 5536 0857 43617053 		.ascii	"CapSense_lowBaselineReset\000"
 5536      656E7365 
 5536      5F6C6F77 
 5536      42617365 
 5536      6C696E65 
 5537              	.LASF111:
 5538 0871 64656E6F 		.ascii	"denominator\000"
 5538      6D696E61 
 5538      746F7200 
 5539              	.LASF32:
 5540 087d 6B56616C 		.ascii	"kValueTbl\000"
 5540      75655462 
 5540      6C00
 5541              	.LASF125:
 5542 0887 43617053 		.ascii	"CapSense_sensorBaseline\000"
 5542      656E7365 
 5542      5F73656E 
 5542      736F7242 
 5542      6173656C 
 5543              	.LASF101:
 5544 089f 6D617869 		.ascii	"maximum\000"
 5544      6D756D00 
 5545              	.LASF17:
 5546 08a7 73697A65 		.ascii	"sizetype\000"
 5546      74797065 
 5546      00
 5547              	.LASF5:
 5548 08b0 6C6F6E67 		.ascii	"long unsigned int\000"
 5548      20756E73 
 5548      69676E65 
 5548      6420696E 
 5548      7400
 5549              	.LASF48:
 5550 08c2 706F696E 		.ascii	"pointers\000"
 5550      74657273 
 5550      00
 5551              	.LASF62:
 5552 08cb 6E6F6973 		.ascii	"noiseThreshold\000"
 5552      65546872 
 5552      6573686F 
 5552      6C6400
 5553              	.LASF31:
 5554 08da 70726576 		.ascii	"previousSampleTbl\000"
 5554      696F7573 
 5554      53616D70 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 155


 5554      6C655462 
 5554      6C00
 5555              	.LASF83:
 5556 08ec 43617053 		.ascii	"CapSense_SetDebounce\000"
 5556      656E7365 
 5556      5F536574 
 5556      4465626F 
 5556      756E6365 
 5557              	.LASF88:
 5558 0901 66696E67 		.ascii	"fingerThreshold\000"
 5558      65725468 
 5558      72657368 
 5558      6F6C6400 
 5559              	.LASF22:
 5560 0911 63686172 		.ascii	"chargeDivTbl\000"
 5560      67654469 
 5560      7654626C 
 5560      00
 5561              	.LASF1:
 5562 091e 756E7369 		.ascii	"unsigned char\000"
 5562      676E6564 
 5562      20636861 
 5562      7200
 5563              	.LASF132:
 5564 092c 43617053 		.ascii	"CapSense_noiseThreshold\000"
 5564      656E7365 
 5564      5F6E6F69 
 5564      73655468 
 5564      72657368 
 5565              	.LASF87:
 5566 0944 6465626F 		.ascii	"debounceIndex\000"
 5566      756E6365 
 5566      496E6465 
 5566      7800
 5567              	.LASF53:
 5568 0952 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 5568      656E7365 
 5568      5F496E69 
 5568      7469616C 
 5568      697A6541 
 5569              	.LASF71:
 5570 0972 43617053 		.ascii	"CapSense_GetBaselineData\000"
 5570      656E7365 
 5570      5F476574 
 5570      42617365 
 5570      6C696E65 
 5571              	.LASF84:
 5572 098b 43617053 		.ascii	"CapSense_SetLowBaselineReset\000"
 5572      656E7365 
 5572      5F536574 
 5572      4C6F7742 
 5572      6173656C 
 5573              	.LASF21:
 5574 09a8 73656E73 		.ascii	"sensetivityTbl\000"
 5574      65746976 
 5574      69747954 
 5574      626C00
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 156


 5575              	.LASF121:
 5576 09b7 43617053 		.ascii	"CapSense_centroidMult\000"
 5576      656E7365 
 5576      5F63656E 
 5576      74726F69 
 5576      644D756C 
 5577              	.LASF143:
 5578 09cd 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_CSHL.c\000"
 5578      72617465 
 5578      645F536F 
 5578      75726365 
 5578      5C50536F 
 5579              	.LASF94:
 5580 09f4 73746174 		.ascii	"state\000"
 5580      6500
 5581              	.LASF141:
 5582 09fa 43617053 		.ascii	"CapSense_enableRawFilters\000"
 5582      656E7365 
 5582      5F656E61 
 5582      626C6552 
 5582      61774669 
 5583              	.LASF23:
 5584 0a14 6D6F6444 		.ascii	"modDivTbl\000"
 5584      69765462 
 5584      6C00
 5585              	.LASF0:
 5586 0a1e 7369676E 		.ascii	"signed char\000"
 5586      65642063 
 5586      68617200 
 5587              	.LASF3:
 5588 0a2a 73686F72 		.ascii	"short unsigned int\000"
 5588      7420756E 
 5588      7369676E 
 5588      65642069 
 5588      6E7400
 5589              	.LASF113:
 5590 0a3d 43617053 		.ascii	"CapSense_GetRadialCentroidPos\000"
 5590      656E7365 
 5590      5F476574 
 5590      52616469 
 5590      616C4365 
 5591              	.LASF41:
 5592 0a5b 70747253 		.ascii	"ptrSetBitValue\000"
 5592      65744269 
 5592      7456616C 
 5592      756500
 5593              	.LASF114:
 5594 0a6a 43617053 		.ascii	"CapSense_MedianFilter\000"
 5594      656E7365 
 5594      5F4D6564 
 5594      69616E46 
 5594      696C7465 
 5595              	.LASF59:
 5596 0a80 74656D70 		.ascii	"tempRaw\000"
 5596      52617700 
 5597              	.LASF118:
 5598 0a88 43617053 		.ascii	"CapSense_GetDebounce\000"
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccWrRUuw.s 			page 157


 5598      656E7365 
 5598      5F476574 
 5598      4465626F 
 5598      756E6365 
 5599              	.LASF91:
 5600 0a9d 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 5600      656E7365 
 5600      5F436865 
 5600      636B4973 
 5600      57696467 
 5601              	.LASF9:
 5602 0aba 75696E74 		.ascii	"uint8\000"
 5602      3800
 5603              	.LASF15:
 5604 0ac0 646F7562 		.ascii	"double\000"
 5604      6C6500
 5605              	.LASF138:
 5606 0ac7 43617053 		.ascii	"CapSense_rawFilterData1\000"
 5606      656E7365 
 5606      5F726177 
 5606      46696C74 
 5606      65724461 
 5607              	.LASF139:
 5608 0adf 43617053 		.ascii	"CapSense_rawFilterData2\000"
 5608      656E7365 
 5608      5F726177 
 5608      46696C74 
 5608      65724461 
 5609              	.LASF109:
 5610 0af7 706F7369 		.ascii	"position\000"
 5610      74696F6E 
 5610      00
 5611              	.LASF128:
 5612 0b00 43617053 		.ascii	"CapSense_sensorOnMask\000"
 5612      656E7365 
 5612      5F73656E 
 5612      736F724F 
 5612      6E4D6173 
 5613              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
