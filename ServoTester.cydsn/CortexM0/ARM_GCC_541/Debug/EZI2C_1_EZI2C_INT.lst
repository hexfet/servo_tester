ARM GAS  C:\Users\jon\AppData\Local\Temp\ccwgSPeh.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"EZI2C_1_EZI2C_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.EZI2C_1_EZI2C_STRETCH_ISR,"ax",%progbits
  20              		.align	2
  21              		.global	EZI2C_1_EZI2C_STRETCH_ISR
  22              		.code	16
  23              		.thumb_func
  24              		.type	EZI2C_1_EZI2C_STRETCH_ISR, %function
  25              	EZI2C_1_EZI2C_STRETCH_ISR:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\EZI2C_1_EZI2C_INT.c"
   1:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** * \file EZI2C_1_EZI2C_INT.c
   3:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** * \version 4.0
   4:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** *
   5:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** * \brief
   6:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** *  This file provides the source code to the Interrupt Service Routine for
   7:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** *  the SCB Component in EZI2C mode.
   8:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** *
   9:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** * Note:
  10:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** *
  11:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** ********************************************************************************
  12:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** * \copyright
  13:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** * Copyright 2013-2017, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
  19:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** #include "EZI2C_1_PVT.h"
  20:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** #include "EZI2C_1_EZI2C_PVT.h"
  21:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
  22:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
  23:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** #if(EZI2C_1_EZI2C_SCL_STRETCH_ENABLE_CONST)
  24:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****     /*******************************************************************************
  25:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****     * Function Name: EZI2C_1_EZI2C_STRETCH_ISR
  26:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****     ****************************************************************************//**
  27:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****     *
  28:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****     *  Handles the Interrupt Service Routine for the SCB EZI2C mode.
  29:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****     *  The clock stretching is used during operation.
  30:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****     *
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccwgSPeh.s 			page 2


  31:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****     *******************************************************************************/
  32:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****     CY_ISR_PROTO(EZI2C_1_EZI2C_STRETCH_ISR)
  33:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****     {
  28              		.loc 1 33 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 88B0     		sub	sp, sp, #32
  37              		.cfi_def_cfa_offset 40
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  34:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         static uint16 locBufSize;
  35:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         uint32 locIndex;
  36:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         uint32 locStatus;
  37:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
  38:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         uint32 endTransfer;
  39:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         uint32 fifoIndex;
  40:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         uint32 locByte;
  41:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
  42:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         uint32 locIntrCause;
  43:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         uint32 locIntrSlave;
  44:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
  45:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****     #ifdef EZI2C_1_EZI2C_STRETCH_ISR_ENTRY_CALLBACK
  46:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         EZI2C_1_EZI2C_STRETCH_ISR_EntryCallback();
  47:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****     #endif /* EZI2C_1_EZI2C_STRETCH_ISR_ENTRY_CALLBACK */
  48:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
  49:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****     #if(EZI2C_1_SECONDARY_ADDRESS_ENABLE_CONST)
  50:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         /* Variable intended to be used with either buffer */
  51:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         static volatile uint8 * EZI2C_1_dataBuffer; /* Pointer to data buffer              */
  52:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         static uint16 EZI2C_1_bufSizeBuf;           /* Size of buffer in bytes             */
  53:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         static uint16 EZI2C_1_protectBuf;           /* Start index of write protected area */
  54:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
  55:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         static uint8 activeAddress;
  56:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         uint32 ackResponse;
  57:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
  58:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         ackResponse = EZI2C_1_EZI2C_ACK_RECEIVED_ADDRESS;
  59:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****     #endif /* (EZI2C_1_SECONDARY_ADDRESS_ENABLE_CONST) */
  60:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
  61:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****     #if !defined (CY_REMOVE_EZI2C_1_CUSTOM_INTR_HANDLER)
  62:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         if(NULL != EZI2C_1_customIntrHandler)
  40              		.loc 1 62 0
  41 0006 984B     		ldr	r3, .L41
  42 0008 1B68     		ldr	r3, [r3]
  43 000a 002B     		cmp	r3, #0
  44 000c 02D0     		beq	.L2
  63:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         {
  64:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****             EZI2C_1_customIntrHandler();
  45              		.loc 1 64 0
  46 000e 964B     		ldr	r3, .L41
  47 0010 1B68     		ldr	r3, [r3]
  48 0012 9847     		blx	r3
  49              	.L2:
  65:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         }
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccwgSPeh.s 			page 3


  66:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****     #else
  67:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         CY_EZI2C_1_CUSTOM_INTR_HANDLER();
  68:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****     #endif /* !defined (CY_REMOVE_EZI2C_1_CUSTOM_INTR_HANDLER) */
  69:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
  70:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         /* Make local copy of global variable */
  71:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         locIndex = EZI2C_1_EZI2C_GET_INDEX(activeAddress);
  50              		.loc 1 71 0
  51 0014 954B     		ldr	r3, .L41+4
  52 0016 1B88     		ldrh	r3, [r3]
  53 0018 FB61     		str	r3, [r7, #28]
  72:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
  73:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         /* Get interrupt sources */
  74:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         locIntrSlave = EZI2C_1_GetSlaveInterruptSource();
  54              		.loc 1 74 0
  55 001a 954B     		ldr	r3, .L41+8
  56 001c 1B68     		ldr	r3, [r3]
  57 001e FB60     		str	r3, [r7, #12]
  75:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         locIntrCause = EZI2C_1_GetInterruptCause();
  58              		.loc 1 75 0
  59 0020 944B     		ldr	r3, .L41+12
  60 0022 1B68     		ldr	r3, [r3]
  61 0024 BB60     		str	r3, [r7, #8]
  76:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
  77:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         /* INTR_SLAVE.I2C_ARB_LOST and INTR_SLAVE_I2C.BUS_ERROR */
  78:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         /* Handles errors on the bus. There are cases when both bits are set.
  79:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         * The error recovery is common: re-enable the scb IP. The content of the RX FIFO is lost.
  80:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         */
  81:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         if(0u != (locIntrSlave & (EZI2C_1_INTR_SLAVE_I2C_ARB_LOST |
  62              		.loc 1 81 0
  63 0026 FA68     		ldr	r2, [r7, #12]
  64 0028 0223     		movs	r3, #2
  65 002a FF33     		adds	r3, r3, #255
  66 002c 1340     		ands	r3, r2
  67 002e 56D0     		beq	.L3
  82:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                   EZI2C_1_INTR_SLAVE_I2C_BUS_ERROR)))
  83:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         {
  84:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****             EZI2C_1_CTRL_REG &= (uint32) ~EZI2C_1_CTRL_ENABLED; /* Disable SCB block */
  68              		.loc 1 84 0
  69 0030 914B     		ldr	r3, .L41+16
  70 0032 914A     		ldr	r2, .L41+16
  71 0034 1268     		ldr	r2, [r2]
  72 0036 5200     		lsls	r2, r2, #1
  73 0038 5208     		lsrs	r2, r2, #1
  74 003a 1A60     		str	r2, [r3]
  85:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
  86:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         #if(EZI2C_1_CY_SCBIP_V0)
  87:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****             if(0u != ((uint8) EZI2C_1_EZI2C_STATUS_BUSY & EZI2C_1_curStatus))
  75              		.loc 1 87 0
  76 003c 8F4B     		ldr	r3, .L41+20
  77 003e 1B78     		ldrb	r3, [r3]
  78 0040 DBB2     		uxtb	r3, r3
  79 0042 2022     		movs	r2, #32
  80 0044 1340     		ands	r3, r2
  81 0046 DBB2     		uxtb	r3, r3
  82 0048 002B     		cmp	r3, #0
  83 004a 2BD0     		beq	.L4
  88:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         #endif /* (EZI2C_1_CY_SCBIP_V0) */
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccwgSPeh.s 			page 4


  89:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****             {
  90:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 EZI2C_1_curStatus &= (uint8) ~EZI2C_1_EZI2C_STATUS_BUSY;
  84              		.loc 1 90 0
  85 004c 8B4B     		ldr	r3, .L41+20
  86 004e 1B78     		ldrb	r3, [r3]
  87 0050 DBB2     		uxtb	r3, r3
  88 0052 2022     		movs	r2, #32
  89 0054 9343     		bics	r3, r2
  90 0056 DAB2     		uxtb	r2, r3
  91 0058 884B     		ldr	r3, .L41+20
  92 005a 1A70     		strb	r2, [r3]
  91:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 EZI2C_1_curStatus |= (uint8)  EZI2C_1_EZI2C_STATUS_ERR;
  93              		.loc 1 91 0
  94 005c 874B     		ldr	r3, .L41+20
  95 005e 1B78     		ldrb	r3, [r3]
  96 0060 DBB2     		uxtb	r3, r3
  97 0062 1022     		movs	r2, #16
  98 0064 1343     		orrs	r3, r2
  99 0066 DAB2     		uxtb	r2, r3
 100 0068 844B     		ldr	r3, .L41+20
 101 006a 1A70     		strb	r2, [r3]
  92:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
  93:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 /* INTR_TX_EMPTY is enabled in the address phase to receive data */
  94:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 if(0u == (EZI2C_1_GetTxInterruptMode() & EZI2C_1_INTR_TX_EMPTY))
 102              		.loc 1 94 0
 103 006c 844B     		ldr	r3, .L41+24
 104 006e 1B68     		ldr	r3, [r3]
 105 0070 1022     		movs	r2, #16
 106 0072 1340     		ands	r3, r2
 107 0074 0ED1     		bne	.L5
  95:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 {
  96:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     /* Write complete */
  97:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     if(EZI2C_1_indexBuf1 != EZI2C_1_offsetBuf1)
 108              		.loc 1 97 0
 109 0076 7D4B     		ldr	r3, .L41+4
 110 0078 1A88     		ldrh	r2, [r3]
 111 007a 824B     		ldr	r3, .L41+28
 112 007c 1B88     		ldrh	r3, [r3]
 113 007e 9A42     		cmp	r2, r3
 114 0080 10D0     		beq	.L4
  98:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     {
  99:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         EZI2C_1_curStatus |= (uint8) EZI2C_1_INTR_SLAVE_I2C_WRITE_STOP;
 115              		.loc 1 99 0
 116 0082 7E4B     		ldr	r3, .L41+20
 117 0084 1B78     		ldrb	r3, [r3]
 118 0086 DBB2     		uxtb	r3, r3
 119 0088 0822     		movs	r2, #8
 120 008a 1343     		orrs	r3, r2
 121 008c DAB2     		uxtb	r2, r3
 122 008e 7B4B     		ldr	r3, .L41+20
 123 0090 1A70     		strb	r2, [r3]
 124 0092 07E0     		b	.L4
 125              	.L5:
 100:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     }
 101:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 }
 102:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 else
 103:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 {
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccwgSPeh.s 			page 5


 104:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     /* Read complete */
 105:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     EZI2C_1_curStatus |= (uint8) EZI2C_1_INTR_SLAVE_I2C_NACK;
 126              		.loc 1 105 0
 127 0094 794B     		ldr	r3, .L41+20
 128 0096 1B78     		ldrb	r3, [r3]
 129 0098 DBB2     		uxtb	r3, r3
 130 009a 0222     		movs	r2, #2
 131 009c 1343     		orrs	r3, r2
 132 009e DAB2     		uxtb	r2, r3
 133 00a0 764B     		ldr	r3, .L41+20
 134 00a2 1A70     		strb	r2, [r3]
 135              	.L4:
 106:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 }
 107:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****             }
 108:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 109:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****             EZI2C_1_DISABLE_SLAVE_AUTO_DATA;
 136              		.loc 1 109 0
 137 00a4 784B     		ldr	r3, .L41+32
 138 00a6 784A     		ldr	r2, .L41+32
 139 00a8 1268     		ldr	r2, [r2]
 140 00aa 7849     		ldr	r1, .L41+36
 141 00ac 0A40     		ands	r2, r1
 142 00ae 1A60     		str	r2, [r3]
 110:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 111:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****             /* Disable TX and RX interrupt sources */
 112:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****             EZI2C_1_SetRxInterruptMode(EZI2C_1_NO_INTR_SOURCES);
 143              		.loc 1 112 0
 144 00b0 774B     		ldr	r3, .L41+40
 145 00b2 0022     		movs	r2, #0
 146 00b4 1A60     		str	r2, [r3]
 113:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****             EZI2C_1_SetTxInterruptMode(EZI2C_1_NO_INTR_SOURCES);
 147              		.loc 1 113 0
 148 00b6 724B     		ldr	r3, .L41+24
 149 00b8 0022     		movs	r2, #0
 150 00ba 1A60     		str	r2, [r3]
 114:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 115:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         #if(EZI2C_1_CY_SCBIP_V0)
 116:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****             /* Clear interrupt sources as they are not automatically cleared after SCB is disabled 
 117:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****             EZI2C_1_ClearRxInterruptSource(EZI2C_1_INTR_RX_ALL);
 151              		.loc 1 117 0
 152 00bc 754B     		ldr	r3, .L41+44
 153 00be 764A     		ldr	r2, .L41+48
 154 00c0 1A60     		str	r2, [r3]
 118:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****             EZI2C_1_ClearSlaveInterruptSource(EZI2C_1_INTR_SLAVE_ALL);
 155              		.loc 1 118 0
 156 00c2 6B4B     		ldr	r3, .L41+8
 157 00c4 754A     		ldr	r2, .L41+52
 158 00c6 1A60     		str	r2, [r3]
 119:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         #endif /* (EZI2C_1_CY_SCBIP_V0) */
 120:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 121:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****             EZI2C_1_fsmState = EZI2C_1_EZI2C_FSM_IDLE;
 159              		.loc 1 121 0
 160 00c8 754B     		ldr	r3, .L41+56
 161 00ca 0222     		movs	r2, #2
 162 00cc 1A70     		strb	r2, [r3]
 122:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 123:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****             EZI2C_1_CTRL_REG |= (uint32) EZI2C_1_CTRL_ENABLED;  /* Enable SCB block */
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccwgSPeh.s 			page 6


 163              		.loc 1 123 0
 164 00ce 6A4B     		ldr	r3, .L41+16
 165 00d0 694A     		ldr	r2, .L41+16
 166 00d2 1268     		ldr	r2, [r2]
 167 00d4 8021     		movs	r1, #128
 168 00d6 0906     		lsls	r1, r1, #24
 169 00d8 0A43     		orrs	r2, r1
 170 00da 1A60     		str	r2, [r3]
 171 00dc A8E1     		b	.L7
 172              	.L3:
 124:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         }
 125:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         else
 126:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         {
 127:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****             /* INTR_I2C_EC_WAKE_UP */
 128:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****             /* Wakes up device from deep sleep */
 129:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****             if(0u != (locIntrCause & EZI2C_1_INTR_CAUSE_I2C_EC))
 173              		.loc 1 129 0
 174 00de BB68     		ldr	r3, [r7, #8]
 175 00e0 1022     		movs	r2, #16
 176 00e2 1340     		ands	r3, r2
 177 00e4 02D0     		beq	.L8
 130:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****             {
 131:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 /* Disables wakeup interrupt source but does not clear it. It is cleared in INTR_SL
 132:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 EZI2C_1_SetI2CExtClkInterruptMode(EZI2C_1_NO_INTR_SOURCES);
 178              		.loc 1 132 0
 179 00e6 6F4B     		ldr	r3, .L41+60
 180 00e8 0022     		movs	r2, #0
 181 00ea 1A60     		str	r2, [r3]
 182              	.L8:
 133:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****             }
 134:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 135:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****             if(0u != (locIntrCause & (EZI2C_1_INTR_CAUSE_RX | EZI2C_1_INTR_CAUSE_SLAVE)))
 183              		.loc 1 135 0
 184 00ec BB68     		ldr	r3, [r7, #8]
 185 00ee 0A22     		movs	r2, #10
 186 00f0 1340     		ands	r3, r2
 187 00f2 00D1     		bne	.LCB146
 188 00f4 09E1     		b	.L9	@long jump
 189              	.LCB146:
 136:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****             {
 137:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 /* INTR_RX.NOT_EMPTY */
 138:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 /* Receives data byte-by-byte. Does not use RX FIFO capabilities */
 139:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 if (0u != (EZI2C_1_GetRxInterruptSourceMasked() & EZI2C_1_INTR_RX_NOT_EMPTY))
 190              		.loc 1 139 0
 191 00f6 6C4B     		ldr	r3, .L41+64
 192 00f8 1B68     		ldr	r3, [r3]
 193 00fa 0422     		movs	r2, #4
 194 00fc 1340     		ands	r3, r2
 195 00fe 00D1     		bne	.LCB152
 196 0100 84E0     		b	.L10	@long jump
 197              	.LCB152:
 140:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 {
 141:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 #if(EZI2C_1_SECONDARY_ADDRESS_ENABLE_CONST)
 142:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     /* If I2C_STOP service is delayed to I2C_ADDR_MATCH the address byte is in the 
 143:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     * RX_NOT_EMPTY is enabled. The address byte has to stay into RX FIFO therefore
 144:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     * RX.NOT_EMPTY service has to be skipped. The address byte has to be read by I2
 145:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     */
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccwgSPeh.s 			page 7


 146:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     if (0u == (locIntrCause & EZI2C_1_INTR_CAUSE_SLAVE))
 147:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 #endif /* (EZI2C_1_SECONDARY_ADDRESS_ENABLE_CONST) */
 148:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     {
 149:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         locByte = EZI2C_1_RX_FIFO_RD_REG;
 198              		.loc 1 149 0
 199 0102 6A4B     		ldr	r3, .L41+68
 200 0104 1B68     		ldr	r3, [r3]
 201 0106 7B60     		str	r3, [r7, #4]
 150:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 151:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         switch(EZI2C_1_fsmState)
 202              		.loc 1 151 0
 203 0108 654B     		ldr	r3, .L41+56
 204 010a 1B78     		ldrb	r3, [r3]
 205 010c 012B     		cmp	r3, #1
 206 010e 04D0     		beq	.L12
 207 0110 022B     		cmp	r3, #2
 208 0112 1DD0     		beq	.L13
 209 0114 002B     		cmp	r3, #0
 210 0116 27D0     		beq	.L14
 211 0118 70E0     		b	.L40
 212              	.L12:
 152:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         {
 153:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         case EZI2C_1_EZI2C_FSM_BYTE_WRITE:
 154:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             if(0u != locBufSize)
 213              		.loc 1 154 0
 214 011a 654B     		ldr	r3, .L41+72
 215 011c 1B88     		ldrh	r3, [r3]
 216 011e 002B     		cmp	r3, #0
 217 0120 13D0     		beq	.L15
 155:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             {
 156:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 /* Store data byte and ACK */
 157:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 EZI2C_1_I2C_SLAVE_GENERATE_ACK;
 218              		.loc 1 157 0
 219 0122 644B     		ldr	r3, .L41+76
 220 0124 0122     		movs	r2, #1
 221 0126 1A60     		str	r2, [r3]
 158:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 159:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 EZI2C_1_dataBuffer1[locIndex] = (uint8) locByte;
 222              		.loc 1 159 0
 223 0128 634B     		ldr	r3, .L41+80
 224 012a 1A68     		ldr	r2, [r3]
 225 012c FB69     		ldr	r3, [r7, #28]
 226 012e D318     		adds	r3, r2, r3
 227 0130 7A68     		ldr	r2, [r7, #4]
 228 0132 D2B2     		uxtb	r2, r2
 229 0134 1A70     		strb	r2, [r3]
 160:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 locIndex++;
 230              		.loc 1 160 0
 231 0136 FB69     		ldr	r3, [r7, #28]
 232 0138 0133     		adds	r3, r3, #1
 233 013a FB61     		str	r3, [r7, #28]
 161:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 locBufSize--;
 234              		.loc 1 161 0
 235 013c 5C4B     		ldr	r3, .L41+72
 236 013e 1B88     		ldrh	r3, [r3]
 237 0140 013B     		subs	r3, r3, #1
 238 0142 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccwgSPeh.s 			page 8


 239 0144 5A4B     		ldr	r3, .L41+72
 240 0146 1A80     		strh	r2, [r3]
 162:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             }
 163:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             else
 164:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             {
 165:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 /* Discard data byte and NACK */
 166:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 EZI2C_1_I2C_SLAVE_GENERATE_NACK;
 167:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             }
 168:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             break;
 241              		.loc 1 168 0
 242 0148 5CE0     		b	.L17
 243              	.L15:
 166:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             }
 244              		.loc 1 166 0
 245 014a FFF7FEFF 		bl	EZI2C_1_I2CSlaveNackGeneration
 246              		.loc 1 168 0
 247 014e 59E0     		b	.L17
 248              	.L13:
 169:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 170:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     #if(EZI2C_1_SUB_ADDRESS_SIZE16_CONST)
 171:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         case EZI2C_1_EZI2C_FSM_OFFSET_HI8:
 172:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 173:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             EZI2C_1_I2C_SLAVE_GENERATE_ACK;
 249              		.loc 1 173 0
 250 0150 584B     		ldr	r3, .L41+76
 251 0152 0122     		movs	r2, #1
 252 0154 1A60     		str	r2, [r3]
 174:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 175:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             /* Store offset most significant byre */
 176:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             locBufSize = (uint16) ((uint8) locByte);
 253              		.loc 1 176 0
 254 0156 7B68     		ldr	r3, [r7, #4]
 255 0158 DBB2     		uxtb	r3, r3
 256 015a 9AB2     		uxth	r2, r3
 257 015c 544B     		ldr	r3, .L41+72
 258 015e 1A80     		strh	r2, [r3]
 177:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 178:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             EZI2C_1_fsmState = EZI2C_1_EZI2C_FSM_OFFSET_LO8;
 259              		.loc 1 178 0
 260 0160 4F4B     		ldr	r3, .L41+56
 261 0162 0022     		movs	r2, #0
 262 0164 1A70     		strb	r2, [r3]
 179:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 180:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             break;
 263              		.loc 1 180 0
 264 0166 4DE0     		b	.L17
 265              	.L14:
 181:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     #endif /* (EZI2C_1_SUB_ADDRESS_SIZE16_CONST) */
 182:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 183:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         case EZI2C_1_EZI2C_FSM_OFFSET_LO8:
 184:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 185:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             #if (EZI2C_1_SUB_ADDRESS_SIZE16)
 186:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             {
 187:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 /* Collect 2 bytes offset */
 188:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 locByte = ((uint32) ((uint32) locBufSize << 8u)) | locByte;
 266              		.loc 1 188 0
 267 0168 514B     		ldr	r3, .L41+72
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccwgSPeh.s 			page 9


 268 016a 1B88     		ldrh	r3, [r3]
 269 016c 1B02     		lsls	r3, r3, #8
 270 016e 7A68     		ldr	r2, [r7, #4]
 271 0170 1343     		orrs	r3, r2
 272 0172 7B60     		str	r3, [r7, #4]
 189:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             }
 190:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             #endif
 191:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 192:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             /* Check offset against buffer size */
 193:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             if(locByte < (uint32) EZI2C_1_bufSizeBuf1)
 273              		.loc 1 193 0
 274 0174 514B     		ldr	r3, .L41+84
 275 0176 1B88     		ldrh	r3, [r3]
 276 0178 1A00     		movs	r2, r3
 277 017a 7B68     		ldr	r3, [r7, #4]
 278 017c 9A42     		cmp	r2, r3
 279 017e 3AD9     		bls	.L18
 194:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             {
 195:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 EZI2C_1_I2C_SLAVE_GENERATE_ACK;
 280              		.loc 1 195 0
 281 0180 4C4B     		ldr	r3, .L41+76
 282 0182 0122     		movs	r2, #1
 283 0184 1A60     		str	r2, [r3]
 196:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 197:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 /* Update local buffer index with new offset */
 198:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 locIndex = locByte;
 284              		.loc 1 198 0
 285 0186 7B68     		ldr	r3, [r7, #4]
 286 0188 FB61     		str	r3, [r7, #28]
 199:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 200:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 /* Get available buffer size to write */
 201:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 locBufSize = (uint16) ((locByte < EZI2C_1_protectBuf1) ?
 287              		.loc 1 201 0
 288 018a 4D4B     		ldr	r3, .L41+88
 289 018c 1B88     		ldrh	r3, [r3]
 290 018e 1A00     		movs	r2, r3
 291 0190 7B68     		ldr	r3, [r7, #4]
 292 0192 9A42     		cmp	r2, r3
 293 0194 06D9     		bls	.L19
 294              		.loc 1 201 0 is_stmt 0 discriminator 1
 295 0196 4A4B     		ldr	r3, .L41+88
 296 0198 1A88     		ldrh	r2, [r3]
 297 019a 7B68     		ldr	r3, [r7, #4]
 298 019c 9BB2     		uxth	r3, r3
 299 019e D31A     		subs	r3, r2, r3
 300 01a0 9AB2     		uxth	r2, r3
 301 01a2 00E0     		b	.L20
 302              	.L19:
 303              		.loc 1 201 0 discriminator 2
 304 01a4 0022     		movs	r2, #0
 305              	.L20:
 306              		.loc 1 201 0 discriminator 4
 307 01a6 424B     		ldr	r3, .L41+72
 308 01a8 1A80     		strh	r2, [r3]
 202:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                                        (EZI2C_1_protectBuf1 - locByte) : (0u));
 203:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 204:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             #if(EZI2C_1_CY_SCBIP_V0)
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccwgSPeh.s 			page 10


 205:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 206:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 if(locBufSize < EZI2C_1_EZI2C_FIFO_SIZE)
 309              		.loc 1 206 0 is_stmt 1 discriminator 4
 310 01aa 414B     		ldr	r3, .L41+72
 311 01ac 1B88     		ldrh	r3, [r3]
 312 01ae 072B     		cmp	r3, #7
 313 01b0 03D8     		bhi	.L21
 207:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 {
 208:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                     /* Set FSM state to receive byte by byte */
 209:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                     EZI2C_1_fsmState = EZI2C_1_EZI2C_FSM_BYTE_WRITE;
 314              		.loc 1 209 0
 315 01b2 3B4B     		ldr	r3, .L41+56
 316 01b4 0122     		movs	r2, #1
 317 01b6 1A70     		strb	r2, [r3]
 318 01b8 18E0     		b	.L22
 319              	.L21:
 210:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 }
 211:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 /* Receive RX FIFO chunks */
 212:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 else if(locBufSize == EZI2C_1_EZI2C_FIFO_SIZE)
 320              		.loc 1 212 0
 321 01ba 3D4B     		ldr	r3, .L41+72
 322 01bc 1B88     		ldrh	r3, [r3]
 323 01be 082B     		cmp	r3, #8
 324 01c0 0AD1     		bne	.L23
 213:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 {
 214:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                     EZI2C_1_ENABLE_SLAVE_AUTO_DATA; /* NACK when RX FIFO is full */
 325              		.loc 1 214 0
 326 01c2 314B     		ldr	r3, .L41+32
 327 01c4 304A     		ldr	r2, .L41+32
 328 01c6 1268     		ldr	r2, [r2]
 329 01c8 A021     		movs	r1, #160
 330 01ca 0902     		lsls	r1, r1, #8
 331 01cc 0A43     		orrs	r2, r1
 332 01ce 1A60     		str	r2, [r3]
 215:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                     EZI2C_1_SetRxInterruptMode(EZI2C_1_NO_INTR_SOURCES);
 333              		.loc 1 215 0
 334 01d0 2F4B     		ldr	r3, .L41+40
 335 01d2 0022     		movs	r2, #0
 336 01d4 1A60     		str	r2, [r3]
 337 01d6 09E0     		b	.L22
 338              	.L23:
 216:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 }
 217:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 else
 218:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 {
 219:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                     EZI2C_1_ENABLE_SLAVE_AUTO_DATA_ACK; /* Stretch when RX FIFO is 
 339              		.loc 1 219 0
 340 01d8 2B4B     		ldr	r3, .L41+32
 341 01da 2B4A     		ldr	r2, .L41+32
 342 01dc 1268     		ldr	r2, [r2]
 343 01de 8021     		movs	r1, #128
 344 01e0 8901     		lsls	r1, r1, #6
 345 01e2 0A43     		orrs	r2, r1
 346 01e4 1A60     		str	r2, [r3]
 220:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                     EZI2C_1_SetRxInterruptMode(EZI2C_1_INTR_RX_FULL);
 347              		.loc 1 220 0
 348 01e6 2A4B     		ldr	r3, .L41+40
 349 01e8 0822     		movs	r2, #8
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccwgSPeh.s 			page 11


 350 01ea 1A60     		str	r2, [r3]
 351              	.L22:
 221:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 }
 222:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 223:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             #else
 224:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 225:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 #if(EZI2C_1_SECONDARY_ADDRESS_ENABLE)
 226:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 {
 227:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                     /* Set FSM state to receive byte by byte.
 228:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                     * The byte by byte receive is always chosen for two addresses. 
 229:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                     */
 230:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                     EZI2C_1_fsmState = EZI2C_1_EZI2C_FSM_BYTE_WRITE;
 231:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 }
 232:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 #else
 233:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 {
 234:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                     if (locBufSize < EZI2C_1_EZI2C_FIFO_SIZE)
 235:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                     {
 236:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                         /* Set FSM state to receive byte by byte */
 237:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                         EZI2C_1_fsmState = EZI2C_1_EZI2C_FSM_BYTE_WRITE;
 238:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                     }
 239:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                     /* Receive RX FIFO chunks */
 240:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                     else if (locBufSize == EZI2C_1_EZI2C_FIFO_SIZE)
 241:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                     {
 242:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                         EZI2C_1_ENABLE_SLAVE_AUTO_DATA; /* NACK when RX FIFO is ful
 243:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                         EZI2C_1_SetRxInterruptMode(EZI2C_1_NO_INTR_SOURCES);
 244:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                     }
 245:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                     else
 246:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                     {
 247:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                         EZI2C_1_ENABLE_SLAVE_AUTO_DATA_ACK; /* Stretch when RX FIFO
 248:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                         EZI2C_1_SetRxInterruptMode(EZI2C_1_INTR_RX_FULL);
 249:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                     }
 250:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 }
 251:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 #endif
 252:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 253:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             #endif /* (EZI2C_1_CY_SCBIP_V0) */
 254:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 255:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 /* Store local offset into global variable */
 256:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 EZI2C_1_EZI2C_SET_OFFSET(activeAddress, locIndex);
 352              		.loc 1 256 0
 353 01ec FB69     		ldr	r3, [r7, #28]
 354 01ee 9AB2     		uxth	r2, r3
 355 01f0 244B     		ldr	r3, .L41+28
 356 01f2 1A80     		strh	r2, [r3]
 257:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             }
 258:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             else
 259:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             {
 260:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 /* Discard offset byte and NACK */
 261:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 EZI2C_1_I2C_SLAVE_GENERATE_NACK;
 262:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             }
 263:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             break;
 357              		.loc 1 263 0
 358 01f4 06E0     		b	.L17
 359              	.L18:
 261:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             }
 360              		.loc 1 261 0
 361 01f6 FFF7FEFF 		bl	EZI2C_1_I2CSlaveNackGeneration
 362              		.loc 1 263 0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccwgSPeh.s 			page 12


 363 01fa 03E0     		b	.L17
 364              	.L40:
 264:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 265:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         default:
 266:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             CYASSERT(0u != 0u); /* Should never get there */
 365              		.loc 1 266 0
 366 01fc 0020     		movs	r0, #0
 367 01fe FFF7FEFF 		bl	CyHalt
 267:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             break;
 368              		.loc 1 267 0
 369 0202 C046     		nop
 370              	.L17:
 268:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         }
 269:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 270:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         EZI2C_1_ClearRxInterruptSource(EZI2C_1_INTR_RX_NOT_EMPTY);
 371              		.loc 1 270 0
 372 0204 234B     		ldr	r3, .L41+44
 373 0206 0422     		movs	r2, #4
 374 0208 1A60     		str	r2, [r3]
 375 020a 7EE0     		b	.L9
 376              	.L10:
 271:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     }
 272:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 }
 273:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 /* INTR_RX.FULL, INTR_SLAVE.I2C_STOP */
 274:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 /* Receive FIFO chunks: auto data ACK is enabled */
 275:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 else if (0u != (EZI2C_1_I2C_CTRL_REG & EZI2C_1_I2C_CTRL_S_READY_DATA_ACK))
 377              		.loc 1 275 0
 378 020c 1E4B     		ldr	r3, .L41+32
 379 020e 1A68     		ldr	r2, [r3]
 380 0210 8023     		movs	r3, #128
 381 0212 9B01     		lsls	r3, r3, #6
 382 0214 1340     		ands	r3, r2
 383 0216 00D1     		bne	.LCB325
 384 0218 77E0     		b	.L9	@long jump
 385              	.LCB325:
 276:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 {
 277:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     /* Slave interrupt (I2C_STOP or I2C_ADDR_MATCH) leads to completion of read.
 278:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     * A completion event has a higher priority than the FIFO full.
 279:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     * Read remaining data from RX FIFO.
 280:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     */
 281:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     if(0u != (locIntrCause & EZI2C_1_INTR_CAUSE_SLAVE))
 386              		.loc 1 281 0
 387 021a BB68     		ldr	r3, [r7, #8]
 388 021c 0222     		movs	r2, #2
 389 021e 1340     		ands	r3, r2
 390 0220 0DD0     		beq	.L25
 282:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     {
 283:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         /* Read remaining bytes from RX FIFO */
 284:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         fifoIndex = EZI2C_1_GET_RX_FIFO_ENTRIES;
 391              		.loc 1 284 0
 392 0222 284B     		ldr	r3, .L41+92
 393 0224 1B68     		ldr	r3, [r3]
 394 0226 0F22     		movs	r2, #15
 395 0228 1340     		ands	r3, r2
 396 022a 3B61     		str	r3, [r7, #16]
 285:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 286:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         #if(EZI2C_1_SECONDARY_ADDRESS_ENABLE)
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccwgSPeh.s 			page 13


 287:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         {
 288:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             /* Update with current address match */
 289:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             if(EZI2C_1_CHECK_INTR_SLAVE_MASKED(EZI2C_1_INTR_SLAVE_I2C_ADDR_MATCH))
 290:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             {
 291:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 /* Update RX FIFO entries as address byte is there now */
 292:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 fifoIndex = EZI2C_1_GET_RX_FIFO_ENTRIES;
 293:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 294:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 /* If SR is valid, RX FIFO is full and address is in SHIFTER:
 295:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 * read 8 entries and leave address in RX FIFO for further processin
 296:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 * If SR is invalid, address is already in RX FIFO: read (entries-1)
 297:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 */
 298:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                 fifoIndex -= ((0u != EZI2C_1_GET_RX_FIFO_SR_VALID) ? (0u) : (1u));
 299:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             }
 300:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         }
 301:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         #endif
 302:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 303:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         EZI2C_1_DISABLE_SLAVE_AUTO_DATA;
 397              		.loc 1 303 0
 398 022c 164B     		ldr	r3, .L41+32
 399 022e 164A     		ldr	r2, .L41+32
 400 0230 1268     		ldr	r2, [r2]
 401 0232 1649     		ldr	r1, .L41+36
 402 0234 0A40     		ands	r2, r1
 403 0236 1A60     		str	r2, [r3]
 304:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         endTransfer = EZI2C_1_EZI2C_CONTINUE_TRANSFER;
 404              		.loc 1 304 0
 405 0238 0123     		movs	r3, #1
 406 023a 7B61     		str	r3, [r7, #20]
 407 023c 52E0     		b	.L28
 408              	.L25:
 305:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     }
 306:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     else
 307:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     /* INTR_RX_FULL */
 308:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     /* Continue transfer or disable INTR_RX_FULL to catch completion event. */
 309:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     {
 310:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         /* Calculate buffer size available to write data into */
 311:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         locBufSize -= (uint16) EZI2C_1_EZI2C_FIFO_SIZE;
 409              		.loc 1 311 0
 410 023e 1C4B     		ldr	r3, .L41+72
 411 0240 1B88     		ldrh	r3, [r3]
 412 0242 083B     		subs	r3, r3, #8
 413 0244 9AB2     		uxth	r2, r3
 414 0246 1A4B     		ldr	r3, .L41+72
 415 0248 1A80     		strh	r2, [r3]
 312:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 313:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         if(locBufSize <= EZI2C_1_EZI2C_FIFO_SIZE)
 416              		.loc 1 313 0
 417 024a 194B     		ldr	r3, .L41+72
 418 024c 1B88     		ldrh	r3, [r3]
 419 024e 082B     		cmp	r3, #8
 420 0250 05D8     		bhi	.L27
 314:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         {
 315:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             /* Send NACK when RX FIFO overflow */
 316:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             fifoIndex   = locBufSize;
 421              		.loc 1 316 0
 422 0252 174B     		ldr	r3, .L41+72
 423 0254 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccwgSPeh.s 			page 14


 424 0256 3B61     		str	r3, [r7, #16]
 317:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             endTransfer = EZI2C_1_EZI2C_COMPLETE_TRANSFER;
 425              		.loc 1 317 0
 426 0258 0023     		movs	r3, #0
 427 025a 7B61     		str	r3, [r7, #20]
 428 025c 42E0     		b	.L28
 429              	.L27:
 318:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         }
 319:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         else
 320:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         {
 321:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             /* Continue  transaction */
 322:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             fifoIndex   = EZI2C_1_EZI2C_FIFO_SIZE;
 430              		.loc 1 322 0
 431 025e 0823     		movs	r3, #8
 432 0260 3B61     		str	r3, [r7, #16]
 323:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             endTransfer = EZI2C_1_EZI2C_CONTINUE_TRANSFER;
 433              		.loc 1 323 0
 434 0262 0123     		movs	r3, #1
 435 0264 7B61     		str	r3, [r7, #20]
 324:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         }
 325:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     }
 326:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 327:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     for(; (0u != fifoIndex); fifoIndex--)
 436              		.loc 1 327 0
 437 0266 3DE0     		b	.L28
 438              	.L42:
 439              		.align	2
 440              	.L41:
 441 0268 00000000 		.word	EZI2C_1_customIntrHandler
 442 026c 00000000 		.word	EZI2C_1_indexBuf1
 443 0270 400F0740 		.word	1074204480
 444 0274 000E0740 		.word	1074204160
 445 0278 00000740 		.word	1074200576
 446 027c 00000000 		.word	EZI2C_1_curStatus
 447 0280 880F0740 		.word	1074204552
 448 0284 00000000 		.word	EZI2C_1_offsetBuf1
 449 0288 60000740 		.word	1074200672
 450 028c FF5FFFFF 		.word	-40961
 451 0290 C80F0740 		.word	1074204616
 452 0294 C00F0740 		.word	1074204608
 453 0298 ED0F0000 		.word	4077
 454 029c FF0F0000 		.word	4095
 455 02a0 00000000 		.word	EZI2C_1_fsmState
 456 02a4 880E0740 		.word	1074204296
 457 02a8 CC0F0740 		.word	1074204620
 458 02ac 40030740 		.word	1074201408
 459 02b0 00000000 		.word	locBufSize.4923
 460 02b4 6C000740 		.word	1074200684
 461 02b8 00000000 		.word	EZI2C_1_dataBuffer1
 462 02bc 00000000 		.word	EZI2C_1_bufSizeBuf1
 463 02c0 00000000 		.word	EZI2C_1_protectBuf1
 464 02c4 08030740 		.word	1074201352
 465              	.L29:
 328:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     {
 329:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         /* Store data in buffer */
 330:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         EZI2C_1_dataBuffer1[locIndex] = (uint8) EZI2C_1_RX_FIFO_RD_REG;
 466              		.loc 1 330 0 discriminator 2
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccwgSPeh.s 			page 15


 467 02c8 5D4B     		ldr	r3, .L43
 468 02ca 1A68     		ldr	r2, [r3]
 469 02cc FB69     		ldr	r3, [r7, #28]
 470 02ce D218     		adds	r2, r2, r3
 471 02d0 5C4B     		ldr	r3, .L43+4
 472 02d2 1B68     		ldr	r3, [r3]
 473 02d4 DBB2     		uxtb	r3, r3
 474 02d6 1370     		strb	r3, [r2]
 331:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         locIndex++;
 475              		.loc 1 331 0 discriminator 2
 476 02d8 FB69     		ldr	r3, [r7, #28]
 477 02da 0133     		adds	r3, r3, #1
 478 02dc FB61     		str	r3, [r7, #28]
 327:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     {
 479              		.loc 1 327 0 discriminator 2
 480 02de 3B69     		ldr	r3, [r7, #16]
 481 02e0 013B     		subs	r3, r3, #1
 482 02e2 3B61     		str	r3, [r7, #16]
 483              	.L28:
 327:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     {
 484              		.loc 1 327 0 is_stmt 0 discriminator 1
 485 02e4 3B69     		ldr	r3, [r7, #16]
 486 02e6 002B     		cmp	r3, #0
 487 02e8 EED1     		bne	.L29
 332:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     }
 333:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 334:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     /* Complete transfer sending NACK when RX FIFO overflow */
 335:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     if(EZI2C_1_EZI2C_COMPLETE_TRANSFER == endTransfer)
 488              		.loc 1 335 0 is_stmt 1
 489 02ea 7B69     		ldr	r3, [r7, #20]
 490 02ec 002B     		cmp	r3, #0
 491 02ee 09D1     		bne	.L30
 336:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     {
 337:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         EZI2C_1_ENABLE_SLAVE_AUTO_DATA_NACK;
 492              		.loc 1 337 0
 493 02f0 554B     		ldr	r3, .L43+8
 494 02f2 554A     		ldr	r2, .L43+8
 495 02f4 1268     		ldr	r2, [r2]
 496 02f6 8021     		movs	r1, #128
 497 02f8 0902     		lsls	r1, r1, #8
 498 02fa 0A43     		orrs	r2, r1
 499 02fc 1A60     		str	r2, [r3]
 338:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 339:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         /* Disable INTR_RX_FULL during last RX FIFO chunk reception */
 340:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         EZI2C_1_SetRxInterruptMode(EZI2C_1_NO_INTR_SOURCES);
 500              		.loc 1 340 0
 501 02fe 534B     		ldr	r3, .L43+12
 502 0300 0022     		movs	r2, #0
 503 0302 1A60     		str	r2, [r3]
 504              	.L30:
 341:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     }
 342:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 343:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     EZI2C_1_ClearRxInterruptSource(EZI2C_1_INTR_RX_FULL |
 505              		.loc 1 343 0
 506 0304 524B     		ldr	r3, .L43+16
 507 0306 0C22     		movs	r2, #12
 508 0308 1A60     		str	r2, [r3]
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccwgSPeh.s 			page 16


 509              	.L9:
 344:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                                                             EZI2C_1_INTR_RX_NOT_EMPTY);
 345:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 }
 346:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 else
 347:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 {
 348:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     /* Exit for slave interrupts which are not active for RX direction:
 349:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     * INTR_SLAVE.I2C_ADDR_MATCH and INTR_SLAVE.I2C_STOP while byte-by-byte receptio
 350:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     */
 351:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 }
 352:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****             }
 353:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 354:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****             if(0u != (locIntrCause & EZI2C_1_INTR_CAUSE_SLAVE))
 510              		.loc 1 354 0
 511 030a BB68     		ldr	r3, [r7, #8]
 512 030c 0222     		movs	r2, #2
 513 030e 1340     		ands	r3, r2
 514 0310 67D0     		beq	.L31
 355:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****             {
 356:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 /* INTR_SLAVE.I2C_STOP */
 357:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 /* Catch Stop condition: completion of write or read transfer */
 358:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****             #if(!EZI2C_1_SECONDARY_ADDRESS_ENABLE_CONST)
 359:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 if(0u != (locIntrSlave & EZI2C_1_INTR_SLAVE_I2C_STOP))
 515              		.loc 1 359 0
 516 0312 FB68     		ldr	r3, [r7, #12]
 517 0314 1022     		movs	r2, #16
 518 0316 1340     		ands	r3, r2
 519 0318 27D0     		beq	.L32
 360:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****             #else
 361:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 /* Prevent triggering when matched address was NACKed */
 362:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 if((0u != (locIntrSlave & EZI2C_1_INTR_SLAVE_I2C_STOP)) &&
 363:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                    (0u != ((uint8) EZI2C_1_EZI2C_STATUS_BUSY & EZI2C_1_curStatus)))
 364:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****             #endif
 365:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 {
 366:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     /* Disable TX and RX interrupt sources */
 367:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     EZI2C_1_SetRxInterruptMode(EZI2C_1_NO_INTR_SOURCES);
 520              		.loc 1 367 0
 521 031a 4C4B     		ldr	r3, .L43+12
 522 031c 0022     		movs	r2, #0
 523 031e 1A60     		str	r2, [r3]
 368:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     EZI2C_1_SetTxInterruptMode(EZI2C_1_NO_INTR_SOURCES);
 524              		.loc 1 368 0
 525 0320 4C4B     		ldr	r3, .L43+20
 526 0322 0022     		movs	r2, #0
 527 0324 1A60     		str	r2, [r3]
 369:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 370:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     /* Set read completion mask */
 371:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     locStatus = EZI2C_1_INTR_SLAVE_I2C_NACK;
 528              		.loc 1 371 0
 529 0326 0223     		movs	r3, #2
 530 0328 BB61     		str	r3, [r7, #24]
 372:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 373:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     /* Check if buffer content was modified: the address phase resets the locIndex 
 374:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     if(locIndex != EZI2C_1_EZI2C_GET_OFFSET(activeAddress))
 531              		.loc 1 374 0
 532 032a 4B4B     		ldr	r3, .L43+24
 533 032c 1B88     		ldrh	r3, [r3]
 534 032e 1A00     		movs	r2, r3
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccwgSPeh.s 			page 17


 535 0330 FB69     		ldr	r3, [r7, #28]
 536 0332 9A42     		cmp	r2, r3
 537 0334 03D0     		beq	.L33
 375:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     {
 376:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         locStatus |= EZI2C_1_INTR_SLAVE_I2C_WRITE_STOP;
 538              		.loc 1 376 0
 539 0336 BB69     		ldr	r3, [r7, #24]
 540 0338 0822     		movs	r2, #8
 541 033a 1343     		orrs	r3, r2
 542 033c BB61     		str	r3, [r7, #24]
 543              	.L33:
 377:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     }
 378:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 379:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     /* Complete read or write transaction */
 380:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     locStatus &= locIntrSlave;
 544              		.loc 1 380 0
 545 033e BB69     		ldr	r3, [r7, #24]
 546 0340 FA68     		ldr	r2, [r7, #12]
 547 0342 1340     		ands	r3, r2
 548 0344 BB61     		str	r3, [r7, #24]
 381:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     EZI2C_1_EZI2C_UPDATE_LOC_STATUS(activeAddress, locStatus);
 382:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     locStatus |= (uint32)  EZI2C_1_curStatus;
 549              		.loc 1 382 0
 550 0346 454B     		ldr	r3, .L43+28
 551 0348 1B78     		ldrb	r3, [r3]
 552 034a DBB2     		uxtb	r3, r3
 553 034c 1A00     		movs	r2, r3
 554 034e BB69     		ldr	r3, [r7, #24]
 555 0350 1343     		orrs	r3, r2
 556 0352 BB61     		str	r3, [r7, #24]
 383:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     locStatus &= (uint32) ~EZI2C_1_EZI2C_STATUS_BUSY;
 557              		.loc 1 383 0
 558 0354 BB69     		ldr	r3, [r7, #24]
 559 0356 2022     		movs	r2, #32
 560 0358 9343     		bics	r3, r2
 561 035a BB61     		str	r3, [r7, #24]
 384:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     EZI2C_1_curStatus = (uint8) locStatus;
 562              		.loc 1 384 0
 563 035c BB69     		ldr	r3, [r7, #24]
 564 035e DAB2     		uxtb	r2, r3
 565 0360 3E4B     		ldr	r3, .L43+28
 566 0362 1A70     		strb	r2, [r3]
 385:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 386:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     EZI2C_1_fsmState = EZI2C_1_EZI2C_FSM_IDLE;
 567              		.loc 1 386 0
 568 0364 3E4B     		ldr	r3, .L43+32
 569 0366 0222     		movs	r2, #2
 570 0368 1A70     		strb	r2, [r3]
 571              	.L32:
 387:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 388:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     #if(EZI2C_1_SECONDARY_ADDRESS_ENABLE)
 389:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     {
 390:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         /* Store local index into global variable, before address phase */
 391:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         EZI2C_1_EZI2C_SET_INDEX(activeAddress, locIndex);
 392:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     }
 393:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     #endif
 394:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 }
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccwgSPeh.s 			page 18


 395:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 396:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 /* INTR_SLAVE.I2C_ADDR_MATCH */
 397:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 /* The matched address is received: the slave starts its operation.
 398:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 * INTR_SLAVE_I2C_STOP updates the buffer index before the address phase for two add
 399:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 * This is done to update buffer index correctly before the address phase changes it
 400:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 */
 401:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 if(0u != (locIntrSlave & EZI2C_1_INTR_SLAVE_I2C_ADDR_MATCH))
 572              		.loc 1 401 0
 573 036a FB68     		ldr	r3, [r7, #12]
 574 036c 4022     		movs	r2, #64
 575 036e 1340     		ands	r3, r2
 576 0370 34D0     		beq	.L34
 402:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 {
 403:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     #if(EZI2C_1_SECONDARY_ADDRESS_ENABLE)
 404:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     {
 405:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         /* Read address byte from RX FIFO */
 406:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         locByte = EZI2C_1_GET_I2C_7BIT_ADDRESS(EZI2C_1_RX_FIFO_RD_REG);
 407:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 408:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         EZI2C_1_ClearRxInterruptSource(EZI2C_1_INTR_RX_NOT_EMPTY);
 409:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 410:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         /* Check received address against device addresses */
 411:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         if(EZI2C_1_addrBuf1 == locByte)
 412:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         {
 413:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             /* Set buffer exposed to primary slave address */
 414:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             EZI2C_1_dataBuffer = EZI2C_1_dataBuffer1;
 415:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             EZI2C_1_bufSizeBuf = EZI2C_1_bufSizeBuf1;
 416:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             EZI2C_1_protectBuf = EZI2C_1_protectBuf1;
 417:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 418:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             activeAddress = EZI2C_1_EZI2C_ACTIVE_ADDRESS1;
 419:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         }
 420:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         else if(EZI2C_1_addrBuf2 == locByte)
 421:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         {
 422:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             /* Set buffer exposed to secondary slave address */
 423:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             EZI2C_1_dataBuffer = EZI2C_1_dataBuffer2;
 424:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             EZI2C_1_bufSizeBuf = EZI2C_1_bufSizeBuf2;
 425:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             EZI2C_1_protectBuf = EZI2C_1_protectBuf2;
 426:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 427:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             activeAddress = EZI2C_1_EZI2C_ACTIVE_ADDRESS2;
 428:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         }
 429:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         else
 430:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         {
 431:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             /* Address does not match */
 432:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             ackResponse = EZI2C_1_EZI2C_NACK_RECEIVED_ADDRESS;
 433:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         }
 434:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     }
 435:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     #endif
 436:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 437:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 #if(EZI2C_1_SECONDARY_ADDRESS_ENABLE_CONST)
 438:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     if(EZI2C_1_EZI2C_NACK_RECEIVED_ADDRESS == ackResponse)
 439:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     {
 440:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         /* Clear interrupt sources before NACK address */
 441:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         EZI2C_1_ClearI2CExtClkInterruptSource(EZI2C_1_INTR_I2C_EC_WAKE_UP);
 442:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         EZI2C_1_ClearSlaveInterruptSource(EZI2C_1_INTR_SLAVE_ALL);
 443:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 444:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     #if(!EZI2C_1_CY_SCBIP_V0)
 445:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         /* Disable INTR_I2C_STOP to not trigger after matched address is NACKed. Ti
 446:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         EZI2C_1_DISABLE_INTR_SLAVE(EZI2C_1_INTR_SLAVE_I2C_STOP);
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccwgSPeh.s 			page 19


 447:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     #endif /* (!EZI2C_1_CY_SCBIP_V0) */
 448:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 449:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         /* NACK address byte: it does not match neither primary nor secondary */
 450:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         EZI2C_1_I2C_SLAVE_GENERATE_NACK;
 451:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     }
 452:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     else
 453:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 #endif /* (EZI2C_1_SECONDARY_ADDRESS_ENABLE_CONST) */
 454:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     {
 455:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 456:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     #if(EZI2C_1_SCB_MODE_UNCONFIG_CONST_CFG)
 457:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         if(!EZI2C_1_SECONDARY_ADDRESS_ENABLE)
 458:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         {
 459:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             /* Set buffer exposed to primary slave address */
 460:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             EZI2C_1_dataBuffer = EZI2C_1_dataBuffer1;
 461:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             EZI2C_1_bufSizeBuf = EZI2C_1_bufSizeBuf1;
 462:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             EZI2C_1_protectBuf = EZI2C_1_protectBuf1;
 463:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 464:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             activeAddress = EZI2C_1_EZI2C_ACTIVE_ADDRESS1;
 465:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         }
 466:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     #endif /* (EZI2C_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 467:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 468:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         /* Bus becomes busy after address is received */
 469:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         EZI2C_1_curStatus |= (uint8) EZI2C_1_EZI2C_STATUS_BUSY;
 577              		.loc 1 469 0
 578 0372 3A4B     		ldr	r3, .L43+28
 579 0374 1B78     		ldrb	r3, [r3]
 580 0376 DBB2     		uxtb	r3, r3
 581 0378 2022     		movs	r2, #32
 582 037a 1343     		orrs	r3, r2
 583 037c DAB2     		uxtb	r2, r3
 584 037e 374B     		ldr	r3, .L43+28
 585 0380 1A70     		strb	r2, [r3]
 470:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 471:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         /* Slave is read or written: set current offset */
 472:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         locIndex = EZI2C_1_EZI2C_GET_OFFSET(activeAddress);
 586              		.loc 1 472 0
 587 0382 354B     		ldr	r3, .L43+24
 588 0384 1B88     		ldrh	r3, [r3]
 589 0386 FB61     		str	r3, [r7, #28]
 473:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 474:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         /* Check transaction direction */
 475:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         if(EZI2C_1_CHECK_I2C_STATUS(EZI2C_1_I2C_STATUS_S_READ))
 590              		.loc 1 475 0
 591 0388 364B     		ldr	r3, .L43+36
 592 038a 1B68     		ldr	r3, [r3]
 593 038c 1022     		movs	r2, #16
 594 038e 1340     		ands	r3, r2
 595 0390 18D0     		beq	.L35
 476:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         {
 477:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             /* Calculate slave buffer size */
 478:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             locBufSize = EZI2C_1_bufSizeBuf1 - (uint16) locIndex;
 596              		.loc 1 478 0
 597 0392 354B     		ldr	r3, .L43+40
 598 0394 1A88     		ldrh	r2, [r3]
 599 0396 FB69     		ldr	r3, [r7, #28]
 600 0398 9BB2     		uxth	r3, r3
 601 039a D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccwgSPeh.s 			page 20


 602 039c 9AB2     		uxth	r2, r3
 603 039e 334B     		ldr	r3, .L43+44
 604 03a0 1A80     		strh	r2, [r3]
 479:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 480:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             /* Clear TX FIFO to start fill from offset */
 481:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             EZI2C_1_CLEAR_TX_FIFO;
 605              		.loc 1 481 0
 606 03a2 334B     		ldr	r3, .L43+48
 607 03a4 324A     		ldr	r2, .L43+48
 608 03a6 1268     		ldr	r2, [r2]
 609 03a8 8021     		movs	r1, #128
 610 03aa 4902     		lsls	r1, r1, #9
 611 03ac 0A43     		orrs	r2, r1
 612 03ae 1A60     		str	r2, [r3]
 613 03b0 2F4B     		ldr	r3, .L43+48
 614 03b2 2F4A     		ldr	r2, .L43+48
 615 03b4 1268     		ldr	r2, [r2]
 616 03b6 2F49     		ldr	r1, .L43+52
 617 03b8 0A40     		ands	r2, r1
 618 03ba 1A60     		str	r2, [r3]
 482:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             EZI2C_1_SetTxInterruptMode(EZI2C_1_INTR_TX_EMPTY);
 619              		.loc 1 482 0
 620 03bc 254B     		ldr	r3, .L43+20
 621 03be 1022     		movs	r2, #16
 622 03c0 1A60     		str	r2, [r3]
 623 03c2 02E0     		b	.L36
 624              	.L35:
 483:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         }
 484:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         else
 485:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         {
 486:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             /* Master writes: enable reception interrupt. The FSM state was set in 
 487:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                             EZI2C_1_SetRxInterruptMode(EZI2C_1_INTR_RX_NOT_EMPTY);
 625              		.loc 1 487 0
 626 03c4 214B     		ldr	r3, .L43+12
 627 03c6 0422     		movs	r2, #4
 628 03c8 1A60     		str	r2, [r3]
 629              	.L36:
 488:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         }
 489:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 490:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         /* Clear interrupt sources before ACK address */
 491:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         EZI2C_1_ClearI2CExtClkInterruptSource(EZI2C_1_INTR_I2C_EC_WAKE_UP);
 630              		.loc 1 491 0
 631 03ca 2B4B     		ldr	r3, .L43+56
 632 03cc 0122     		movs	r2, #1
 633 03ce 1A60     		str	r2, [r3]
 492:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         EZI2C_1_ClearSlaveInterruptSource(EZI2C_1_INTR_SLAVE_ALL);
 634              		.loc 1 492 0
 635 03d0 2A4B     		ldr	r3, .L43+60
 636 03d2 2B4A     		ldr	r2, .L43+64
 637 03d4 1A60     		str	r2, [r3]
 493:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 494:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     #if (!EZI2C_1_CY_SCBIP_V0)
 495:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         /* Enable STOP to trigger after address match is ACKed. Ticket ID#156094 */
 496:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         EZI2C_1_ENABLE_INTR_SLAVE(EZI2C_1_INTR_SLAVE_I2C_STOP);
 497:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     #endif /* (!EZI2C_1_CY_SCBIP_V0) */
 498:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 499:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         /* ACK the address byte */
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccwgSPeh.s 			page 21


 500:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         EZI2C_1_I2C_SLAVE_GENERATE_ACK;
 638              		.loc 1 500 0
 639 03d6 2B4B     		ldr	r3, .L43+68
 640 03d8 0122     		movs	r2, #1
 641 03da 1A60     		str	r2, [r3]
 642              	.L34:
 501:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     }
 502:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 }
 503:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 504:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 /* Clear slave interrupt sources */
 505:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 EZI2C_1_ClearSlaveInterruptSource(locIntrSlave);
 643              		.loc 1 505 0
 644 03dc 274B     		ldr	r3, .L43+60
 645 03de FA68     		ldr	r2, [r7, #12]
 646 03e0 1A60     		str	r2, [r3]
 647              	.L31:
 506:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****             }
 507:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 508:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****             /* INTR_TX.EMPTY */
 509:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****             /* Transmits data to the master: loads data into the TX FIFO. The 0xFF sends out if the
 510:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****             * out the buffer. The address reception with a read flag clears the TX FIFO to be loade
 511:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****             */
 512:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****             if(0u != (EZI2C_1_GetInterruptCause() & EZI2C_1_INTR_CAUSE_TX))
 648              		.loc 1 512 0
 649 03e2 294B     		ldr	r3, .L43+72
 650 03e4 1B68     		ldr	r3, [r3]
 651 03e6 0422     		movs	r2, #4
 652 03e8 1340     		ands	r3, r2
 653 03ea 21D0     		beq	.L7
 654              	.L39:
 513:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****             {
 514:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 /* Put data into TX FIFO until there is a room */
 515:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 do
 516:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 {
 517:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     /* Check transmit buffer range: locBufSize calculates after address reception *
 518:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     if(0u != locBufSize)
 655              		.loc 1 518 0
 656 03ec 1F4B     		ldr	r3, .L43+44
 657 03ee 1B88     		ldrh	r3, [r3]
 658 03f0 002B     		cmp	r3, #0
 659 03f2 11D0     		beq	.L37
 519:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     {
 520:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         EZI2C_1_TX_FIFO_WR_REG = (uint32) EZI2C_1_dataBuffer1[locIndex];
 660              		.loc 1 520 0
 661 03f4 254A     		ldr	r2, .L43+76
 662 03f6 124B     		ldr	r3, .L43
 663 03f8 1968     		ldr	r1, [r3]
 664 03fa FB69     		ldr	r3, [r7, #28]
 665 03fc CB18     		adds	r3, r1, r3
 666 03fe 1B78     		ldrb	r3, [r3]
 667 0400 DBB2     		uxtb	r3, r3
 668 0402 1360     		str	r3, [r2]
 521:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         locIndex++;
 669              		.loc 1 521 0
 670 0404 FB69     		ldr	r3, [r7, #28]
 671 0406 0133     		adds	r3, r3, #1
 672 0408 FB61     		str	r3, [r7, #28]
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccwgSPeh.s 			page 22


 522:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         locBufSize--;
 673              		.loc 1 522 0
 674 040a 184B     		ldr	r3, .L43+44
 675 040c 1B88     		ldrh	r3, [r3]
 676 040e 013B     		subs	r3, r3, #1
 677 0410 9AB2     		uxth	r2, r3
 678 0412 164B     		ldr	r3, .L43+44
 679 0414 1A80     		strh	r2, [r3]
 680 0416 02E0     		b	.L38
 681              	.L37:
 523:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     }
 524:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     else
 525:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     {
 526:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                         EZI2C_1_TX_FIFO_WR_REG = EZI2C_1_EZI2C_OVFL_RETURN;
 682              		.loc 1 526 0
 683 0418 1C4B     		ldr	r3, .L43+76
 684 041a FF22     		movs	r2, #255
 685 041c 1A60     		str	r2, [r3]
 686              	.L38:
 527:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                     }
 528:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 }
 529:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 while(EZI2C_1_EZI2C_FIFO_SIZE != EZI2C_1_GET_TX_FIFO_ENTRIES);
 687              		.loc 1 529 0
 688 041e 1C4B     		ldr	r3, .L43+80
 689 0420 1B68     		ldr	r3, [r3]
 690 0422 0F22     		movs	r2, #15
 691 0424 1340     		ands	r3, r2
 692 0426 082B     		cmp	r3, #8
 693 0428 E0D1     		bne	.L39
 530:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 531:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****                 EZI2C_1_ClearTxInterruptSource(EZI2C_1_INTR_TX_EMPTY);
 694              		.loc 1 531 0
 695 042a 1A4B     		ldr	r3, .L43+84
 696 042c 1022     		movs	r2, #16
 697 042e 1A60     		str	r2, [r3]
 698              	.L7:
 532:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****             }
 533:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         }
 534:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 535:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         /* Store local index copy into global variable */
 536:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         EZI2C_1_EZI2C_SET_INDEX(activeAddress, locIndex);
 699              		.loc 1 536 0
 700 0430 FB69     		ldr	r3, [r7, #28]
 701 0432 9AB2     		uxth	r2, r3
 702 0434 184B     		ldr	r3, .L43+88
 703 0436 1A80     		strh	r2, [r3]
 537:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 538:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****     #ifdef EZI2C_1_EZI2C_STRETCH_ISR_EXIT_CALLBACK
 539:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****         EZI2C_1_EZI2C_STRETCH_ISR_ExitCallback();
 540:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****     #endif /* EZI2C_1_EZI2C_STRETCH_ISR_EXIT_CALLBACK */
 541:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c **** 
 542:Generated_Source\PSoC4/EZI2C_1_EZI2C_INT.c ****     }
 704              		.loc 1 542 0
 705 0438 C046     		nop
 706 043a BD46     		mov	sp, r7
 707 043c 08B0     		add	sp, sp, #32
 708              		@ sp needed
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccwgSPeh.s 			page 23


 709 043e 80BD     		pop	{r7, pc}
 710              	.L44:
 711              		.align	2
 712              	.L43:
 713 0440 00000000 		.word	EZI2C_1_dataBuffer1
 714 0444 40030740 		.word	1074201408
 715 0448 60000740 		.word	1074200672
 716 044c C80F0740 		.word	1074204616
 717 0450 C00F0740 		.word	1074204608
 718 0454 880F0740 		.word	1074204552
 719 0458 00000000 		.word	EZI2C_1_offsetBuf1
 720 045c 00000000 		.word	EZI2C_1_curStatus
 721 0460 00000000 		.word	EZI2C_1_fsmState
 722 0464 64000740 		.word	1074200676
 723 0468 00000000 		.word	EZI2C_1_bufSizeBuf1
 724 046c 00000000 		.word	locBufSize.4923
 725 0470 04020740 		.word	1074201092
 726 0474 FFFFFEFF 		.word	-65537
 727 0478 800E0740 		.word	1074204288
 728 047c 400F0740 		.word	1074204480
 729 0480 FF0F0000 		.word	4095
 730 0484 6C000740 		.word	1074200684
 731 0488 000E0740 		.word	1074204160
 732 048c 40020740 		.word	1074201152
 733 0490 08020740 		.word	1074201096
 734 0494 800F0740 		.word	1074204544
 735 0498 00000000 		.word	EZI2C_1_indexBuf1
 736              		.cfi_endproc
 737              	.LFE0:
 738              		.size	EZI2C_1_EZI2C_STRETCH_ISR, .-EZI2C_1_EZI2C_STRETCH_ISR
 739              		.bss
 740              		.align	1
 741              	locBufSize.4923:
 742 0000 0000     		.space	2
 743              		.text
 744              	.Letext0:
 745              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 746              		.file 3 "Generated_Source\\PSoC4\\EZI2C_1_PVT.h"
 747              		.file 4 "Generated_Source\\PSoC4\\EZI2C_1_EZI2C_PVT.h"
 748              		.section	.debug_info,"",%progbits
 749              	.Ldebug_info0:
 750 0000 BF010000 		.4byte	0x1bf
 751 0004 0400     		.2byte	0x4
 752 0006 00000000 		.4byte	.Ldebug_abbrev0
 753 000a 04       		.byte	0x4
 754 000b 01       		.uleb128 0x1
 755 000c BD000000 		.4byte	.LASF35
 756 0010 0C       		.byte	0xc
 757 0011 59000000 		.4byte	.LASF36
 758 0015 E6010000 		.4byte	.LASF37
 759 0019 00000000 		.4byte	.Ldebug_ranges0+0
 760 001d 00000000 		.4byte	0
 761 0021 00000000 		.4byte	.Ldebug_line0
 762 0025 02       		.uleb128 0x2
 763 0026 01       		.byte	0x1
 764 0027 06       		.byte	0x6
 765 0028 B5020000 		.4byte	.LASF0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccwgSPeh.s 			page 24


 766 002c 02       		.uleb128 0x2
 767 002d 01       		.byte	0x1
 768 002e 08       		.byte	0x8
 769 002f 8D000000 		.4byte	.LASF1
 770 0033 02       		.uleb128 0x2
 771 0034 02       		.byte	0x2
 772 0035 05       		.byte	0x5
 773 0036 77020000 		.4byte	.LASF2
 774 003a 02       		.uleb128 0x2
 775 003b 02       		.byte	0x2
 776 003c 07       		.byte	0x7
 777 003d 34000000 		.4byte	.LASF3
 778 0041 02       		.uleb128 0x2
 779 0042 04       		.byte	0x4
 780 0043 05       		.byte	0x5
 781 0044 A0020000 		.4byte	.LASF4
 782 0048 02       		.uleb128 0x2
 783 0049 04       		.byte	0x4
 784 004a 07       		.byte	0x7
 785 004b A5000000 		.4byte	.LASF5
 786 004f 02       		.uleb128 0x2
 787 0050 08       		.byte	0x8
 788 0051 05       		.byte	0x5
 789 0052 32020000 		.4byte	.LASF6
 790 0056 02       		.uleb128 0x2
 791 0057 08       		.byte	0x8
 792 0058 07       		.byte	0x7
 793 0059 A8010000 		.4byte	.LASF7
 794 005d 03       		.uleb128 0x3
 795 005e 04       		.byte	0x4
 796 005f 05       		.byte	0x5
 797 0060 696E7400 		.ascii	"int\000"
 798 0064 02       		.uleb128 0x2
 799 0065 04       		.byte	0x4
 800 0066 07       		.byte	0x7
 801 0067 86010000 		.4byte	.LASF8
 802 006b 04       		.uleb128 0x4
 803 006c B7000000 		.4byte	.LASF9
 804 0070 02       		.byte	0x2
 805 0071 FC01     		.2byte	0x1fc
 806 0073 2C000000 		.4byte	0x2c
 807 0077 04       		.uleb128 0x4
 808 0078 78010000 		.4byte	.LASF10
 809 007c 02       		.byte	0x2
 810 007d FD01     		.2byte	0x1fd
 811 007f 3A000000 		.4byte	0x3a
 812 0083 04       		.uleb128 0x4
 813 0084 7F010000 		.4byte	.LASF11
 814 0088 02       		.byte	0x2
 815 0089 FE01     		.2byte	0x1fe
 816 008b 48000000 		.4byte	0x48
 817 008f 02       		.uleb128 0x2
 818 0090 04       		.byte	0x4
 819 0091 04       		.byte	0x4
 820 0092 53000000 		.4byte	.LASF12
 821 0096 02       		.uleb128 0x2
 822 0097 08       		.byte	0x8
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccwgSPeh.s 			page 25


 823 0098 04       		.byte	0x4
 824 0099 4B010000 		.4byte	.LASF13
 825 009d 02       		.uleb128 0x2
 826 009e 01       		.byte	0x1
 827 009f 08       		.byte	0x8
 828 00a0 40020000 		.4byte	.LASF14
 829 00a4 05       		.uleb128 0x5
 830 00a5 6B000000 		.4byte	0x6b
 831 00a9 04       		.uleb128 0x4
 832 00aa 00000000 		.4byte	.LASF15
 833 00ae 02       		.byte	0x2
 834 00af A802     		.2byte	0x2a8
 835 00b1 B5000000 		.4byte	0xb5
 836 00b5 05       		.uleb128 0x5
 837 00b6 83000000 		.4byte	0x83
 838 00ba 04       		.uleb128 0x4
 839 00bb BF010000 		.4byte	.LASF16
 840 00bf 02       		.byte	0x2
 841 00c0 B802     		.2byte	0x2b8
 842 00c2 C6000000 		.4byte	0xc6
 843 00c6 06       		.uleb128 0x6
 844 00c7 04       		.byte	0x4
 845 00c8 CC000000 		.4byte	0xcc
 846 00cc 07       		.uleb128 0x7
 847 00cd 02       		.uleb128 0x2
 848 00ce 08       		.byte	0x8
 849 00cf 04       		.byte	0x4
 850 00d0 A9020000 		.4byte	.LASF17
 851 00d4 02       		.uleb128 0x2
 852 00d5 04       		.byte	0x4
 853 00d6 07       		.byte	0x7
 854 00d7 29020000 		.4byte	.LASF18
 855 00db 08       		.uleb128 0x8
 856 00dc CC010000 		.4byte	.LASF38
 857 00e0 01       		.byte	0x1
 858 00e1 20       		.byte	0x20
 859 00e2 00000000 		.4byte	.LFB0
 860 00e6 9C040000 		.4byte	.LFE0-.LFB0
 861 00ea 01       		.uleb128 0x1
 862 00eb 9C       		.byte	0x9c
 863 00ec 64010000 		.4byte	0x164
 864 00f0 09       		.uleb128 0x9
 865 00f1 93010000 		.4byte	.LASF19
 866 00f5 01       		.byte	0x1
 867 00f6 22       		.byte	0x22
 868 00f7 77000000 		.4byte	0x77
 869 00fb 05       		.uleb128 0x5
 870 00fc 03       		.byte	0x3
 871 00fd 00000000 		.4byte	locBufSize.4923
 872 0101 09       		.uleb128 0x9
 873 0102 84000000 		.4byte	.LASF20
 874 0106 01       		.byte	0x1
 875 0107 23       		.byte	0x23
 876 0108 83000000 		.4byte	0x83
 877 010c 02       		.uleb128 0x2
 878 010d 91       		.byte	0x91
 879 010e 74       		.sleb128 -12
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccwgSPeh.s 			page 26


 880 010f 09       		.uleb128 0x9
 881 0110 9B000000 		.4byte	.LASF21
 882 0114 01       		.byte	0x1
 883 0115 24       		.byte	0x24
 884 0116 83000000 		.4byte	0x83
 885 011a 02       		.uleb128 0x2
 886 011b 91       		.byte	0x91
 887 011c 70       		.sleb128 -16
 888 011d 09       		.uleb128 0x9
 889 011e 47000000 		.4byte	.LASF22
 890 0122 01       		.byte	0x1
 891 0123 26       		.byte	0x26
 892 0124 83000000 		.4byte	0x83
 893 0128 02       		.uleb128 0x2
 894 0129 91       		.byte	0x91
 895 012a 6C       		.sleb128 -20
 896 012b 09       		.uleb128 0x9
 897 012c 9E010000 		.4byte	.LASF23
 898 0130 01       		.byte	0x1
 899 0131 27       		.byte	0x27
 900 0132 83000000 		.4byte	0x83
 901 0136 02       		.uleb128 0x2
 902 0137 91       		.byte	0x91
 903 0138 68       		.sleb128 -24
 904 0139 09       		.uleb128 0x9
 905 013a C1020000 		.4byte	.LASF24
 906 013e 01       		.byte	0x1
 907 013f 28       		.byte	0x28
 908 0140 83000000 		.4byte	0x83
 909 0144 02       		.uleb128 0x2
 910 0145 91       		.byte	0x91
 911 0146 5C       		.sleb128 -36
 912 0147 09       		.uleb128 0x9
 913 0148 93020000 		.4byte	.LASF25
 914 014c 01       		.byte	0x1
 915 014d 2A       		.byte	0x2a
 916 014e 83000000 		.4byte	0x83
 917 0152 02       		.uleb128 0x2
 918 0153 91       		.byte	0x91
 919 0154 60       		.sleb128 -32
 920 0155 09       		.uleb128 0x9
 921 0156 45020000 		.4byte	.LASF26
 922 015a 01       		.byte	0x1
 923 015b 2B       		.byte	0x2b
 924 015c 83000000 		.4byte	0x83
 925 0160 02       		.uleb128 0x2
 926 0161 91       		.byte	0x91
 927 0162 64       		.sleb128 -28
 928 0163 00       		.byte	0
 929 0164 0A       		.uleb128 0xa
 930 0165 1A000000 		.4byte	.LASF27
 931 0169 03       		.byte	0x3
 932 016a 3B       		.byte	0x3b
 933 016b BA000000 		.4byte	0xba
 934 016f 0A       		.uleb128 0xa
 935 0170 52010000 		.4byte	.LASF28
 936 0174 04       		.byte	0x4
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccwgSPeh.s 			page 27


 937 0175 1E       		.byte	0x1e
 938 0176 A4000000 		.4byte	0xa4
 939 017a 0A       		.uleb128 0xa
 940 017b 66020000 		.4byte	.LASF29
 941 017f 04       		.byte	0x4
 942 0180 1F       		.byte	0x1f
 943 0181 6B000000 		.4byte	0x6b
 944 0185 0A       		.uleb128 0xa
 945 0186 52020000 		.4byte	.LASF30
 946 018a 04       		.byte	0x4
 947 018b 22       		.byte	0x22
 948 018c 90010000 		.4byte	0x190
 949 0190 06       		.uleb128 0x6
 950 0191 04       		.byte	0x4
 951 0192 A4000000 		.4byte	0xa4
 952 0196 0A       		.uleb128 0xa
 953 0197 06000000 		.4byte	.LASF31
 954 019b 04       		.byte	0x4
 955 019c 23       		.byte	0x23
 956 019d 77000000 		.4byte	0x77
 957 01a1 0A       		.uleb128 0xa
 958 01a2 64010000 		.4byte	.LASF32
 959 01a6 04       		.byte	0x4
 960 01a7 24       		.byte	0x24
 961 01a8 77000000 		.4byte	0x77
 962 01ac 0A       		.uleb128 0xa
 963 01ad C9020000 		.4byte	.LASF33
 964 01b1 04       		.byte	0x4
 965 01b2 25       		.byte	0x25
 966 01b3 77000000 		.4byte	0x77
 967 01b7 0A       		.uleb128 0xa
 968 01b8 81020000 		.4byte	.LASF34
 969 01bc 04       		.byte	0x4
 970 01bd 26       		.byte	0x26
 971 01be 77000000 		.4byte	0x77
 972 01c2 00       		.byte	0
 973              		.section	.debug_abbrev,"",%progbits
 974              	.Ldebug_abbrev0:
 975 0000 01       		.uleb128 0x1
 976 0001 11       		.uleb128 0x11
 977 0002 01       		.byte	0x1
 978 0003 25       		.uleb128 0x25
 979 0004 0E       		.uleb128 0xe
 980 0005 13       		.uleb128 0x13
 981 0006 0B       		.uleb128 0xb
 982 0007 03       		.uleb128 0x3
 983 0008 0E       		.uleb128 0xe
 984 0009 1B       		.uleb128 0x1b
 985 000a 0E       		.uleb128 0xe
 986 000b 55       		.uleb128 0x55
 987 000c 17       		.uleb128 0x17
 988 000d 11       		.uleb128 0x11
 989 000e 01       		.uleb128 0x1
 990 000f 10       		.uleb128 0x10
 991 0010 17       		.uleb128 0x17
 992 0011 00       		.byte	0
 993 0012 00       		.byte	0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccwgSPeh.s 			page 28


 994 0013 02       		.uleb128 0x2
 995 0014 24       		.uleb128 0x24
 996 0015 00       		.byte	0
 997 0016 0B       		.uleb128 0xb
 998 0017 0B       		.uleb128 0xb
 999 0018 3E       		.uleb128 0x3e
 1000 0019 0B       		.uleb128 0xb
 1001 001a 03       		.uleb128 0x3
 1002 001b 0E       		.uleb128 0xe
 1003 001c 00       		.byte	0
 1004 001d 00       		.byte	0
 1005 001e 03       		.uleb128 0x3
 1006 001f 24       		.uleb128 0x24
 1007 0020 00       		.byte	0
 1008 0021 0B       		.uleb128 0xb
 1009 0022 0B       		.uleb128 0xb
 1010 0023 3E       		.uleb128 0x3e
 1011 0024 0B       		.uleb128 0xb
 1012 0025 03       		.uleb128 0x3
 1013 0026 08       		.uleb128 0x8
 1014 0027 00       		.byte	0
 1015 0028 00       		.byte	0
 1016 0029 04       		.uleb128 0x4
 1017 002a 16       		.uleb128 0x16
 1018 002b 00       		.byte	0
 1019 002c 03       		.uleb128 0x3
 1020 002d 0E       		.uleb128 0xe
 1021 002e 3A       		.uleb128 0x3a
 1022 002f 0B       		.uleb128 0xb
 1023 0030 3B       		.uleb128 0x3b
 1024 0031 05       		.uleb128 0x5
 1025 0032 49       		.uleb128 0x49
 1026 0033 13       		.uleb128 0x13
 1027 0034 00       		.byte	0
 1028 0035 00       		.byte	0
 1029 0036 05       		.uleb128 0x5
 1030 0037 35       		.uleb128 0x35
 1031 0038 00       		.byte	0
 1032 0039 49       		.uleb128 0x49
 1033 003a 13       		.uleb128 0x13
 1034 003b 00       		.byte	0
 1035 003c 00       		.byte	0
 1036 003d 06       		.uleb128 0x6
 1037 003e 0F       		.uleb128 0xf
 1038 003f 00       		.byte	0
 1039 0040 0B       		.uleb128 0xb
 1040 0041 0B       		.uleb128 0xb
 1041 0042 49       		.uleb128 0x49
 1042 0043 13       		.uleb128 0x13
 1043 0044 00       		.byte	0
 1044 0045 00       		.byte	0
 1045 0046 07       		.uleb128 0x7
 1046 0047 15       		.uleb128 0x15
 1047 0048 00       		.byte	0
 1048 0049 27       		.uleb128 0x27
 1049 004a 19       		.uleb128 0x19
 1050 004b 00       		.byte	0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccwgSPeh.s 			page 29


 1051 004c 00       		.byte	0
 1052 004d 08       		.uleb128 0x8
 1053 004e 2E       		.uleb128 0x2e
 1054 004f 01       		.byte	0x1
 1055 0050 3F       		.uleb128 0x3f
 1056 0051 19       		.uleb128 0x19
 1057 0052 03       		.uleb128 0x3
 1058 0053 0E       		.uleb128 0xe
 1059 0054 3A       		.uleb128 0x3a
 1060 0055 0B       		.uleb128 0xb
 1061 0056 3B       		.uleb128 0x3b
 1062 0057 0B       		.uleb128 0xb
 1063 0058 27       		.uleb128 0x27
 1064 0059 19       		.uleb128 0x19
 1065 005a 11       		.uleb128 0x11
 1066 005b 01       		.uleb128 0x1
 1067 005c 12       		.uleb128 0x12
 1068 005d 06       		.uleb128 0x6
 1069 005e 40       		.uleb128 0x40
 1070 005f 18       		.uleb128 0x18
 1071 0060 9642     		.uleb128 0x2116
 1072 0062 19       		.uleb128 0x19
 1073 0063 01       		.uleb128 0x1
 1074 0064 13       		.uleb128 0x13
 1075 0065 00       		.byte	0
 1076 0066 00       		.byte	0
 1077 0067 09       		.uleb128 0x9
 1078 0068 34       		.uleb128 0x34
 1079 0069 00       		.byte	0
 1080 006a 03       		.uleb128 0x3
 1081 006b 0E       		.uleb128 0xe
 1082 006c 3A       		.uleb128 0x3a
 1083 006d 0B       		.uleb128 0xb
 1084 006e 3B       		.uleb128 0x3b
 1085 006f 0B       		.uleb128 0xb
 1086 0070 49       		.uleb128 0x49
 1087 0071 13       		.uleb128 0x13
 1088 0072 02       		.uleb128 0x2
 1089 0073 18       		.uleb128 0x18
 1090 0074 00       		.byte	0
 1091 0075 00       		.byte	0
 1092 0076 0A       		.uleb128 0xa
 1093 0077 34       		.uleb128 0x34
 1094 0078 00       		.byte	0
 1095 0079 03       		.uleb128 0x3
 1096 007a 0E       		.uleb128 0xe
 1097 007b 3A       		.uleb128 0x3a
 1098 007c 0B       		.uleb128 0xb
 1099 007d 3B       		.uleb128 0x3b
 1100 007e 0B       		.uleb128 0xb
 1101 007f 49       		.uleb128 0x49
 1102 0080 13       		.uleb128 0x13
 1103 0081 3F       		.uleb128 0x3f
 1104 0082 19       		.uleb128 0x19
 1105 0083 3C       		.uleb128 0x3c
 1106 0084 19       		.uleb128 0x19
 1107 0085 00       		.byte	0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccwgSPeh.s 			page 30


 1108 0086 00       		.byte	0
 1109 0087 00       		.byte	0
 1110              		.section	.debug_aranges,"",%progbits
 1111 0000 1C000000 		.4byte	0x1c
 1112 0004 0200     		.2byte	0x2
 1113 0006 00000000 		.4byte	.Ldebug_info0
 1114 000a 04       		.byte	0x4
 1115 000b 00       		.byte	0
 1116 000c 0000     		.2byte	0
 1117 000e 0000     		.2byte	0
 1118 0010 00000000 		.4byte	.LFB0
 1119 0014 9C040000 		.4byte	.LFE0-.LFB0
 1120 0018 00000000 		.4byte	0
 1121 001c 00000000 		.4byte	0
 1122              		.section	.debug_ranges,"",%progbits
 1123              	.Ldebug_ranges0:
 1124 0000 00000000 		.4byte	.LFB0
 1125 0004 9C040000 		.4byte	.LFE0
 1126 0008 00000000 		.4byte	0
 1127 000c 00000000 		.4byte	0
 1128              		.section	.debug_line,"",%progbits
 1129              	.Ldebug_line0:
 1130 0000 33010000 		.section	.debug_str,"MS",%progbits,1
 1130      02007600 
 1130      00000201 
 1130      FB0E0D00 
 1130      01010101 
 1131              	.LASF15:
 1132 0000 72656733 		.ascii	"reg32\000"
 1132      3200
 1133              	.LASF31:
 1134 0006 455A4932 		.ascii	"EZI2C_1_bufSizeBuf1\000"
 1134      435F315F 
 1134      62756653 
 1134      697A6542 
 1134      75663100 
 1135              	.LASF27:
 1136 001a 455A4932 		.ascii	"EZI2C_1_customIntrHandler\000"
 1136      435F315F 
 1136      63757374 
 1136      6F6D496E 
 1136      74724861 
 1137              	.LASF3:
 1138 0034 73686F72 		.ascii	"short unsigned int\000"
 1138      7420756E 
 1138      7369676E 
 1138      65642069 
 1138      6E7400
 1139              	.LASF22:
 1140 0047 656E6454 		.ascii	"endTransfer\000"
 1140      72616E73 
 1140      66657200 
 1141              	.LASF12:
 1142 0053 666C6F61 		.ascii	"float\000"
 1142      7400
 1143              	.LASF36:
 1144 0059 47656E65 		.ascii	"Generated_Source\\PSoC4\\EZI2C_1_EZI2C_INT.c\000"
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccwgSPeh.s 			page 31


 1144      72617465 
 1144      645F536F 
 1144      75726365 
 1144      5C50536F 
 1145              	.LASF20:
 1146 0084 6C6F6349 		.ascii	"locIndex\000"
 1146      6E646578 
 1146      00
 1147              	.LASF1:
 1148 008d 756E7369 		.ascii	"unsigned char\000"
 1148      676E6564 
 1148      20636861 
 1148      7200
 1149              	.LASF21:
 1150 009b 6C6F6353 		.ascii	"locStatus\000"
 1150      74617475 
 1150      7300
 1151              	.LASF5:
 1152 00a5 6C6F6E67 		.ascii	"long unsigned int\000"
 1152      20756E73 
 1152      69676E65 
 1152      6420696E 
 1152      7400
 1153              	.LASF9:
 1154 00b7 75696E74 		.ascii	"uint8\000"
 1154      3800
 1155              	.LASF35:
 1156 00bd 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1156      43313120 
 1156      352E342E 
 1156      31203230 
 1156      31363036 
 1157 00f0 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1157      20726576 
 1157      6973696F 
 1157      6E203233 
 1157      37373135 
 1158 0123 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1158      66756E63 
 1158      74696F6E 
 1158      2D736563 
 1158      74696F6E 
 1159              	.LASF13:
 1160 014b 646F7562 		.ascii	"double\000"
 1160      6C6500
 1161              	.LASF28:
 1162 0152 455A4932 		.ascii	"EZI2C_1_curStatus\000"
 1162      435F315F 
 1162      63757253 
 1162      74617475 
 1162      7300
 1163              	.LASF32:
 1164 0164 455A4932 		.ascii	"EZI2C_1_protectBuf1\000"
 1164      435F315F 
 1164      70726F74 
 1164      65637442 
 1164      75663100 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccwgSPeh.s 			page 32


 1165              	.LASF10:
 1166 0178 75696E74 		.ascii	"uint16\000"
 1166      313600
 1167              	.LASF11:
 1168 017f 75696E74 		.ascii	"uint32\000"
 1168      333200
 1169              	.LASF8:
 1170 0186 756E7369 		.ascii	"unsigned int\000"
 1170      676E6564 
 1170      20696E74 
 1170      00
 1171              	.LASF19:
 1172 0193 6C6F6342 		.ascii	"locBufSize\000"
 1172      75665369 
 1172      7A6500
 1173              	.LASF23:
 1174 019e 6669666F 		.ascii	"fifoIndex\000"
 1174      496E6465 
 1174      7800
 1175              	.LASF7:
 1176 01a8 6C6F6E67 		.ascii	"long long unsigned int\000"
 1176      206C6F6E 
 1176      6720756E 
 1176      7369676E 
 1176      65642069 
 1177              	.LASF16:
 1178 01bf 63796973 		.ascii	"cyisraddress\000"
 1178      72616464 
 1178      72657373 
 1178      00
 1179              	.LASF38:
 1180 01cc 455A4932 		.ascii	"EZI2C_1_EZI2C_STRETCH_ISR\000"
 1180      435F315F 
 1180      455A4932 
 1180      435F5354 
 1180      52455443 
 1181              	.LASF37:
 1182 01e6 433A5C55 		.ascii	"C:\\Users\\jon\\Documents\\PSoC Creator\\servo_test"
 1182      73657273 
 1182      5C6A6F6E 
 1182      5C446F63 
 1182      756D656E 
 1183 0214 65725C53 		.ascii	"er\\ServoTester.cydsn\000"
 1183      6572766F 
 1183      54657374 
 1183      65722E63 
 1183      7964736E 
 1184              	.LASF18:
 1185 0229 73697A65 		.ascii	"sizetype\000"
 1185      74797065 
 1185      00
 1186              	.LASF6:
 1187 0232 6C6F6E67 		.ascii	"long long int\000"
 1187      206C6F6E 
 1187      6720696E 
 1187      7400
 1188              	.LASF14:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccwgSPeh.s 			page 33


 1189 0240 63686172 		.ascii	"char\000"
 1189      00
 1190              	.LASF26:
 1191 0245 6C6F6349 		.ascii	"locIntrSlave\000"
 1191      6E747253 
 1191      6C617665 
 1191      00
 1192              	.LASF30:
 1193 0252 455A4932 		.ascii	"EZI2C_1_dataBuffer1\000"
 1193      435F315F 
 1193      64617461 
 1193      42756666 
 1193      65723100 
 1194              	.LASF29:
 1195 0266 455A4932 		.ascii	"EZI2C_1_fsmState\000"
 1195      435F315F 
 1195      66736D53 
 1195      74617465 
 1195      00
 1196              	.LASF2:
 1197 0277 73686F72 		.ascii	"short int\000"
 1197      7420696E 
 1197      7400
 1198              	.LASF34:
 1199 0281 455A4932 		.ascii	"EZI2C_1_indexBuf1\000"
 1199      435F315F 
 1199      696E6465 
 1199      78427566 
 1199      3100
 1200              	.LASF25:
 1201 0293 6C6F6349 		.ascii	"locIntrCause\000"
 1201      6E747243 
 1201      61757365 
 1201      00
 1202              	.LASF4:
 1203 02a0 6C6F6E67 		.ascii	"long int\000"
 1203      20696E74 
 1203      00
 1204              	.LASF17:
 1205 02a9 6C6F6E67 		.ascii	"long double\000"
 1205      20646F75 
 1205      626C6500 
 1206              	.LASF0:
 1207 02b5 7369676E 		.ascii	"signed char\000"
 1207      65642063 
 1207      68617200 
 1208              	.LASF24:
 1209 02c1 6C6F6342 		.ascii	"locByte\000"
 1209      79746500 
 1210              	.LASF33:
 1211 02c9 455A4932 		.ascii	"EZI2C_1_offsetBuf1\000"
 1211      435F315F 
 1211      6F666673 
 1211      65744275 
 1211      663100
 1212              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
